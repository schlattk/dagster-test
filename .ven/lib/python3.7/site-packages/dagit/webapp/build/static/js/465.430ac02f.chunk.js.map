{"version":3,"file":"static/js/465.430ac02f.chunk.js","mappings":"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","sources":["../../core/src/app/GraphQueryImpl.ts","../../core/src/app/browser.tsx","../../core/src/app/titleOfIO.ts","../../core/src/asset-graph/AssetEdges.tsx","../../core/src/asset-graph/SidebarAssetInfo.tsx","../../core/src/asset-graph/useFindAssetLocation.tsx","../../core/src/asset-graph/AssetGraphExplorer.tsx","../../core/src/asset-graph/AssetNode.tsx","../../core/src/asset-graph/ForeignNode.tsx","../../core/src/asset-graph/layout.ts","../../core/src/asset-graph/useAssetGraphData.tsx","../../core/src/asset-graph/useLiveDataForAssetKeys.tsx","../../core/src/assets/AssetConfig.tsx","../../core/src/assets/AssetLineageElements.tsx","../../core/src/assets/AssetEventsTable.tsx","../../core/src/assets/AssetMaterializationGraphs.tsx","../../core/src/assets/CurrentRunsBanner.tsx","../../ui/src/components/Warning.tsx","../../core/src/assets/FailedRunsSinceMaterializationBanner.tsx","../../core/src/assets/LastMaterializationMetadata.tsx","../../core/src/assets/groupByPartition.tsx","../../core/src/assets/AssetEvents.tsx","../../core/src/assets/AssetLink.tsx","../../core/src/assets/AssetMetadata.tsx","../../core/src/assets/AssetValueGraph.tsx","../../core/src/assets/AssetWipeDialog.tsx","../../core/src/assets/AssetTable.tsx","../../core/src/assets/AssetsEmptyState.tsx","../../core/src/assets/useAssetView.tsx","../../core/src/assets/AssetsCatalogTable.tsx","../../core/src/partitions/PartitionsBackfill.tsx","../../core/src/assets/RunningBackfillsNotice.tsx","../../core/src/assets/LaunchAssetChoosePartitionsDialog.tsx","../../core/src/assets/LaunchAssetExecutionButton.tsx","../../core/src/assets/PartitionHealthSummary.tsx","../../core/src/dagstertype/DagsterType.tsx","../../core/src/gantt/Constants.ts","../../core/src/gantt/DynamicStepSupport.tsx","../../core/src/gantt/GanttChart.tsx","../../core/src/gantt/GanttChartModeControl.tsx","../../core/src/gantt/GanttChartTimescale.tsx","../../core/src/gantt/ZoomSlider.tsx","../../core/src/gantt/useGanttChartMode.tsx","../../core/src/gantt/GanttChartLayout.ts","../../core/src/gantt/RunGroupPanel.tsx","../../core/src/gantt/GanttStatusPanel.tsx","../../core/src/gantt/VizComponents.tsx","../../core/src/gantt/toGraphQueryItems.tsx","../../core/src/gantt/useViewport.tsx","../../core/src/graph/OpIOBox.tsx","../../core/src/graph/OpNode.tsx","../../core/src/graph/OpTags.tsx","../../core/src/graph/SVGViewport.tsx","../../core/src/graph/layout.ts","../../core/src/graph/asyncGraphLayout.ts","../../core/src/graph/common.ts","../../core/src/hooks/useDocumentTitle.tsx","../../core/src/hooks/useQueryPersistedState.tsx","../../core/src/hooks/useSelectionReducer.ts","../../core/src/instance/BackfillPartitionsRequestedDialog.tsx","../../core/src/instance/BackfillStepStatusDialog.tsx","../../core/src/instance/BackfillTerminationDialog.tsx","../../core/src/instance/BackfillTable.tsx","../../core/src/instance/BackfillUtils.tsx","../../core/src/instance/StepSummaryForRun.tsx","../../core/src/instance/LastRunSummary.tsx","../../core/src/instigation/InstigationTick.tsx","../../core/src/instigation/InstigationUtils.tsx","../../core/src/instigation/Unloadable.tsx","../../core/src/launchpad/ConfigEditorConfigPicker.tsx","../../core/src/launchpad/LaunchButton.tsx","../../core/src/launchpad/LaunchRootExecutionButton.tsx","../../core/src/launchpad/LaunchpadTransientSessionContainer.tsx","../../core/src/launchpad/LaunchpadRoot.tsx","../../ui/src/components/configeditor/codemirror-yaml/lint.js","../../ui/src/components/configeditor/codemirror-yaml/mode.tsx","../../ui/src/components/ConfigEditor.tsx","../../ui/src/components/configeditor/isHelpContextEqual.ts","../../ui/src/components/configeditor/ConfigEditorHelp.tsx","../../core/src/configeditor/ConfigEditorUtils.tsx","../../core/src/launchpad/ConfigEditorModePicker.tsx","../../core/src/launchpad/OpSelector.tsx","../../core/src/launchpad/RunPreview.tsx","../../core/src/launchpad/scaffoldType.ts","../../core/src/launchpad/LaunchpadSession.tsx","../../core/src/launchpad/LaunchpadSessionError.tsx","../../core/src/launchpad/LaunchpadSessionLoading.tsx","../../core/src/launchpad/LoadingOverlay.tsx","../../core/src/launchpad/SessionSettingsBar.tsx","../../core/src/launchpad/TagEditor.tsx","../../core/src/launchpad/showLaunchError.tsx","../../core/src/nav/RepositoryLink.tsx","../../core/src/nav/ScheduleOrSensorTag.tsx","../../core/src/ops/OpTypeSignature.tsx","../../core/src/partitions/PartitionRangeInput.tsx","../../core/src/partitions/PartitionStatus.tsx","../../core/src/partitions/PartitionRunListForStep.tsx","../../core/src/partitions/PartitionStepStatus.tsx","../../core/src/partitions/RunMatrixUtils.tsx","../../core/src/partitions/useMatrixData.tsx","../../core/src/partitions/usePartitionStepQuery.tsx","../../core/src/pipelines/CompositeSupport.ts","../../core/src/pipelines/Description.tsx","../../core/src/graph/OpEdges.tsx","../../core/src/graph/SVGComponents.tsx","../../core/src/graph/ExternalConnectionNode.tsx","../../core/src/graph/MappingLine.tsx","../../core/src/graph/ParentOpNode.tsx","../../core/src/graph/OpGraph.tsx","../../core/src/typeexplorer/TypeExplorer.tsx","../../core/src/typeexplorer/TypeExplorerContainer.tsx","../../core/src/typeexplorer/TypeList.tsx","../../core/src/typeexplorer/TypeListContainer.tsx","../../core/src/pipelines/SidebarOpExecutionGraphs.tsx","../../core/src/pipelines/SidebarOpInvocation.tsx","../../core/src/pipelines/SidebarOpContainer.tsx","../../core/src/pipelines/SidebarPipelineInfo.tsx","../../core/src/pipelines/SidebarTabbedContainer.tsx","../../core/src/pipelines/GraphExplorer.tsx","../../core/src/pipelines/GraphExplorerJobContext.tsx","../../core/src/pipelines/GraphNotices.tsx","../../core/src/pipelines/NonIdealPipelineQueryResult.tsx","../../core/src/pipelines/PipelineExplorerRoot.tsx","../../core/src/pipelines/PipelineReference.tsx","../../core/src/pipelines/PipelineRunsRoot.tsx","../../core/src/pipelines/SidebarComponents.tsx","../../core/src/pipelines/SidebarModeSection.tsx","../../core/src/pipelines/SidebarOpDefinition.tsx","../../core/src/pipelines/SidebarOpHelpers.tsx","../../core/src/pipelines/SidebarPipelineOrJobOverview.tsx","../../core/src/pipelines/useJobTitle.tsx","../../core/src/plugins/generic.tsx","../../core/src/plugins/ipynb.tsx","../../core/src/plugins/sql.tsx","../../core/src/plugins/index.ts","../../core/src/runs/LogLevel.ts","../../core/src/runs/LogsRowComponents.tsx","../../core/src/runs/CellTruncationProvider.tsx","../../core/src/runs/LogsRowStructuredContent.tsx","../../core/src/runs/LogsRow.tsx","../../core/src/runs/LogsScrollingTable.tsx","../../core/src/runs/LogsScrollingTableHeader.tsx","../../core/src/runs/NavitationBlock.tsx","../../core/src/hooks/useOnBeforeUnload.tsx","../../core/src/runs/RunActionButtons.tsx","../../core/src/runs/RunAssetKeyTags.tsx","../../core/src/runs/RunContext.tsx","../../core/src/runs/RunDetails.tsx","../../core/src/runs/RunFragments.tsx","../../core/src/runs/RunMetadataProvider.tsx","../../core/src/runs/RunStats.tsx","../../core/src/runs/RunStatusDots.tsx","../../core/src/runs/RunStatusTag.tsx","../../core/src/runs/RunStatuses.tsx","../../core/src/runs/DeletionDialog.tsx","../../core/src/runs/ReexecutionDialog.tsx","../../core/src/runs/RunActionsMenu.tsx","../../core/src/runs/RunTable.tsx","../../core/src/runs/RunTag.tsx","../../core/src/runs/RunTags.tsx","../../core/src/runs/RunUtils.tsx","../../core/src/runs/RunsFilterInput.tsx","../../core/src/runs/TerminationDialog.tsx","../../core/src/runs/TimeElapsed.tsx","../../core/src/runs/getRunFilterProviders.ts","../../core/src/runs/logNodeLevel.tsx","../../core/src/runs/useCursorPaginatedQuery.tsx","../../core/src/schedules/SchedulePartitionStatus.tsx","../../core/src/schedules/ScheduleUtils.tsx","../../core/src/schedules/SchedulerInfo.tsx","../../core/src/schedules/SchedulesNextTicks.tsx","../../core/src/schedules/SchedulesTable.tsx","../../core/src/schedules/TimestampDisplay.tsx","../../core/src/sensors/EditCursorDialog.tsx","../../core/src/sensors/SensorDetails.tsx","../../core/src/sensors/SensorFragment.tsx","../../core/src/sensors/SensorInfo.tsx","../../core/src/sensors/SensorsTable.tsx","../../core/src/typeexplorer/ConfigTypeSchema.tsx","../../core/src/typeexplorer/TypeWithTooltip.tsx","../../core/src/ui/AnchorButton.tsx","../../core/src/ui/ClearButton.tsx","../../core/src/ui/GraphQueryInput.tsx","../../core/src/ui/Loading.tsx","../../core/src/ui/MenuLink.tsx","../../core/src/ui/StickyTableContainer.tsx","../../core/src/ui/TabLink.tsx","../../core/src/ui/markdownToPlaintext.ts","../../core/src/workspace/ReloadAllButton.tsx","../../core/src/workspace/useRepositoryForRun.ts","../../ui/src/components/Alert.tsx","../../ui/src/components/ButtonGroup.tsx","../../ui/src/components/CodeMirror.tsx","../../ui/src/components/ConfigTypeSchema.tsx","../../ui/src/components/CursorControls.tsx","../../ui/src/components/MainContent.tsx","../../ui/src/components/Menu.tsx","../../ui/src/components/MetadataTable.tsx","../../ui/src/components/NonIdealState.tsx","../../ui/src/components/Page.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Select.tsx","../../ui/src/components/Slider.tsx","../../ui/src/components/SplitPanelContainer.tsx","../../ui/src/components/Tabs.tsx","../../ui/src/components/TokenizingField.tsx"],"sourcesContent":["import {isPlannedDynamicStep, dynamicKeyWithoutIndex} from '../gantt/DynamicStepSupport';\n\nconst MAX_RENDERED_FOR_EMPTY_QUERY = 100;\n\nexport interface GraphQueryItem {\n  name: string;\n  inputs: {\n    dependsOn: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  outputs: {\n    dependedBy: {\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\ntype TraverseStepFunction<T> = (item: T, callback: (nextItem: T) => void) => void;\n\nclass GraphTraverser<T extends GraphQueryItem> {\n  itemNameMap: {[name: string]: T} = {};\n\n  // TODO: One reason doing DFS on the client side is sub optimal.\n  // javascript is tail end recursive tho so we could go for ever without worrying about\n  // stack overflow problems?\n\n  constructor(items: T[]) {\n    items.forEach((item) => (this.itemNameMap[item.name] = item));\n  }\n\n  itemNamed(name: string): T | undefined {\n    return this.itemNameMap[name];\n  }\n\n  traverse(\n    item: T,\n    step: TraverseStepFunction<T>,\n    depth: number,\n    results: {[key: string]: T} = {},\n  ) {\n    results[item.name] = item;\n\n    if (depth > 0) {\n      step(item, (next) => {\n        if (!(next.name in results)) {\n          this.traverse(next, step, depth - 1, results);\n        }\n      });\n    }\n    return Object.values(results);\n  }\n\n  fetchUpstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.inputs.forEach((input) =>\n        input.dependsOn.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n\n  fetchDownstream(item: T, depth: number) {\n    const step: TraverseStepFunction<T> = (item, callback) =>\n      item.outputs.forEach((output) =>\n        output.dependedBy.forEach((d) => {\n          const item = this.itemNamed(d.solid.name);\n          item && callback(item);\n        }),\n      );\n\n    return this.traverse(item, step, depth);\n  }\n}\n\nfunction expansionDepthForClause(clause: string) {\n  return clause.includes('*') ? Number.MAX_SAFE_INTEGER : clause.length;\n}\n\nexport function filterByQuery<T extends GraphQueryItem>(items: T[], query: string) {\n  if (query === '*') {\n    return {all: items, applyingEmptyDefault: false, focus: []};\n  }\n  if (query === '') {\n    return {\n      all: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY ? [] : items,\n      applyingEmptyDefault: items.length >= MAX_RENDERED_FOR_EMPTY_QUERY,\n      focus: [],\n    };\n  }\n\n  const traverser = new GraphTraverser<T>(items);\n  const results = new Set<T>();\n  const clauses = query.split(/(,| AND | and | )/g);\n  const focus = new Set<T>();\n\n  for (const clause of clauses) {\n    const parts = /(\\*?\\+*)([.\\w\\d>\\[\\?\\]\\\"_\\/-]+)(\\+*\\*?)/.exec(clause.trim());\n    if (!parts) {\n      continue;\n    }\n    const [, parentsClause, itemName, descendentsClause] = parts;\n\n    const itemsMatching = items.filter((s) => {\n      if (isPlannedDynamicStep(itemName.replace(/\\\"/g, ''))) {\n        // When unresolved dynamic step (i.e ends with `[?]`) is selected, match all dynamic steps\n        return s.name.startsWith(dynamicKeyWithoutIndex(itemName.replace(/\\\"/g, '')));\n      } else {\n        return /\\\".*\\\"/.test(itemName)\n          ? s.name === itemName.replace(/\\\"/g, '')\n          : s.name.includes(itemName);\n      }\n    });\n\n    for (const item of itemsMatching) {\n      const upDepth = expansionDepthForClause(parentsClause);\n      const downDepth = expansionDepthForClause(descendentsClause);\n\n      focus.add(item);\n      results.add(item);\n      traverser.fetchUpstream(item, upDepth).forEach((other) => results.add(other));\n      traverser.fetchDownstream(item, downDepth).forEach((other) => results.add(other));\n    }\n  }\n\n  return {\n    all: Array.from(results),\n    focus: Array.from(focus),\n    applyingEmptyDefault: false,\n  };\n}\n","import * as React from 'react';\n\n/**\n * A hook that provides a mechanism for copying a string, triggered by user\n * behavior. If the Clipboard API is available, use it directly.\n *\n * The Clipboard can be undefined in an insecure context\n * (https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API), so we\n * also provide a fallback that uses an offscreen input and `execCommand` to\n * copy the contents. This is less ideal because it steals focus and is a DOM\n * hack, but it should still be effective enough for our needs.\n */\nexport const useCopyToClipboard = () => {\n  const clipboardAPI = navigator.clipboard;\n  const node = React.useRef<HTMLInputElement | null>(null);\n\n  React.useEffect(() => {\n    if (!clipboardAPI) {\n      node.current = document.createElement('input');\n      node.current.style.position = 'fixed';\n      node.current.style.top = '-10000px';\n      document.body.appendChild(node.current);\n    }\n\n    return () => {\n      node.current && document.body.removeChild(node.current);\n    };\n  }, [clipboardAPI]);\n\n  return React.useCallback(\n    (text: string) => {\n      if (clipboardAPI) {\n        clipboardAPI.writeText(text);\n      } else if (node.current) {\n        node.current.value = text;\n        node.current.select();\n        document.execCommand('copy');\n      }\n    },\n    [clipboardAPI],\n  );\n};\n","export const DEFAULT_RESULT_NAME = 'result';\n\nexport const titleOfIO = (i: {solid: {name: string}; definition: {name: string}}) => {\n  return i.solid.name !== DEFAULT_RESULT_NAME\n    ? `${i.solid.name}:${i.definition.name}`\n    : i.solid.name;\n};\n","import {Colors} from '@dagster-io/ui';\nimport React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {buildSVGPath} from './Utils';\nimport {AssetLayoutEdge} from './layout';\n\nexport const AssetConnectedEdges: React.FC<{\n  edges: AssetLayoutEdge[];\n  highlighted: string | null;\n}> = ({edges, highlighted}) => {\n  // Note: we render the highlighted edges twice, but it's so that the first item with\n  // all the edges in it can remain memoized.\n  return (\n    <React.Fragment>\n      <AssetEdges color={Colors.KeylineGray} edges={edges} />\n      <AssetEdges\n        color={Colors.Blue500}\n        edges={edges.filter(({fromId, toId}) => highlighted === fromId || highlighted === toId)}\n      />\n    </React.Fragment>\n  );\n};\n\nexport const AssetEdges: React.FC<{edges: AssetLayoutEdge[]; color: string}> = React.memo(\n  ({edges, color}) => (\n    <>\n      <defs>\n        <marker\n          id={`arrow${btoa(color)}`}\n          viewBox=\"0 0 8 10\"\n          refX=\"1\"\n          refY=\"5\"\n          markerUnits=\"strokeWidth\"\n          markerWidth=\"4\"\n          orient=\"auto\"\n        >\n          <path d=\"M 0 0 L 8 5 L 0 10 z\" fill={color} />\n        </marker>\n      </defs>\n      {edges.map((edge, idx) => (\n        <StyledPath\n          key={idx}\n          d={buildSVGPath({source: edge.from, target: edge.to})}\n          stroke={color}\n          markerEnd={`url(#arrow${btoa(color)})`}\n        />\n      ))}\n    </>\n  ),\n);\n\nconst StyledPath = styled('path')`\n  stroke-width: 4;\n  fill: none;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, ConfigTypeSchema, Icon, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {ASSET_NODE_CONFIG_FRAGMENT, configSchemaForAssetNode} from '../assets/AssetConfig';\nimport {AssetEvents} from '../assets/AssetEvents';\nimport {\n  AssetMetadataTable,\n  ASSET_NODE_OP_METADATA_FRAGMENT,\n  metadataForAssetNode,\n} from '../assets/AssetMetadata';\nimport {PartitionHealthSummary, usePartitionHealthData} from '../assets/PartitionHealthSummary';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\nimport {DagsterTypeSummary} from '../dagstertype/DagsterType';\nimport {DagsterTypeFragment} from '../dagstertype/types/DagsterTypeFragment';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {Description} from '../pipelines/Description';\nimport {SidebarSection, SidebarTitle} from '../pipelines/SidebarComponents';\nimport {pluginForMetadata} from '../plugins';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {LiveDataForNode, displayNameForAssetKey} from './Utils';\nimport {SidebarAssetQuery, SidebarAssetQueryVariables} from './types/SidebarAssetQuery';\n\nexport const SidebarAssetInfo: React.FC<{\n  assetKey: AssetKey;\n  liveData: LiveDataForNode;\n}> = ({assetKey, liveData}) => {\n  const partitionHealthData = usePartitionHealthData([assetKey]);\n  const {data} = useQuery<SidebarAssetQuery, SidebarAssetQueryVariables>(SIDEBAR_ASSET_QUERY, {\n    variables: {assetKey: {path: assetKey.path}},\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const {lastMaterialization} = liveData || {};\n  const asset = data?.assetNodeOrError.__typename === 'AssetNode' ? data.assetNodeOrError : null;\n  if (!asset) {\n    return (\n      <>\n        <Header assetKey={assetKey} />\n        <Box padding={{vertical: 64}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </>\n    );\n  }\n\n  const repoAddress = buildRepoAddress(asset.repository.name, asset.repository.location.name);\n  const {assetMetadata, assetType} = metadataForAssetNode(asset);\n  const hasAssetMetadata = assetType || assetMetadata.length > 0;\n  const assetConfigSchema = configSchemaForAssetNode(asset);\n\n  const OpMetadataPlugin = asset.op?.metadata && pluginForMetadata(asset.op.metadata);\n\n  return (\n    <>\n      <Header assetKey={assetKey} opName={asset.op?.name} />\n\n      <AssetEvents\n        assetKey={assetKey}\n        assetLastMaterializedAt={lastMaterialization?.timestamp}\n        assetHasDefinedPartitions={!!asset.partitionDefinition}\n        asSidebarSection\n        liveData={liveData}\n        paramsTimeWindowOnly={false}\n        params={{}}\n        setParams={() => {}}\n      />\n\n      <div style={{borderBottom: `2px solid ${Colors.Gray300}`}} />\n\n      {(asset.description || OpMetadataPlugin?.SidebarComponent || !hasAssetMetadata) && (\n        <SidebarSection title=\"Description\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <Description description={asset.description || 'No description provided.'} />\n          </Box>\n          {asset.op && OpMetadataPlugin?.SidebarComponent && (\n            <OpMetadataPlugin.SidebarComponent definition={asset.op} repoAddress={repoAddress} />\n          )}\n        </SidebarSection>\n      )}\n\n      {assetConfigSchema && (\n        <SidebarSection title=\"Config\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={assetConfigSchema}\n              typesInScope={assetConfigSchema.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n\n      {assetMetadata.length > 0 && (\n        <SidebarSection title=\"Metadata\">\n          <AssetMetadataTable assetMetadata={assetMetadata} />\n        </SidebarSection>\n      )}\n\n      {assetType && <TypeSidebarSection assetType={assetType} />}\n\n      {asset.partitionDefinition && (\n        <SidebarSection title=\"Partitions\">\n          <Box padding={{vertical: 16, horizontal: 24}} flex={{direction: 'column', gap: 16}}>\n            <p>{asset.partitionDefinition}</p>\n            <PartitionHealthSummary assetKey={asset.assetKey} data={partitionHealthData} />\n          </Box>\n        </SidebarSection>\n      )}\n    </>\n  );\n};\n\nconst TypeSidebarSection: React.FC<{\n  assetType: DagsterTypeFragment;\n}> = ({assetType}) => {\n  return (\n    <SidebarSection title=\"Type\">\n      <DagsterTypeSummary type={assetType} />\n    </SidebarSection>\n  );\n};\n\nconst Header: React.FC<{assetKey: AssetKey; opName?: string}> = ({assetKey, opName}) => {\n  const displayName = displayNameForAssetKey(assetKey);\n\n  return (\n    <Box flex={{gap: 4, direction: 'column'}} margin={{left: 24, right: 12, vertical: 16}}>\n      <SidebarTitle\n        style={{\n          marginBottom: 0,\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap',\n        }}\n      >\n        <Box>{displayName}</Box>\n        {displayName !== opName ? (\n          <Box style={{opacity: 0.5}} flex={{gap: 6, alignItems: 'center'}}>\n            <Icon name=\"op\" size={16} />\n            {opName}\n          </Box>\n        ) : undefined}\n      </SidebarTitle>\n      <AssetCatalogLink to={assetDetailsPathForKey(assetKey)}>\n        {'View in Asset Catalog '}\n        <Icon name=\"open_in_new\" color={Colors.Link} />\n      </AssetCatalogLink>\n    </Box>\n  );\n};\nconst AssetCatalogLink = styled(Link)`\n  display: flex;\n  gap: 5px;\n  padding: 6px;\n  margin: -6px;\n  align-items: center;\n  white-space: nowrap;\n`;\n\nexport const SIDEBAR_ASSET_FRAGMENT = gql`\n  fragment SidebarAssetFragment on AssetNode {\n    id\n    description\n    ...AssetNodeConfigFragment\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    partitionDefinition\n    assetKey {\n      path\n    }\n    op {\n      name\n      description\n      metadata {\n        key\n        value\n      }\n    }\n    repository {\n      id\n      name\n      location {\n        id\n        name\n      }\n    }\n\n    ...AssetNodeOpMetadataFragment\n  }\n  ${ASSET_NODE_CONFIG_FRAGMENT}\n  ${ASSET_NODE_OP_METADATA_FRAGMENT}\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n\nconst SIDEBAR_ASSET_QUERY = gql`\n  query SidebarAssetQuery($assetKey: AssetKeyInput!) {\n    assetNodeOrError(assetKey: $assetKey) {\n      __typename\n      ... on AssetNode {\n        id\n        ...SidebarAssetFragment\n      }\n    }\n  }\n  ${SIDEBAR_ASSET_FRAGMENT}\n`;\n","import {gql, useApolloClient} from '@apollo/client';\nimport React from 'react';\n\nimport {AssetKey} from '../assets/types';\nimport {AssetKeyInput} from '../types/globalTypes';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\n\nimport {isHiddenAssetGroupJob} from './Utils';\nimport {\n  AssetForNavigationQuery,\n  AssetForNavigationQueryVariables,\n} from './types/AssetForNavigationQuery';\n\nexport interface AssetLocation {\n  assetKey: AssetKey;\n  opNames: string[];\n  jobName: string | null;\n  groupName: string | null;\n  repoAddress: RepoAddress | null;\n}\n\nexport function useFindAssetLocation() {\n  const apollo = useApolloClient();\n\n  return React.useCallback(\n    async (key: AssetKeyInput): Promise<AssetLocation> => {\n      const {data} = await apollo.query<AssetForNavigationQuery, AssetForNavigationQueryVariables>({\n        query: ASSET_FOR_NAVIGATION_QUERY,\n        variables: {key},\n      });\n      if (data?.assetOrError.__typename === 'Asset' && data?.assetOrError.definition) {\n        const def = data.assetOrError.definition;\n        return {\n          assetKey: key,\n          opNames: def.opNames,\n          jobName: def.jobNames.find((jobName) => !isHiddenAssetGroupJob(jobName)) || null,\n          groupName: def.groupName,\n          repoAddress: def.repository\n            ? buildRepoAddress(def.repository.name, def.repository.location.name)\n            : null,\n        };\n      }\n      return {assetKey: key, opNames: [], jobName: null, groupName: null, repoAddress: null};\n    },\n    [apollo],\n  );\n}\n\nconst ASSET_FOR_NAVIGATION_QUERY = gql`\n  query AssetForNavigationQuery($key: AssetKeyInput!) {\n    assetOrError(assetKey: $key) {\n      __typename\n      ... on Asset {\n        id\n        definition {\n          id\n          opNames\n          jobNames\n          groupName\n          repository {\n            id\n            name\n            location {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import {Box, Checkbox, NonIdealState, SplitPanelContainer} from '@dagster-io/ui';\nimport pickBy from 'lodash/pickBy';\nimport uniq from 'lodash/uniq';\nimport without from 'lodash/without';\nimport React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  QueryRefreshState,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {LaunchAssetExecutionButton} from '../assets/LaunchAssetExecutionButton';\nimport {AssetKey} from '../assets/types';\nimport {SVGViewport} from '../graph/SVGViewport';\nimport {useAssetLayout} from '../graph/asyncGraphLayout';\nimport {closestNodeInDirection} from '../graph/common';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {\n  GraphExplorerOptions,\n  OptionsOverlay,\n  QueryOverlay,\n  RightInfoPanel,\n  RightInfoPanelContent,\n} from '../pipelines/GraphExplorer';\nimport {\n  EmptyDAGNotice,\n  EntirelyFilteredDAGNotice,\n  LargeDAGNotice,\n  LoadingNotice,\n} from '../pipelines/GraphNotices';\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {SidebarPipelineOrJobOverview} from '../pipelines/SidebarPipelineOrJobOverview';\nimport {useDidLaunchEvent} from '../runs/RunUtils';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {Loading} from '../ui/Loading';\n\nimport {AssetConnectedEdges} from './AssetEdges';\nimport {AssetNode, AssetNodeMinimal} from './AssetNode';\nimport {ForeignNode} from './ForeignNode';\nimport {SidebarAssetInfo} from './SidebarAssetInfo';\nimport {\n  GraphData,\n  graphHasCycles,\n  LiveData,\n  GraphNode,\n  isSourceAsset,\n  tokenForAssetKey,\n} from './Utils';\nimport {AssetGraphLayout} from './layout';\nimport {AssetGraphQuery_assetNodes} from './types/AssetGraphQuery';\nimport {AssetGraphFetchScope, useAssetGraphData} from './useAssetGraphData';\nimport {AssetLocation, useFindAssetLocation} from './useFindAssetLocation';\nimport {useLiveDataForAssetKeys} from './useLiveDataForAssetKeys';\n\ntype AssetNode = AssetGraphQuery_assetNodes;\n\ninterface Props {\n  options: GraphExplorerOptions;\n  setOptions?: (options: GraphExplorerOptions) => void;\n\n  fetchOptions: AssetGraphFetchScope;\n\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToForeignNode: (node: AssetLocation) => void;\n}\n\nexport const EXPERIMENTAL_MINI_SCALE = 0.5;\n\nexport const AssetGraphExplorer: React.FC<Props> = (props) => {\n  const {\n    fetchResult,\n    assetGraphData,\n    graphQueryItems,\n    graphAssetKeys,\n    allAssetKeys,\n    applyingEmptyDefault,\n  } = useAssetGraphData(props.explorerPath.opsQuery, props.fetchOptions);\n\n  const {liveResult, liveDataByNode} = useLiveDataForAssetKeys(graphAssetKeys);\n  const liveDataRefreshState = useQueryRefreshAtInterval(liveResult, FIFTEEN_SECONDS);\n\n  useDocumentTitle('Assets');\n  useDidLaunchEvent(liveResult.refetch);\n\n  return (\n    <Loading allowStaleData queryResult={fetchResult}>\n      {() => {\n        if (!assetGraphData || !allAssetKeys) {\n          return <NonIdealState icon=\"error\" title=\"Query Error\" />;\n        }\n\n        const hasCycles = graphHasCycles(assetGraphData);\n\n        if (hasCycles) {\n          return (\n            <NonIdealState\n              icon=\"error\"\n              title=\"Cycle detected\"\n              description=\"Assets dependencies form a cycle\"\n            />\n          );\n        }\n        return (\n          <AssetGraphExplorerWithData\n            key={props.explorerPath.pipelineName}\n            assetGraphData={assetGraphData}\n            allAssetKeys={allAssetKeys}\n            graphQueryItems={graphQueryItems}\n            applyingEmptyDefault={applyingEmptyDefault}\n            liveDataRefreshState={liveDataRefreshState}\n            liveDataByNode={liveDataByNode}\n            {...props}\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nexport const AssetGraphExplorerWithData: React.FC<\n  {\n    allAssetKeys: AssetKey[];\n    assetGraphData: GraphData;\n    graphQueryItems: GraphQueryItem[];\n    liveDataByNode: LiveData;\n    liveDataRefreshState: QueryRefreshState;\n    applyingEmptyDefault: boolean;\n  } & Props\n> = (props) => {\n  const {\n    options,\n    setOptions,\n    explorerPath,\n    onChangeExplorerPath,\n    onNavigateToForeignNode,\n    liveDataRefreshState,\n    liveDataByNode,\n    assetGraphData,\n    graphQueryItems,\n    applyingEmptyDefault,\n    fetchOptions,\n  } = props;\n\n  const findAssetLocation = useFindAssetLocation();\n\n  const [highlighted, setHighlighted] = React.useState<string | null>(null);\n\n  const selectedAssetValues = explorerPath.opNames[explorerPath.opNames.length - 1].split(',');\n  const selectedGraphNodes = Object.values(assetGraphData.nodes).filter((node) =>\n    selectedAssetValues.includes(tokenForAssetKey(node.definition.assetKey)),\n  );\n  const lastSelectedNode = selectedGraphNodes[selectedGraphNodes.length - 1];\n\n  const {layout, loading, async} = useAssetLayout(assetGraphData);\n\n  const viewportEl = React.useRef<SVGViewport>();\n\n  const onSelectNode = React.useCallback(\n    async (\n      e: React.MouseEvent<any> | React.KeyboardEvent<any>,\n      assetKey: {path: string[]},\n      node: GraphNode | null,\n    ) => {\n      e.stopPropagation();\n\n      const token = tokenForAssetKey(assetKey);\n      const nodeIsInDisplayedGraph = node?.definition;\n\n      if (!nodeIsInDisplayedGraph) {\n        // The asset's definition was not provided in our query for job.assetNodes. It's either\n        // in another job or asset group, or is a source asset not defined in any repository.\n        return onNavigateToForeignNode(await findAssetLocation(assetKey));\n      }\n\n      // This asset is in a job and we can stay in the job graph explorer!\n      // If it's in our current job, allow shift / meta multi-selection.\n      let nextOpsNameSelection = token;\n\n      if (e.shiftKey || e.metaKey) {\n        const existing = explorerPath.opNames[0].split(',');\n        const added =\n          e.shiftKey && lastSelectedNode && node\n            ? opsInRange({graph: assetGraphData, from: lastSelectedNode, to: node})\n            : [token];\n\n        nextOpsNameSelection = (existing.includes(token)\n          ? without(existing, token)\n          : uniq([...existing, ...added])\n        ).join(',');\n      }\n\n      const nextCenter = layout?.nodes[nextOpsNameSelection[nextOpsNameSelection.length - 1]];\n      if (nextCenter) {\n        viewportEl.current?.zoomToSVGCoords(nextCenter.bounds.x, nextCenter.bounds.y, true);\n      }\n\n      onChangeExplorerPath(\n        {\n          ...explorerPath,\n          opNames: [nextOpsNameSelection],\n          opsQuery: nodeIsInDisplayedGraph\n            ? explorerPath.opsQuery\n            : `${explorerPath.opsQuery},++\"${token}\"++`,\n          pipelineName: explorerPath.pipelineName,\n        },\n        'replace',\n      );\n    },\n    [\n      explorerPath,\n      onChangeExplorerPath,\n      onNavigateToForeignNode,\n      findAssetLocation,\n      lastSelectedNode,\n      assetGraphData,\n      layout,\n    ],\n  );\n\n  const [lastRenderedLayout, setLastRenderedLayout] = React.useState<AssetGraphLayout | null>(null);\n  const renderingNewLayout = lastRenderedLayout !== layout;\n\n  React.useEffect(() => {\n    if (!renderingNewLayout || !layout || !viewportEl.current) {\n      return;\n    }\n    // The first render where we have our layout and viewport, autocenter or\n    // focus on the selected node. (If selection was specified in the URL).\n    // Don't animate this change.\n    if (lastSelectedNode) {\n      viewportEl.current.zoomToSVGBox(layout.nodes[lastSelectedNode.id].bounds, false);\n      viewportEl.current.focus();\n    } else {\n      viewportEl.current.autocenter(false);\n    }\n    setLastRenderedLayout(layout);\n  }, [renderingNewLayout, lastSelectedNode, layout, viewportEl]);\n\n  const onClickBackground = () =>\n    onChangeExplorerPath(\n      {...explorerPath, pipelineName: explorerPath.pipelineName, opNames: []},\n      'replace',\n    );\n\n  const onArrowKeyDown = (e: React.KeyboardEvent<any>, dir: string) => {\n    if (!layout) {\n      return;\n    }\n    const hasDefinition = (node: {id: string}) => !!assetGraphData.nodes[node.id]?.definition;\n    const layoutWithoutExternalLinks = {...layout, nodes: pickBy(layout.nodes, hasDefinition)};\n\n    const nextId = closestNodeInDirection(layoutWithoutExternalLinks, lastSelectedNode.id, dir);\n    const node = nextId && assetGraphData.nodes[nextId];\n    if (node && viewportEl.current) {\n      onSelectNode(e, node.assetKey, node);\n      viewportEl.current.zoomToSVGBox(layout.nodes[nextId].bounds, true);\n    }\n  };\n\n  return (\n    <SplitPanelContainer\n      identifier=\"explorer\"\n      firstInitialPercent={70}\n      firstMinSize={400}\n      first={\n        <>\n          {graphQueryItems.length === 0 ? (\n            <EmptyDAGNotice nodeType=\"asset\" isGraph />\n          ) : applyingEmptyDefault ? (\n            <LargeDAGNotice nodeType=\"asset\" />\n          ) : Object.keys(assetGraphData.nodes).length === 0 ? (\n            <EntirelyFilteredDAGNotice nodeType=\"asset\" />\n          ) : undefined}\n          {loading || !layout ? (\n            <LoadingNotice async={async} nodeType=\"asset\" />\n          ) : (\n            <SVGViewport\n              ref={(r) => (viewportEl.current = r || undefined)}\n              interactor={SVGViewport.Interactors.PanAndZoom}\n              graphWidth={layout.width}\n              graphHeight={layout.height}\n              onClick={onClickBackground}\n              onArrowKeyDown={onArrowKeyDown}\n              onDoubleClick={(e) => {\n                viewportEl.current?.autocenter(true);\n                e.stopPropagation();\n              }}\n              maxZoom={1.2}\n              maxAutocenterZoom={1.0}\n            >\n              {({scale: _scale}) => (\n                <SVGContainer width={layout.width} height={layout.height}>\n                  <AssetConnectedEdges highlighted={highlighted} edges={layout.edges} />\n\n                  {Object.values(layout.nodes).map(({id, bounds}) => {\n                    const graphNode = assetGraphData.nodes[id];\n                    const path = JSON.parse(id);\n\n                    return (\n                      <foreignObject\n                        {...bounds}\n                        key={id}\n                        onMouseEnter={() => setHighlighted(id)}\n                        onMouseLeave={() => setHighlighted(null)}\n                        onClick={(e) => onSelectNode(e, {path}, graphNode)}\n                        onDoubleClick={(e) => {\n                          viewportEl.current?.zoomToSVGBox(bounds, true, 1.2);\n                          e.stopPropagation();\n                        }}\n                        style={{overflow: 'visible'}}\n                      >\n                        {!graphNode || !graphNode.definition.opNames.length ? (\n                          <ForeignNode assetKey={{path}} />\n                        ) : _scale < EXPERIMENTAL_MINI_SCALE ? (\n                          <AssetNodeMinimal\n                            definition={graphNode.definition}\n                            selected={selectedGraphNodes.includes(graphNode)}\n                          />\n                        ) : (\n                          <AssetNode\n                            definition={graphNode.definition}\n                            liveData={liveDataByNode[graphNode.id]}\n                            selected={selectedGraphNodes.includes(graphNode)}\n                          />\n                        )}\n                      </foreignObject>\n                    );\n                  })}\n                </SVGContainer>\n              )}\n            </SVGViewport>\n          )}\n          {setOptions && (\n            <OptionsOverlay>\n              <Checkbox\n                format=\"switch\"\n                label=\"View as Asset Graph\"\n                checked={options.preferAssetRendering}\n                onChange={() => {\n                  onChangeExplorerPath(\n                    {\n                      ...explorerPath,\n                      opNames:\n                        selectedGraphNodes.length && selectedGraphNodes[0].definition.opNames.length\n                          ? selectedGraphNodes[0].definition.opNames\n                          : [],\n                    },\n                    'replace',\n                  );\n                  setOptions({\n                    ...options,\n                    preferAssetRendering: !options.preferAssetRendering,\n                  });\n                }}\n              />\n            </OptionsOverlay>\n          )}\n\n          <Box\n            flex={{direction: 'column', alignItems: 'flex-end', gap: 8}}\n            style={{position: 'absolute', right: 12, top: 8}}\n          >\n            <Box flex={{alignItems: 'center', gap: 12}}>\n              <QueryRefreshCountdown\n                refreshState={liveDataRefreshState}\n                dataDescription=\"materializations\"\n              />\n\n              <LaunchAssetExecutionButton\n                context={selectedGraphNodes.length ? 'selected' : 'all'}\n                assetKeys={(selectedGraphNodes.length\n                  ? selectedGraphNodes\n                  : Object.values(assetGraphData.nodes).filter((a) => !isSourceAsset(a.definition))\n                ).map((n) => n.assetKey)}\n                liveDataByNode={liveDataByNode}\n                preferredJobName={explorerPath.pipelineName}\n              />\n            </Box>\n          </Box>\n          <QueryOverlay>\n            <GraphQueryInput\n              items={graphQueryItems}\n              value={explorerPath.opsQuery}\n              placeholder=\"Type an asset subset…\"\n              onChange={(opsQuery) => onChangeExplorerPath({...explorerPath, opsQuery}, 'replace')}\n              popoverPosition=\"bottom-left\"\n            />\n          </QueryOverlay>\n        </>\n      }\n      second={\n        selectedGraphNodes.length === 1 && selectedGraphNodes[0] ? (\n          <RightInfoPanel>\n            <RightInfoPanelContent>\n              <SidebarAssetInfo\n                assetKey={selectedGraphNodes[0].assetKey}\n                liveData={liveDataByNode[selectedGraphNodes[0].id]}\n              />\n            </RightInfoPanelContent>\n          </RightInfoPanel>\n        ) : fetchOptions.pipelineSelector ? (\n          <RightInfoPanel>\n            <RightInfoPanelContent>\n              <SidebarPipelineOrJobOverview pipelineSelector={fetchOptions.pipelineSelector} />\n            </RightInfoPanelContent>\n          </RightInfoPanel>\n        ) : null\n      }\n    />\n  );\n};\n\nconst SVGContainer = styled.svg`\n  overflow: visible;\n  border-radius: 0;\n`;\n\n// Helpers\n\nconst graphDirectionOf = ({\n  graph,\n  from,\n  to,\n}: {\n  graph: GraphData;\n  from: GraphNode;\n  to: GraphNode;\n}) => {\n  const stack = [from];\n  while (stack.length) {\n    const node = stack.pop()!;\n\n    const downstream = [...Object.keys(graph.downstream[node.id] || {})]\n      .map((n) => graph.nodes[n])\n      .filter(Boolean);\n    if (downstream.some((d) => d.id === to.id)) {\n      return 'downstream';\n    }\n    stack.push(...downstream);\n  }\n  return 'upstream';\n};\n\nconst opsInRange = (\n  {graph, from, to}: {graph: GraphData; from: GraphNode; to: GraphNode},\n  seen: string[] = [],\n) => {\n  if (!from) {\n    return [];\n  }\n  if (from.id === to.id) {\n    return [...to.definition.opNames];\n  }\n\n  if (seen.length === 0 && graphDirectionOf({graph, from, to}) === 'upstream') {\n    [from, to] = [to, from];\n  }\n\n  const downstream = [...Object.keys(graph.downstream[from.id] || {})]\n    .map((n) => graph.nodes[n])\n    .filter(Boolean);\n\n  const ledToTarget: string[] = [];\n\n  for (const node of downstream) {\n    if (seen.includes(node.id)) {\n      continue;\n    }\n    const result: string[] = opsInRange({graph, from: node, to}, [...seen, from.id]);\n    if (result.length) {\n      ledToTarget.push(...from.definition.opNames, ...result);\n    }\n  }\n  return uniq(ledToTarget);\n};\n","import {gql} from '@apollo/client';\nimport {Colors, Icon, Tooltip, FontFamily, Box, CaptionMono, Spinner} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {withMiddleTruncation} from '../app/Util';\nimport {NodeHighlightColors} from '../graph/OpNode';\nimport {OpTags} from '../graph/OpTags';\nimport {linkToRunEvent, titleForRun} from '../runs/RunUtils';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {AssetComputeStatus} from '../types/globalTypes';\nimport {markdownToPlaintext} from '../ui/markdownToPlaintext';\n\nimport {displayNameForAssetKey, LiveDataForNode} from './Utils';\nimport {ASSET_NODE_ANNOTATIONS_MAX_WIDTH, ASSET_NODE_NAME_MAX_LENGTH} from './layout';\nimport {AssetNodeFragment} from './types/AssetNodeFragment';\n\nconst MISSING_LIVE_DATA = {\n  unstartedRunIds: [],\n  inProgressRunIds: [],\n  runWhichFailedToMaterialize: null,\n  lastMaterialization: null,\n  computeStatus: AssetComputeStatus.NONE,\n  stepKey: '',\n};\n\nexport const AssetNode: React.FC<{\n  definition: AssetNodeFragment;\n  liveData?: LiveDataForNode;\n  selected: boolean;\n  inAssetCatalog?: boolean;\n}> = React.memo(({definition, selected, liveData, inAssetCatalog}) => {\n  const firstOp = definition.opNames.length ? definition.opNames[0] : null;\n  const computeName = definition.graphName || definition.opNames[0] || null;\n\n  // Used for linking to the run with this step highlighted. We only support highlighting\n  // a single step, so just use the first one.\n  const stepKey = firstOp || '';\n\n  const displayName = withMiddleTruncation(displayNameForAssetKey(definition.assetKey), {\n    maxLength: ASSET_NODE_NAME_MAX_LENGTH,\n  });\n\n  const {lastMaterialization, computeStatus} = liveData || MISSING_LIVE_DATA;\n\n  return (\n    <AssetNodeContainer $selected={selected}>\n      <AssetNodeBox $selected={selected}>\n        <Name>\n          <span style={{marginTop: 1}}>\n            <Icon name=\"asset\" />\n          </span>\n          <div style={{overflow: 'hidden', textOverflow: 'ellipsis', marginTop: -1}}>\n            {displayName}\n          </div>\n          <div style={{flex: 1}} />\n          <div style={{maxWidth: ASSET_NODE_ANNOTATIONS_MAX_WIDTH}}>\n            <ComputeStatusNotice computeStatus={computeStatus} />\n          </div>\n        </Name>\n        {definition.description && !inAssetCatalog && (\n          <Description>{markdownToPlaintext(definition.description).split('\\n')[0]}</Description>\n        )}\n        {computeName && displayName !== computeName && (\n          <Description>\n            <Box\n              flex={{gap: 4, alignItems: 'flex-end'}}\n              style={{marginLeft: -2, overflow: 'hidden'}}\n            >\n              <Icon name={definition.graphName ? 'job' : 'op'} size={16} />\n              <div style={{minWidth: 0, overflow: 'hidden', textOverflow: 'ellipsis'}}>\n                {computeName}\n              </div>\n            </Box>\n          </Description>\n        )}\n\n        <Stats>\n          {lastMaterialization ? (\n            <StatsRow>\n              <span>Materialized</span>\n              <CaptionMono>\n                <AssetRunLink\n                  runId={lastMaterialization.runId}\n                  event={{stepKey, timestamp: lastMaterialization.timestamp}}\n                >\n                  <TimestampDisplay\n                    timestamp={Number(lastMaterialization.timestamp) / 1000}\n                    timeFormat={{showSeconds: false, showTimezone: false}}\n                  />\n                </AssetRunLink>\n              </CaptionMono>\n            </StatsRow>\n          ) : (\n            <>\n              <StatsRow>\n                <span>Materialized</span>\n                <span>–</span>\n              </StatsRow>\n            </>\n          )}\n          <StatsRow>\n            <span>Latest Run</span>\n            <CaptionMono>\n              <AssetLatestRunWithNotices liveData={liveData} />\n            </CaptionMono>\n          </StatsRow>\n        </Stats>\n        {definition.computeKind && (\n          <OpTags\n            minified={false}\n            style={{right: -2, paddingTop: 5}}\n            tags={[\n              {\n                label: definition.computeKind,\n                onClick: () => {\n                  window.requestAnimationFrame(() =>\n                    document.dispatchEvent(new Event('show-kind-info')),\n                  );\n                },\n              },\n            ]}\n          />\n        )}\n      </AssetNodeBox>\n    </AssetNodeContainer>\n  );\n}, isEqual);\n\nexport const AssetNodeMinimal: React.FC<{\n  selected: boolean;\n  definition: AssetNodeFragment;\n}> = ({selected, definition}) => {\n  return (\n    <MinimalAssetNodeContainer $selected={selected}>\n      <MinimalAssetNodeBox $selected={selected}>\n        <MinimalName style={{fontSize: 28}}>\n          {withMiddleTruncation(displayNameForAssetKey(definition.assetKey), {maxLength: 17})}\n        </MinimalName>\n      </MinimalAssetNodeBox>\n    </MinimalAssetNodeContainer>\n  );\n};\n\nexport const AssetRunLink: React.FC<{\n  runId: string;\n  event?: Parameters<typeof linkToRunEvent>[1];\n}> = ({runId, children, event}) => (\n  <Link\n    to={event ? linkToRunEvent({runId}, event) : `/instance/runs/${runId}`}\n    target=\"_blank\"\n    rel=\"noreferrer\"\n  >\n    {children || titleForRun({runId})}\n  </Link>\n);\n\nexport const ASSET_NODE_LIVE_FRAGMENT = gql`\n  fragment AssetNodeLiveFragment on AssetNode {\n    id\n    opNames\n    repository {\n      id\n    }\n    assetKey {\n      path\n    }\n    assetMaterializations(limit: 1) {\n      timestamp\n      runId\n    }\n  }\n`;\n\n// Note: This fragment should only contain fields that are needed for\n// useAssetGraphData and the Asset DAG. Some pages of Dagit request this\n// fragment for every AssetNode on the instance. Add fields with care!\n//\nexport const ASSET_NODE_FRAGMENT = gql`\n  fragment AssetNodeFragment on AssetNode {\n    id\n    graphName\n    jobNames\n    opNames\n    description\n    computeKind\n    assetKey {\n      path\n    }\n  }\n`;\n\nconst BoxColors = {\n  Divider: 'rgba(219, 219, 244, 1)',\n  Description: 'rgba(245, 245, 250, 1)',\n  Stats: 'rgba(236, 236, 248, 1)',\n};\n\nconst AssetNodeContainer = styled.div<{$selected: boolean}>`\n  outline: ${(p) => (p.$selected ? `2px dashed ${NodeHighlightColors.Border}` : 'none')};\n  border-radius: 6px;\n  outline-offset: -1px;\n  background: ${(p) => (p.$selected ? NodeHighlightColors.Background : 'white')};\n  inset: 0;\n  padding: 4px;\n  margin-top: 10px;\n  margin-right: 4px;\n  margin-left: 4px;\n  margin-bottom: 2px;\n`;\n\nconst AssetNodeBox = styled.div<{$selected: boolean}>`\n  border: 2px solid ${(p) => (p.$selected ? Colors.Blue500 : Colors.Blue200)};\n  background: ${BoxColors.Stats};\n  border-radius: 5px;\n  position: relative;\n  &:hover {\n    box-shadow: ${Colors.Blue200} inset 0px 0px 0px 1px, rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n  }\n`;\n\nconst Name = styled.div`\n  /** Keep in sync with DISPLAY_NAME_PX_PER_CHAR */\n  display: flex;\n  padding: 4px 6px;\n  background: ${Colors.White};\n  font-family: ${FontFamily.monospace};\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  font-weight: 600;\n  gap: 4px;\n`;\n\nconst MinimalAssetNodeContainer = styled(AssetNodeContainer)`\n  position: absolute;\n  border-radius: 12px;\n  outline-offset: 2px;\n  outline-width: 4px;\n`;\n\nconst MinimalAssetNodeBox = styled(AssetNodeBox)`\n  background: ${Colors.White};\n  border: 4px solid ${Colors.Blue200};\n  border-radius: 10px;\n  position: absolute;\n  inset: 4px;\n`;\n\nconst MinimalName = styled(Name)`\n  font-weight: 600;\n  white-space: nowrap;\n  position: absolute;\n  background: none;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Description = styled.div`\n  background: ${BoxColors.Description};\n  padding: 4px 8px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  border-top: 1px solid ${BoxColors.Divider};\n  font-size: 12px;\n`;\n\nconst Stats = styled.div`\n  background: ${BoxColors.Stats};\n  padding: 4px 8px;\n  border-top: 1px solid ${BoxColors.Divider};\n  font-size: 12px;\n  line-height: 20px;\n`;\n\nconst StatsRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-height: 18px;\n  & > span {\n    color: ${Colors.Gray600};\n  }\n`;\n\nconst UpstreamNotice = styled.div`\n  background: ${Colors.Yellow200};\n  color: ${Colors.Yellow700};\n  line-height: 10px;\n  font-size: 11px;\n  text-align: right;\n  margin-top: -4px;\n  margin-bottom: -4px;\n  padding: 2.5px 5px;\n  margin-right: -6px;\n  border-top-right-radius: 3px;\n`;\n\nexport const ComputeStatusNotice: React.FC<{computeStatus: AssetComputeStatus}> = ({\n  computeStatus,\n}) =>\n  computeStatus === AssetComputeStatus.OUT_OF_DATE ? (\n    <UpstreamNotice>\n      upstream\n      <br />\n      changed\n    </UpstreamNotice>\n  ) : null;\n\nexport const AssetLatestRunWithNotices: React.FC<{\n  liveData?: LiveDataForNode;\n}> = ({liveData}) => {\n  const {\n    lastMaterialization,\n    unstartedRunIds,\n    inProgressRunIds,\n    runWhichFailedToMaterialize,\n    stepKey,\n  } = liveData || MISSING_LIVE_DATA;\n\n  return inProgressRunIds?.length > 0 ? (\n    <Box flex={{gap: 4, alignItems: 'center'}}>\n      <Tooltip content=\"A run is currently rematerializing this asset.\">\n        <Spinner purpose=\"body-text\" />\n      </Tooltip>\n      <AssetRunLink runId={inProgressRunIds[0]} />\n    </Box>\n  ) : unstartedRunIds?.length > 0 ? (\n    <Box flex={{gap: 4, alignItems: 'center'}}>\n      <Tooltip content=\"A run has started that will rematerialize this asset soon.\">\n        <Spinner purpose=\"body-text\" stopped />\n      </Tooltip>\n      <AssetRunLink runId={unstartedRunIds[0]} />\n    </Box>\n  ) : runWhichFailedToMaterialize?.__typename === 'Run' ? (\n    <Box flex={{gap: 4, alignItems: 'center'}}>\n      <Tooltip\n        content={`Run ${titleForRun({\n          runId: runWhichFailedToMaterialize.id,\n        })} failed to materialize this asset`}\n      >\n        <Icon name=\"warning\" color={Colors.Red500} />\n      </Tooltip>\n      <AssetRunLink runId={runWhichFailedToMaterialize.id} />\n    </Box>\n  ) : lastMaterialization ? (\n    <AssetRunLink\n      runId={lastMaterialization.runId}\n      event={{stepKey, timestamp: lastMaterialization.timestamp}}\n    />\n  ) : (\n    <span>–</span>\n  );\n};\n","import {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {displayNameForAssetKey} from './Utils';\n\nexport const ForeignNode: React.FC<{\n  assetKey: {path: string[]};\n  backgroundColor?: string;\n}> = React.memo(({assetKey, backgroundColor}) => (\n  <ForeignNodeLink style={{backgroundColor}}>\n    <span className=\"label\">{displayNameForAssetKey(assetKey)}</span>\n    <Icon name=\"open_in_new\" color={Colors.Gray500} />\n  </ForeignNodeLink>\n));\n\nconst ForeignNodeLink = styled.div`\n  display: flex;\n  padding: 4px 8px 6px;\n  line-height: 30px;\n  font-family: ${FontFamily.monospace};\n  color: ${Colors.Gray500};\n  align-items: center;\n  font-weight: 600;\n  gap: 4px;\n  &:hover .label {\n    color: ${Colors.Link};\n    text-decoration: underline;\n  }\n`;\n","import * as dagre from 'dagre';\n\nimport {IBounds, IPoint} from '../graph/common';\n\nimport {GraphData, GraphNode, GraphId, displayNameForAssetKey} from './Utils';\n\nexport interface AssetLayout {\n  id: GraphId;\n\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n}\n\nexport type AssetLayoutEdge = {\n  from: IPoint;\n  fromId: string;\n  to: IPoint;\n  toId: string;\n};\n\nexport type AssetGraphLayout = {\n  width: number;\n  height: number;\n  edges: AssetLayoutEdge[];\n  nodes: {[id: string]: AssetLayout};\n};\n\nconst opts: {margin: number; mini: boolean} = {\n  margin: 100,\n  mini: false,\n};\n\nexport const layoutAssetGraph = (graphData: GraphData): AssetGraphLayout => {\n  const g = new dagre.graphlib.Graph({compound: true});\n\n  g.setGraph({\n    rankdir: 'TB',\n    marginx: opts.margin,\n    marginy: opts.margin,\n    nodesep: opts.mini ? 20 : 50,\n    edgesep: opts.mini ? 10 : 10,\n    ranksep: opts.mini ? 20 : 50,\n  });\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const shouldRender = (node?: GraphNode) => node && node.definition.opNames.length > 0;\n\n  // Add all the nodes to the graph\n  Object.values(graphData.nodes)\n    .filter(shouldRender)\n    .forEach((node) => {\n      const {width, height} = getAssetNodeDimensions(node.definition);\n      g.setNode(node.id, {width: opts.mini ? 230 : width, height});\n    });\n\n  const foreignNodes = {};\n\n  // Add the edges to the graph, and accumulate a set of \"foreign nodes\" (for which\n  // we have an inbound/outbound edge, but we don't have the `node` in the graphData).\n  Object.keys(graphData.downstream).forEach((upstreamId) => {\n    const downstreamIds = Object.keys(graphData.downstream[upstreamId]);\n    downstreamIds.forEach((downstreamId) => {\n      if (\n        !shouldRender(graphData.nodes[downstreamId]) &&\n        !shouldRender(graphData.nodes[upstreamId])\n      ) {\n        return;\n      }\n\n      g.setEdge({v: upstreamId, w: downstreamId}, {weight: 1});\n\n      if (!shouldRender(graphData.nodes[downstreamId])) {\n        foreignNodes[downstreamId] = true;\n      } else if (!shouldRender(graphData.nodes[upstreamId])) {\n        foreignNodes[upstreamId] = true;\n      }\n    });\n  });\n\n  // Add all the foreign nodes to the graph\n  Object.keys(foreignNodes).forEach((id) => {\n    g.setNode(id, getForeignNodeDimensions(id));\n  });\n\n  dagre.layout(g);\n\n  const dagreNodesById: {[id: string]: dagre.Node} = {};\n  g.nodes().forEach((id) => {\n    const node = g.node(id);\n    if (!node) {\n      return;\n    }\n    dagreNodesById[id] = node;\n  });\n\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  const nodes: {[id: string]: AssetLayout} = {};\n\n  Object.keys(dagreNodesById).forEach((id) => {\n    const dagreNode = dagreNodesById[id];\n    const bounds = {\n      x: dagreNode.x - dagreNode.width / 2,\n      y: dagreNode.y - dagreNode.height / 2,\n      width: dagreNode.width,\n      height: dagreNode.height,\n    };\n    nodes[id] = {id, bounds};\n\n    maxWidth = Math.max(maxWidth, dagreNode.x + dagreNode.width / 2);\n    maxHeight = Math.max(maxHeight, dagreNode.y + dagreNode.height / 2);\n  });\n\n  const edges: AssetLayoutEdge[] = [];\n\n  g.edges().forEach((e) => {\n    const points = g.edge(e).points;\n    edges.push({\n      from: points[0],\n      fromId: e.v,\n      to: points[points.length - 1],\n      toId: e.w,\n    });\n  });\n\n  return {\n    nodes,\n    edges,\n    width: maxWidth + opts.margin,\n    height: maxHeight + opts.margin,\n  };\n};\n\nexport const getForeignNodeDimensions = (id: string) => {\n  const path = JSON.parse(id);\n  return {width: displayNameForAssetKey({path}).length * 8 + 30, height: 30};\n};\n\nexport const extendBounds = (a: IBounds, b: IBounds) => {\n  const xmin = Math.min(a.x, b.x);\n  const ymin = Math.min(a.y, b.y);\n  const xmax = Math.max(a.x + a.width, b.x + b.width);\n  const ymax = Math.max(a.y + a.height, b.y + b.height);\n  return {x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin};\n};\n\nexport const ASSET_NODE_ICON_WIDTH = 20;\nexport const ASSET_NODE_ANNOTATIONS_MAX_WIDTH = 65;\nexport const ASSET_NODE_NAME_MAX_LENGTH = 32;\nconst DISPLAY_NAME_PX_PER_CHAR = 8.0;\n\nexport const assetNameMaxlengthForWidth = (width: number) => {\n  return (\n    (width - ASSET_NODE_ANNOTATIONS_MAX_WIDTH - ASSET_NODE_ICON_WIDTH) / DISPLAY_NAME_PX_PER_CHAR\n  );\n};\n\nexport const getAssetNodeDimensions = (def: {\n  assetKey: {path: string[]};\n  opNames: string[];\n  description?: string | null;\n}) => {\n  let height = 75;\n  if (def.description) {\n    height += 25;\n  }\n  const displayName = displayNameForAssetKey(def.assetKey);\n  const firstOp = def.opNames[0];\n  if (firstOp && displayName !== firstOp) {\n    height += 25;\n  }\n  return {\n    width:\n      Math.max(\n        200,\n        Math.min(ASSET_NODE_NAME_MAX_LENGTH, displayName.length) * DISPLAY_NAME_PX_PER_CHAR,\n      ) +\n      ASSET_NODE_ICON_WIDTH +\n      ASSET_NODE_ANNOTATIONS_MAX_WIDTH,\n    height,\n  };\n};\n","import {gql, useQuery} from '@apollo/client';\nimport React from 'react';\n\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {AssetGroupSelector, PipelineSelector} from '../types/globalTypes';\n\nimport {ASSET_NODE_FRAGMENT} from './AssetNode';\nimport {buildGraphData, GraphData, tokenForAssetKey} from './Utils';\nimport {\n  AssetGraphQuery,\n  AssetGraphQueryVariables,\n  AssetGraphQuery_assetNodes,\n} from './types/AssetGraphQuery';\n\nexport interface AssetGraphFetchScope {\n  hideEdgesToNodesOutsideQuery?: boolean;\n  pipelineSelector?: PipelineSelector;\n  groupSelector?: AssetGroupSelector;\n}\n/** Fetches data for rendering an asset graph:\n *\n * @param pipelineSelector: Optionally scope to an asset job, or pass null for the global graph\n *\n * @param opsQuery: filter the returned graph using selector syntax string (eg: asset_name++)\n *\n * @param filterNodes: filter the returned graph using the provided function. The global graph\n * uses this option to implement the \"3 of 4 repositories\" picker.\n */\nexport function useAssetGraphData(opsQuery: string, options: AssetGraphFetchScope) {\n  const fetchResult = useQuery<AssetGraphQuery, AssetGraphQueryVariables>(ASSET_GRAPH_QUERY, {\n    notifyOnNetworkStatusChange: true,\n    variables: {\n      pipelineSelector: options.pipelineSelector,\n      groupSelector: options.groupSelector,\n    },\n  });\n\n  const nodes = fetchResult.data?.assetNodes;\n\n  const {\n    assetGraphData,\n    graphQueryItems,\n    graphAssetKeys,\n    allAssetKeys,\n    applyingEmptyDefault,\n  } = React.useMemo(() => {\n    if (nodes === undefined) {\n      return {\n        graphAssetKeys: [],\n        graphQueryItems: [],\n        assetGraphData: null,\n        applyingEmptyDefault: false,\n      };\n    }\n\n    // Filter the set of all AssetNodes down to those matching the `opsQuery`.\n    // In the future it might be ideal to move this server-side, but we currently\n    // get to leverage the useQuery cache almost 100% of the time above, making this\n    // super fast after the first load vs a network fetch on every page view.\n    const graphQueryItems = buildGraphQueryItems(nodes);\n    const {all, applyingEmptyDefault} = filterByQuery(graphQueryItems, opsQuery);\n\n    // Assemble the response into the data structure used for layout, traversal, etc.\n    const assetGraphData = buildGraphData(all.map((n) => n.node));\n    if (options.hideEdgesToNodesOutsideQuery) {\n      removeEdgesToHiddenAssets(assetGraphData);\n    }\n\n    return {\n      allAssetKeys: nodes.map((n) => n.assetKey),\n      graphAssetKeys: all.map((n) => ({path: n.node.assetKey.path})),\n      assetGraphData,\n      graphQueryItems,\n      applyingEmptyDefault,\n    };\n  }, [nodes, opsQuery, options.hideEdgesToNodesOutsideQuery]);\n\n  return {\n    fetchResult,\n    assetGraphData,\n    graphQueryItems,\n    graphAssetKeys,\n    allAssetKeys,\n    applyingEmptyDefault,\n  };\n}\n\ntype AssetNode = AssetGraphQuery_assetNodes;\n\nconst buildGraphQueryItems = (nodes: AssetNode[]) => {\n  const items: {\n    [name: string]: GraphQueryItem & {\n      node: AssetNode;\n    };\n  } = {};\n\n  for (const node of nodes) {\n    const name = tokenForAssetKey(node.assetKey);\n    items[name] = {\n      node,\n      name,\n      inputs: node.dependencyKeys.map((key) => ({\n        dependsOn: [{solid: {name: tokenForAssetKey(key)}}],\n      })),\n      outputs: node.dependedByKeys.map((key) => ({\n        dependedBy: [{solid: {name: tokenForAssetKey(key)}}],\n      })),\n    };\n  }\n  return Object.values(items);\n};\n\nconst removeEdgesToHiddenAssets = (graphData: GraphData) => {\n  for (const node of Object.keys(graphData.upstream)) {\n    for (const edge of Object.keys(graphData.upstream[node])) {\n      if (!graphData.nodes[edge]) {\n        delete graphData.upstream[node][edge];\n        delete graphData.downstream[edge][node];\n      }\n    }\n  }\n\n  for (const node of Object.keys(graphData.downstream)) {\n    for (const edge of Object.keys(graphData.downstream[node])) {\n      if (!graphData.nodes[edge]) {\n        delete graphData.upstream[edge][node];\n        delete graphData.downstream[node][edge];\n      }\n    }\n  }\n};\n\nconst ASSET_GRAPH_QUERY = gql`\n  query AssetGraphQuery($pipelineSelector: PipelineSelector, $groupSelector: AssetGroupSelector) {\n    assetNodes(pipeline: $pipelineSelector, group: $groupSelector) {\n      id\n      dependencyKeys {\n        path\n      }\n      dependedByKeys {\n        path\n      }\n      ...AssetNodeFragment\n    }\n  }\n  ${ASSET_NODE_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport React from 'react';\n\nimport {AssetKeyInput} from '../types/globalTypes';\n\nimport {ASSET_NODE_LIVE_FRAGMENT} from './AssetNode';\nimport {buildLiveData} from './Utils';\nimport {AssetGraphLiveQuery, AssetGraphLiveQueryVariables} from './types/AssetGraphLiveQuery';\n\n/** Fetches the last materialization, \"upstream changed\", and other live state\n * for the assets in the given pipeline or in the given set of asset keys (or both).\n *\n * Note: The \"upstream changed\" flag cascades, so it may not appear if the upstream\n * node that has changed is not in scope.\n */\nexport function useLiveDataForAssetKeys(assetKeys: AssetKeyInput[]) {\n  const liveResult = useQuery<AssetGraphLiveQuery, AssetGraphLiveQueryVariables>(\n    ASSETS_GRAPH_LIVE_QUERY,\n    {\n      skip: assetKeys.length === 0,\n      variables: {assetKeys},\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const liveDataByNode = React.useMemo(() => {\n    return liveResult.data ? buildLiveData(liveResult.data) : {};\n  }, [liveResult.data]);\n\n  return {\n    liveResult,\n    liveDataByNode,\n    assetKeys,\n  };\n}\n\nconst ASSETS_GRAPH_LIVE_QUERY = gql`\n  query AssetGraphLiveQuery($assetKeys: [AssetKeyInput!]!) {\n    assetNodes(assetKeys: $assetKeys, loadMaterializations: true) {\n      id\n      ...AssetNodeLiveFragment\n    }\n    assetsLatestInfo(assetKeys: $assetKeys) {\n      assetKey {\n        path\n      }\n      computeStatus\n      unstartedRunIds\n      inProgressRunIds\n      latestRun {\n        status\n        id\n      }\n    }\n  }\n  ${ASSET_NODE_LIVE_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\n\nimport {\n  SidebarAssetQuery_assetNodeOrError_AssetNode_configField as ConfigField,\n  SidebarAssetQuery_assetNodeOrError_AssetNode_configField_configType_CompositeConfigType as AssetConfigSchema,\n} from '../asset-graph/types/SidebarAssetQuery';\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\n\nexport interface HasConfigField {\n  configField: ConfigField | null;\n}\n\nexport function configSchemaForAssetNode(assetNode: HasConfigField): AssetConfigSchema | null {\n  if (assetNode.configField) {\n    const configSchema = assetNode.configField.configType as AssetConfigSchema;\n    if (configSchema.fields) {\n      return configSchema.fields.length > 1 ? configSchema : null;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\nexport const ASSET_NODE_CONFIG_FRAGMENT = gql`\n  fragment AssetNodeConfigFragment on AssetNode {\n    id\n    configField {\n      name\n      configType {\n        ...ConfigTypeSchemaFragment\n        recursiveConfigTypes {\n          ...ConfigTypeSchemaFragment\n        }\n      }\n    }\n  }\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Box, ButtonLink, Tooltip} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {Timestamp} from '../app/time/Timestamp';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {AssetLineageFragment} from './types/AssetLineageFragment';\n\nconst AssetLineageInfoElement: React.FC<{\n  lineage_info: AssetLineageFragment;\n  timestamp: string;\n}> = ({lineage_info, timestamp}) => {\n  const partition_list_label = lineage_info.partitions.length === 1 ? 'Partition' : 'Partitions';\n  const partition_list_str = lineage_info.partitions\n    .map((partition) => `\"${partition}\"`)\n    .join(', ');\n  const to = assetDetailsPathForKey(lineage_info.assetKey, {asOf: timestamp});\n\n  return (\n    <Box margin={{bottom: 4}}>\n      {lineage_info.partitions.length > 0\n        ? `${partition_list_label} ${partition_list_str} of `\n        : ''}\n      <Tooltip\n        content={\n          <>\n            View snapshot as of{' '}\n            <Timestamp\n              timestamp={{ms: Number(timestamp)}}\n              timeFormat={{showSeconds: true, showTimezone: true}}\n            />\n          </>\n        }\n        modifiers={{offset: {enabled: true, options: {offset: [0, 16]}}}}\n        placement=\"right\"\n      >\n        <Link to={to}>\n          <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n            {lineage_info.assetKey.path\n              .map((p, i) => <span key={i}>{p}</span>)\n              .reduce(\n                (accum, curr, ii) => [\n                  ...accum,\n                  ii > 0 ? (\n                    <React.Fragment key={`${ii}-space`}>&nbsp;{'>'}&nbsp;</React.Fragment>\n                  ) : null,\n                  curr,\n                ],\n                [] as React.ReactNode[],\n              )}\n          </Box>\n        </Link>\n      </Tooltip>\n    </Box>\n  );\n};\n\nconst MAX_COLLAPSED = 5;\n\nexport const AssetLineageElements: React.FC<{\n  elements: AssetLineageFragment[];\n  timestamp: string;\n}> = ({elements, timestamp}) => {\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  return (\n    <div>\n      {elements.length > MAX_COLLAPSED && (\n        <ButtonLink onClick={() => setCollapsed(!collapsed)}>\n          {collapsed ? 'Show More' : 'Show Less'}\n        </ButtonLink>\n      )}\n      {(collapsed ? elements.slice(elements.length - MAX_COLLAPSED) : elements).map((info, idx) => (\n        <AssetLineageInfoElement key={idx} lineage_info={info} timestamp={timestamp} />\n      ))}\n    </div>\n  );\n};\n\nexport const ASSET_LINEAGE_FRAGMENT = gql`\n  fragment AssetLineageFragment on AssetLineageInfo {\n    assetKey {\n      path\n    }\n    partitions\n  }\n`;\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  IconWrapper,\n  Table,\n  Mono,\n} from '@dagster-io/ui';\nimport moment from 'moment';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {Timestamp} from '../app/time/Timestamp';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {MetadataEntry} from '../metadata/MetadataEntry';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunStatusWithStats} from '../runs/RunStatusDots';\nimport {linkToRunEvent, titleForRun} from '../runs/RunUtils';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {AssetLineageElements} from './AssetLineageElements';\nimport {AssetEventGroup} from './groupByPartition';\nimport {AssetMaterializationFragment} from './types/AssetMaterializationFragment';\nimport {AssetObservationFragment} from './types/AssetObservationFragment';\n\nexport const AssetEventsTable: React.FC<{\n  hasPartitions: boolean;\n  hasLineage: boolean;\n  groups: AssetEventGroup[];\n  focused?: AssetEventGroup;\n  setFocused?: (timestamp: AssetEventGroup) => void;\n}> = ({hasPartitions, hasLineage, groups, focused, setFocused}) => {\n  return (\n    <Table>\n      <thead>\n        <tr>\n          {hasPartitions && <th style={{minWidth: 100}}>Partition</th>}\n          <th style={{minWidth: 150}}>Timestamp</th>\n          <th style={{minWidth: 150}}>Job / Pipeline</th>\n          <th style={{width: 100}}>Run</th>\n        </tr>\n      </thead>\n      <tbody>\n        {groups.map((group) => (\n          <React.Fragment key={group.timestamp || group.partition}>\n            <HoverableRow\n              onClick={(e) => {\n                // If you're interacting with something in the row, don't trigger a focus change.\n                // Since focus is stored in the URL bar this overwrites any link click navigation.\n                // We could alternatively e.preventDefault() on every link but it's easy to forget.\n                if (e.target instanceof HTMLElement && e.target.closest('a')) {\n                  return;\n                }\n                setFocused?.(group);\n              }}\n            >\n              <EventGroupRow\n                group={group}\n                hasPartitions={hasPartitions}\n                hasLineage={hasLineage}\n                isFocused={focused === group}\n              />\n            </HoverableRow>\n            {focused === group ? (\n              <MetadataEntriesRow hasLineage={hasLineage} group={group} />\n            ) : undefined}\n          </React.Fragment>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst NoneSpan = () => <span style={{color: Colors.Gray400}}>None</span>;\n\nconst MetadataEntriesRow: React.FC<{\n  group: AssetEventGroup;\n  hasLineage: boolean;\n}> = React.memo(({group, hasLineage}) => {\n  const {latest, timestamp} = group;\n  if (!latest) {\n    return <tr></tr>;\n  }\n  const assetLineage = latest.__typename === 'MaterializationEvent' ? latest.assetLineage : [];\n\n  const observationsAboutLatest =\n    latest.__typename === 'MaterializationEvent'\n      ? group.all.filter(\n          (e) =>\n            e.__typename === 'ObservationEvent' && Number(e.timestamp) > Number(latest.timestamp),\n        )\n      : [];\n\n  return (\n    <tr style={{background: Colors.Gray50}}>\n      <td colSpan={6} style={{fontSize: 14, padding: 0}}>\n        {latest.description && (\n          <Box padding={{horizontal: 24, vertical: 12}}>{latest.description}</Box>\n        )}\n        {latest.metadataEntries.length || hasLineage ? (\n          <DetailsTable>\n            <tbody>\n              {latest.metadataEntries.map((entry) => (\n                <tr key={`metadata-${entry.label}`}>\n                  <td style={{maxWidth: 300}}>{entry.label}</td>\n                  <td>\n                    <MetadataEntry entry={entry} expandSmallValues={true} />\n                  </td>\n                  <td style={{opacity: 0.7}}>{entry.description}</td>\n                </tr>\n              ))}\n              {observationsAboutLatest.map((obs) => (\n                <React.Fragment key={obs.timestamp}>\n                  {obs.metadataEntries.map((entry) => (\n                    <tr key={`metadata-${obs.timestamp}-${entry.label}`}>\n                      <td>{entry.label}</td>\n                      <td>\n                        <MetadataEntry entry={entry} expandSmallValues={true} />\n                      </td>\n                      <td style={{opacity: 0.7}}>\n                        <Box flex={{gap: 8, alignItems: 'center'}}>\n                          <Icon name=\"observation\" size={16} />\n                          <span>\n                            {`${obs.stepKey} in `}\n                            <Link to={`/instance/runs/${obs.runId}?timestamp=${obs.timestamp}`}>\n                              <Mono>{titleForRun({runId: obs.runId})}</Mono>\n                            </Link>\n                            {` (${moment(Number(obs.timestamp)).from(\n                              Number(timestamp),\n                              true,\n                            )} later)`}\n                          </span>\n                        </Box>\n                        {entry.description}\n                      </td>\n                    </tr>\n                  ))}\n                </React.Fragment>\n              ))}\n\n              {hasLineage && (\n                <tr>\n                  <td>Parent Materializations</td>\n                  <td>\n                    <AssetLineageElements elements={assetLineage} timestamp={timestamp} />\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </DetailsTable>\n        ) : (\n          <Box padding={{horizontal: 24, vertical: 12}}>No materialization event metadata</Box>\n        )}\n      </td>\n    </tr>\n  );\n});\n\nconst EventGroupRow: React.FC<{\n  group: AssetEventGroup;\n  hasPartitions: boolean;\n  hasLineage: boolean;\n  isFocused: boolean;\n}> = React.memo(({group, hasPartitions, hasLineage, isFocused}) => {\n  const {latest, partition, timestamp, all} = group;\n\n  const focusCss = isFocused\n    ? {paddingLeft: 4, borderLeft: `4px solid ${Colors.HighlightGreen}`}\n    : {paddingLeft: 8};\n\n  const run = latest?.runOrError.__typename === 'Run' ? latest.runOrError : undefined;\n  const repositoryOrigin = run?.repositoryOrigin;\n  const repoAddress = repositoryOrigin\n    ? buildRepoAddress(repositoryOrigin.repositoryName, repositoryOrigin.repositoryLocationName)\n    : null;\n  const repo = useRepository(repoAddress);\n\n  if (!latest) {\n    return (\n      <>\n        <td style={{whiteSpace: 'nowrap', paddingLeft: 24}}>{partition || <NoneSpan />}</td>\n        <td colSpan={3} />\n      </>\n    );\n  }\n\n  if (!run) {\n    return <span />;\n  }\n\n  return (\n    <>\n      {hasPartitions && (\n        <td style={{whiteSpace: 'nowrap', ...focusCss}}>\n          <Group direction=\"row\" spacing={2}>\n            <DisclosureTriangle open={isFocused} />\n            {partition || <NoneSpan />}\n          </Group>\n        </td>\n      )}\n      <td style={hasPartitions ? {} : focusCss}>\n        <Group direction=\"row\" spacing={4}>\n          {!hasPartitions && <DisclosureTriangle open={isFocused} />}\n          <Group direction=\"column\" spacing={4}>\n            <Timestamp timestamp={{ms: Number(timestamp)}} />\n            {all?.length > 1 ? (\n              <AllIndividualEventsLink\n                hasPartitions={hasPartitions}\n                hasLineage={hasLineage}\n                events={all}\n              />\n            ) : latest.__typename === 'MaterializationEvent' ? (\n              <Box flex={{gap: 8, alignItems: 'center'}} style={{color: Colors.Gray600}}>\n                <Icon name=\"materialization\" size={16} color={Colors.Gray600} />\n                Materialization\n              </Box>\n            ) : (\n              <Box flex={{gap: 8, alignItems: 'center'}} style={{color: Colors.Gray600}}>\n                <Icon name=\"observation\" size={16} color={Colors.Gray600} /> Observation\n              </Box>\n            )}\n          </Group>\n        </Group>\n      </td>\n      <td>\n        {!isHiddenAssetGroupJob(run.pipelineName) && (\n          <Box margin={{bottom: 4}}>\n            <Box padding={{left: 8}}>\n              <PipelineReference\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext={repoAddress || 'repo-unknown'}\n                snapshotId={run.pipelineSnapshotId}\n                isJob={isThisThingAJob(repo, run.pipelineName)}\n              />\n            </Box>\n            <Group direction=\"row\" padding={{left: 8}} spacing={8} alignItems=\"center\">\n              <Icon name=\"linear_scale\" color={Colors.Gray400} />\n              <Link to={linkToRunEvent(run, latest)}>{latest.stepKey}</Link>\n            </Group>\n          </Box>\n        )}\n      </td>\n      <td>\n        <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n          <RunStatusWithStats runId={run.runId} status={run.status} />\n          <Link to={`/instance/runs/${run.runId}?timestamp=${timestamp}`}>\n            <Mono>{titleForRun(run)}</Mono>\n          </Link>\n        </Box>\n      </td>\n    </>\n  );\n});\n\nconst HoverableRow = styled.tr`\n  &:hover {\n    background: ${Colors.Gray10};\n  }\n`;\n\nconst DetailsTable = styled.table`\n  width: 100%;\n  margin: -2px -2px -3px;\n  tr td {\n    font-size: 14px;\n  }\n`;\n\ninterface PredecessorDialogProps {\n  hasLineage: boolean;\n  hasPartitions: boolean;\n  events: (AssetMaterializationFragment | AssetObservationFragment)[];\n}\n\nexport const AllIndividualEventsLink: React.FC<PredecessorDialogProps> = ({\n  hasLineage,\n  hasPartitions,\n  events,\n}) => {\n  const [open, setOpen] = React.useState(false);\n  const [focused, setFocused] = React.useState<AssetEventGroup | undefined>();\n  const groups = React.useMemo(\n    () =>\n      events.map((p) => ({\n        latest: p,\n        partition: p.partition || undefined,\n        timestamp: p.timestamp,\n        all: [],\n      })),\n    [events],\n  );\n  const count = events.length;\n  const title = () => {\n    if (hasPartitions) {\n      const partition = events[0].partition;\n      if (partition) {\n        return `Materialization and observation events for ${partition}`;\n      }\n    }\n    return `Materialization and observation events`;\n  };\n\n  return (\n    <>\n      <ButtonLink onClick={() => setOpen(true)}>{`View ${count} events`}</ButtonLink>\n      <Dialog\n        isOpen={open}\n        canEscapeKeyClose\n        canOutsideClickClose\n        onClose={() => setOpen(false)}\n        style={{width: '80%', minWidth: '800px'}}\n        title={title()}\n      >\n        {open && (\n          <Box padding={{bottom: 8}} onClick={(e) => e.stopPropagation()}>\n            <AssetEventsTable\n              hasLineage={hasLineage}\n              hasPartitions={hasPartitions}\n              focused={focused}\n              setFocused={setFocused}\n              groups={groups}\n            />\n          </Box>\n        )}\n        <DialogFooter>\n          <Button intent=\"primary\" onClick={() => setOpen(false)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n};\n\nconst DisclosureTriangle: React.FC<{open: boolean; onClick?: () => void}> = ({open, onClick}) => (\n  <DisclosureTriangleButton onClick={onClick} $open={open}>\n    <Icon name=\"arrow_drop_down\" size={24} />\n  </DisclosureTriangleButton>\n);\n\nconst DisclosureTriangleButton = styled.button<{$open: boolean}>`\n  padding: 4px;\n  margin: -4px;\n  cursor: pointer;\n  border: 0;\n  background: transparent;\n  outline: none;\n\n  ${IconWrapper} {\n    margin: -2px -5px;\n    transform: ${({$open}) => ($open ? 'rotate(0deg)' : 'rotate(-90deg)')};\n    opacity: 0.25;\n  }\n\n  :focus {\n    outline: none;\n\n    ${IconWrapper} {\n      background: ${Colors.Dark};\n      opacity: 0.5;\n    }\n  }\n`;\n","import {Box, Colors, NonIdealState, Caption, Subheading, Checkbox} from '@dagster-io/ui';\nimport flatMap from 'lodash/flatMap';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {AssetValueGraph, AssetValueGraphData} from './AssetValueGraph';\nimport {AssetEventGroup} from './groupByPartition';\n\nexport const AssetMaterializationGraphs: React.FC<{\n  groups: AssetEventGroup[];\n  xAxis: 'partition' | 'time';\n  asSidebarSection?: boolean;\n}> = (props) => {\n  const [xHover, setXHover] = React.useState<string | number | null>(null);\n\n  const reversed = React.useMemo(() => {\n    return [...props.groups].reverse();\n  }, [props.groups]);\n\n  const graphDataByMetadataLabel = extractNumericData(reversed, props.xAxis);\n  const graphLabels = Object.keys(graphDataByMetadataLabel).slice(0, 20).sort();\n\n  const [collapsedLabels, setCollapsedLabels] = useStateWithStorage(\n    'hidden-graphs',\n    validateHiddenGraphsState,\n  );\n\n  const toggleCollapsed = React.useCallback(\n    (label: string) => {\n      setCollapsedLabels((current = []) =>\n        current.includes(label) ? current.filter((c) => c !== label) : [...current, label],\n      );\n    },\n    [setCollapsedLabels],\n  );\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'stretch',\n          flexDirection: 'column',\n        }}\n      >\n        {graphLabels.map((label) => (\n          <Box\n            key={label}\n            style={{width: '100%'}}\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n          >\n            {props.asSidebarSection ? (\n              <Box padding={{horizontal: 24, top: 8}} flex={{justifyContent: 'space-between'}}>\n                <Caption style={{fontWeight: 700}}>{label}</Caption>\n                <Checkbox\n                  format=\"switch\"\n                  checked={!collapsedLabels.includes(label)}\n                  onChange={() => toggleCollapsed(label)}\n                  size=\"small\"\n                />\n              </Box>\n            ) : (\n              <Box\n                padding={{horizontal: 24, vertical: 16}}\n                border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n                flex={{justifyContent: 'space-between'}}\n              >\n                <Subheading>{label}</Subheading>\n                <Checkbox\n                  format=\"switch\"\n                  checked={!collapsedLabels.includes(label)}\n                  onChange={() => toggleCollapsed(label)}\n                  size=\"small\"\n                />\n              </Box>\n            )}\n            {!collapsedLabels.includes(label) ? (\n              <Box padding={{horizontal: 24, vertical: 16}}>\n                <AssetValueGraph\n                  label={label}\n                  width=\"100%\"\n                  data={graphDataByMetadataLabel[label]}\n                  xHover={xHover}\n                  onHoverX={(x) => x !== xHover && setXHover(x)}\n                />\n              </Box>\n            ) : undefined}\n          </Box>\n        ))}\n      </div>\n      {graphLabels.length === 0 ? (\n        props.asSidebarSection ? (\n          <Box\n            margin={{horizontal: 24, vertical: 12}}\n            style={{color: Colors.Gray500, fontSize: '0.8rem'}}\n          >\n            No numeric metadata entries available to be graphed.\n          </Box>\n        ) : (\n          <Box padding={{horizontal: 24, top: 64}}>\n            <NonIdealState\n              shrinkable\n              icon=\"linear_scale\"\n              title=\"No numeric metadata\"\n              description={`Include numeric metadata entries in your materializations and observations to see data graphed by ${props.xAxis}.`}\n            />\n          </Box>\n        )\n      ) : (\n        props.xAxis === 'partition' && (\n          <Box padding={{vertical: 16, horizontal: 24}} style={{color: Colors.Gray400}}>\n            When graphing values by partition, the highest data point for each materialized event\n            label is displayed.\n          </Box>\n        )\n      )}\n    </>\n  );\n};\n\nconst validateHiddenGraphsState = (json: string[]) => (Array.isArray(json) ? json : []);\n\n/**\n * Helper function that iterates over the asset materializations and assembles time series data\n * and stats for all numeric metadata entries. This function makes the following guaruntees:\n *\n * - If a metadata entry is sparsely emitted, points are still included for missing x values\n *   with y = NaN. (For compatiblity with react-chartjs-2)\n * - If a metadata entry is generated many times for the same partition, and xAxis = partition,\n *   the MAX value emitted is used as the data point.\n *\n * Assumes that the data is pre-sorted in ascending partition order if using xAxis = partition.\n */\nconst extractNumericData = (datapoints: AssetEventGroup[], xAxis: 'time' | 'partition') => {\n  const series: {\n    [metadataEntryLabel: string]: AssetValueGraphData;\n  } = {};\n\n  // Build a set of the numeric metadata entry labels (note they may be sparsely emitted)\n  const numericMetadataLabels = uniq(\n    flatMap(datapoints, (e) =>\n      (e.latest?.metadataEntries || [])\n        .filter((k) => ['IntMetadataEntry', 'FloatMetadataEntry'].includes(k.__typename))\n        .map((k) => k.label),\n    ),\n  );\n\n  const append = (label: string, {x, y}: {x: number | string; y: number}) => {\n    series[label] = series[label] || {minX: 0, maxX: 0, minY: 0, maxY: 0, values: [], xAxis};\n\n    if (xAxis === 'partition') {\n      // If the xAxis is partition keys, the graph may only contain one value for each partition.\n      // If the existing sample for the partition was null, replace it. Otherwise take the\n      // most recent value.\n      const existingForPartition = series[label].values.find((v) => v.x === x);\n      if (existingForPartition) {\n        if (!isNaN(y)) {\n          existingForPartition.y = y;\n        }\n        return;\n      }\n    }\n    series[label].values.push({\n      xNumeric: typeof x === 'number' ? x : series[label].values.length,\n      x,\n      y,\n    });\n  };\n\n  for (const {partition, latest} of datapoints) {\n    const x = (xAxis === 'partition' ? partition : Number(latest?.timestamp)) || null;\n\n    if (x === null) {\n      // exclude materializations where partition = null from partitioned graphs\n      continue;\n    }\n\n    // Add an entry for every numeric metadata label\n    for (const label of numericMetadataLabels) {\n      const entry = latest?.metadataEntries.find((l) => l.label === label);\n      if (!entry) {\n        append(label, {x, y: NaN});\n        continue;\n      }\n\n      let y = NaN;\n      if (entry.__typename === 'IntMetadataEntry') {\n        if (entry.intValue !== null) {\n          y = entry.intValue;\n        } else {\n          // will incur precision loss here\n          y = parseInt(entry.intRepr);\n        }\n      }\n      if (entry.__typename === 'FloatMetadataEntry' && entry.floatValue !== null) {\n        y = entry.floatValue;\n      }\n\n      append(label, {x, y});\n    }\n  }\n\n  for (const serie of Object.values(series)) {\n    const xs = serie.values.map((v) => v.xNumeric);\n    const ys = serie.values.map((v) => v.y).filter((v) => !isNaN(v));\n    serie.minXNumeric = Math.min(...xs);\n    serie.maxXNumeric = Math.max(...xs);\n    serie.minY = Math.min(...ys);\n    serie.maxY = Math.max(...ys);\n  }\n  return series;\n};\n","import {BaseTag, Box, Colors, Spinner} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LiveDataForNode} from '../asset-graph/Utils';\n\nexport const CurrentRunsBanner: React.FC<{liveData?: LiveDataForNode}> = ({liveData}) => {\n  const {inProgressRunIds = [], unstartedRunIds = []} = liveData || {};\n\n  if (inProgressRunIds.length === 0 && unstartedRunIds.length === 0) {\n    return null;\n  }\n  return (\n    <Box\n      background={Colors.Blue50}\n      flex={{direction: 'column', gap: 4}}\n      border={{side: 'bottom', width: 1, color: Colors.Blue100}}\n      padding={{vertical: 12, left: 24, right: 12}}\n      style={{color: Colors.Blue700, fontSize: 12, fontWeight: 700}}\n    >\n      {inProgressRunIds.length > 0 && (\n        <Box flex={{gap: 4, alignItems: 'center', wrap: 'wrap'}}>\n          {inProgressRunIds.map((runId) => (\n            <RunIDTag key={runId} runId={runId} />\n          ))}\n          <span>\n            {' '}\n            {inProgressRunIds.length === 1 ? 'is' : 'are'} currently refreshing this asset.\n          </span>\n        </Box>\n      )}\n      {unstartedRunIds.length > 0 && (\n        <Box flex={{gap: 4, alignItems: 'center', wrap: 'wrap'}}>\n          {unstartedRunIds.map((runId) => (\n            <RunIDTag key={runId} runId={runId} />\n          ))}\n          <span>\n            {' '}\n            {unstartedRunIds.length === 1 ? 'has' : 'have'} started and will refresh this asset.\n          </span>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nconst RunIDTag: React.FC<{runId: string}> = ({runId}) => (\n  <BaseTag\n    key={runId}\n    textColor={Colors.Blue700}\n    fillColor={Colors.Blue50}\n    label={\n      <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n        <Spinner purpose=\"caption-text\" />\n        <Link to={`/instance/runs/${runId}`}>{`Run: ${runId.slice(0, 8)}`}</Link>\n      </Box>\n    }\n  />\n);\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {Icon} from './Icon';\n\nexport const Warning: React.FC<{errorBackground?: boolean}> = ({errorBackground, children}) => {\n  return (\n    <ErrorContainer errorBackground={errorBackground}>\n      <Icon name=\"warning\" size={16} color={Colors.Gray700} style={{marginRight: 8}} />\n      {children}\n    </ErrorContainer>\n  );\n};\n\nconst ErrorContainer = styled.div<{errorBackground?: boolean}>`\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${({errorBackground}) => (errorBackground ? Colors.Red100 : Colors.Gray50)};\n  padding: 8px 24px 8px 24px;\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n`;\n","import {Warning} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {LiveDataForNode} from '../asset-graph/Utils';\nimport {titleForRun} from '../runs/RunUtils';\n\nexport const FailedRunsSinceMaterializationBanner: React.FC<{liveData?: LiveDataForNode}> = ({\n  liveData,\n}) => {\n  const {runWhichFailedToMaterialize} = liveData || {};\n\n  if (runWhichFailedToMaterialize) {\n    return (\n      <Warning errorBackground>\n        <span>\n          Run{' '}\n          <Link to={`/instance/runs/${runWhichFailedToMaterialize.id}`}>\n            {titleForRun({runId: runWhichFailedToMaterialize.id})}\n          </Link>{' '}\n          failed to materialize this asset\n        </span>\n      </Warning>\n    );\n  }\n  return null;\n};\n","import {gql} from '@apollo/client';\nimport {Box, Colors, Group, Icon, Mono, NonIdealState, Table} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {Timestamp} from '../app/time/Timestamp';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {MetadataEntry, METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {linkToRunEvent, titleForRun} from '../runs/RunUtils';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {AssetLineageElements} from './AssetLineageElements';\nimport {LatestMaterializationMetadataFragment} from './types/LatestMaterializationMetadataFragment';\n\nexport const LatestMaterializationMetadata: React.FC<{\n  latest: LatestMaterializationMetadataFragment | undefined;\n}> = ({latest}) => {\n  const latestRun = latest?.runOrError.__typename === 'Run' ? latest?.runOrError : null;\n  const repositoryOrigin = latestRun?.repositoryOrigin;\n  const repoAddress = repositoryOrigin\n    ? buildRepoAddress(repositoryOrigin.repositoryName, repositoryOrigin.repositoryLocationName)\n    : null;\n  const repo = useRepository(repoAddress);\n\n  if (!latest) {\n    return (\n      <Box padding={{top: 16, bottom: 32}}>\n        <NonIdealState\n          icon=\"materialization\"\n          title=\"No materializations\"\n          description=\"No materializations were found for this asset.\"\n        />\n      </Box>\n    );\n  }\n\n  const latestEvent = latest;\n  const latestAssetLineage = latestEvent?.assetLineage;\n\n  return (\n    <MetadataTable>\n      <tbody>\n        <tr>\n          <td>Run</td>\n          <td>\n            {latestRun ? (\n              <div>\n                <Box>\n                  {'Run '}\n                  <Link\n                    to={`/instance/runs/${latestEvent.runId}?timestamp=${latestEvent.timestamp}`}\n                  >\n                    <Mono>{titleForRun({runId: latestEvent.runId})}</Mono>\n                  </Link>\n                </Box>\n                {!isHiddenAssetGroupJob(latestRun.pipelineName) && (\n                  <>\n                    <Box padding={{left: 8, top: 4}}>\n                      <PipelineReference\n                        showIcon\n                        pipelineName={latestRun.pipelineName}\n                        pipelineHrefContext={repoAddress || 'repo-unknown'}\n                        snapshotId={latestRun.pipelineSnapshotId}\n                        isJob={isThisThingAJob(repo, latestRun.pipelineName)}\n                      />\n                    </Box>\n                    <Group direction=\"row\" padding={{left: 8}} spacing={8} alignItems=\"center\">\n                      <Icon name=\"linear_scale\" color={Colors.Gray400} />\n                      <Link to={linkToRunEvent(latestRun, latestEvent)}>{latestEvent.stepKey}</Link>\n                    </Group>\n                  </>\n                )}\n              </div>\n            ) : (\n              'No materialization events'\n            )}\n          </td>\n        </tr>\n        {latest?.partition ? (\n          <tr>\n            <td>Latest partition</td>\n            <td>{latest ? latest.partition : 'No materialization events'}</td>\n          </tr>\n        ) : null}\n        <tr>\n          <td>Timestamp</td>\n          <td>\n            {latestEvent ? (\n              <Timestamp timestamp={{ms: Number(latestEvent.timestamp)}} />\n            ) : (\n              'No materialization events'\n            )}\n          </td>\n        </tr>\n        {latestAssetLineage?.length ? (\n          <tr>\n            <td>Parent assets</td>\n            <td>\n              <AssetLineageElements\n                elements={latestAssetLineage}\n                timestamp={latestEvent.timestamp}\n              />\n            </td>\n          </tr>\n        ) : null}\n        {latestEvent?.metadataEntries.map((entry) => (\n          <tr key={`metadata-${entry.label}`}>\n            <td>{entry.label}</td>\n            <td>\n              <MetadataEntry entry={entry} expandSmallValues={true} />\n            </td>\n            <td>{entry.description}</td>\n          </tr>\n        ))}\n      </tbody>\n    </MetadataTable>\n  );\n};\n\nconst MetadataTable = styled(Table)`\n  td:first-child {\n    white-space: nowrap;\n    width: 1px;\n    max-width: 400px;\n    word-break: break-word;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nexport const LATEST_MATERIALIZATION_METADATA_FRAGMENT = gql`\n  fragment LatestMaterializationMetadataFragment on MaterializationEvent {\n    partition\n    runOrError {\n      ... on PipelineRun {\n        id\n        runId\n        mode\n        pipelineName\n        pipelineSnapshotId\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n      }\n    }\n    runId\n    timestamp\n    stepKey\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    assetLineage {\n      assetKey {\n        path\n      }\n      partitions\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import groupBy from 'lodash/groupBy';\n\nimport {AssetMaterializationFragment} from './types/AssetMaterializationFragment';\nimport {AssetObservationFragment} from './types/AssetObservationFragment';\n\nconst NO_PARTITION_KEY = '__NO_PARTITION__';\n\ntype Event = AssetMaterializationFragment | AssetObservationFragment;\n\nexport type AssetEventGroup = {\n  latest: Event | null;\n  all: Event[];\n  timestamp: string;\n  partition?: string;\n};\n\nconst sortByEventTimestamp = (a: Event, b: Event) => Number(b?.timestamp) - Number(a?.timestamp);\n\n/**\n * A hook that can bucket a list of materializations by partition, if any, with the `latest`\n * materialization separated from predecessor materializations.\n */\nexport const groupByPartition = (\n  events: Event[],\n  definedPartitionKeys: string[],\n): AssetEventGroup[] => {\n  const grouped = groupBy(events, (m) => m.partition || NO_PARTITION_KEY);\n  const orderedPartitionKeys = [...definedPartitionKeys].reverse();\n\n  if (NO_PARTITION_KEY in grouped) {\n    orderedPartitionKeys.push(NO_PARTITION_KEY);\n  }\n\n  return orderedPartitionKeys\n    .filter((key) => key !== NO_PARTITION_KEY)\n    .map((key) => {\n      const sorted = [...(grouped[key] || [])].sort(sortByEventTimestamp);\n      const latestMaterialization = sorted.find((a) => a.__typename === 'MaterializationEvent');\n      const latest = latestMaterialization || sorted[0] || null;\n\n      return {\n        all: sorted,\n        latest,\n        timestamp: latest?.timestamp,\n        partition: key,\n      };\n    });\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, ButtonGroup, Colors, NonIdealState, Spinner, Subheading} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {LiveDataForNode} from '../asset-graph/Utils';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RepositorySelector} from '../types/globalTypes';\n\nimport {AssetEventsTable} from './AssetEventsTable';\nimport {ASSET_LINEAGE_FRAGMENT} from './AssetLineageElements';\nimport {AssetMaterializationGraphs} from './AssetMaterializationGraphs';\nimport {AssetViewParams} from './AssetView';\nimport {CurrentRunsBanner} from './CurrentRunsBanner';\nimport {FailedRunsSinceMaterializationBanner} from './FailedRunsSinceMaterializationBanner';\nimport {LatestMaterializationMetadata} from './LastMaterializationMetadata';\nimport {AssetEventGroup, groupByPartition} from './groupByPartition';\nimport {AssetKey} from './types';\nimport {AssetEventsQuery, AssetEventsQueryVariables} from './types/AssetEventsQuery';\n\ninterface Props {\n  assetKey: AssetKey;\n  asSidebarSection?: boolean;\n  liveData?: LiveDataForNode;\n  params: AssetViewParams;\n  paramsTimeWindowOnly: boolean;\n  setParams: (params: AssetViewParams) => void;\n\n  // This timestamp is a \"hint\", when it changes this component will refetch\n  // to retrieve new data. Just don't want to poll the entire table query.\n  assetLastMaterializedAt: string | undefined;\n\n  // This is passed in because we need to know whether to default to partition\n  // grouping /before/ loading all the data.\n  assetHasDefinedPartitions: boolean;\n  repository?: RepositorySelector;\n  opName?: string | null;\n}\n\n/**\n * If the asset has a defined partition space, we load all materializations in the\n * last 100 partitions. This ensures that if you run a huge backfill of old partitions,\n * you still see accurate info for the last 100 partitions in the UI. A count-based\n * limit could cause random partitions to disappear if materializations were out of order.\n */\nfunction useRecentAssetEvents(\n  assetKey: AssetKey,\n  assetHasDefinedPartitions: boolean,\n  xAxis: 'partition' | 'time',\n  before?: string,\n) {\n  const loadUsingPartitionKeys = assetHasDefinedPartitions && xAxis === 'partition';\n\n  const {data, loading, refetch} = useQuery<AssetEventsQuery, AssetEventsQueryVariables>(\n    ASSET_EVENTS_QUERY,\n    {\n      variables: loadUsingPartitionKeys\n        ? {\n            assetKey: {path: assetKey.path},\n            before,\n            partitionInLast: 120,\n          }\n        : {\n            assetKey: {path: assetKey.path},\n            before,\n            limit: 100,\n          },\n    },\n  );\n\n  return React.useMemo(() => {\n    const asset = data?.assetOrError.__typename === 'Asset' ? data?.assetOrError : null;\n    const materializations = asset?.assetMaterializations || [];\n    const observations = asset?.assetObservations || [];\n\n    const allPartitionKeys = asset?.definition?.partitionKeys;\n    const loadedPartitionKeys =\n      loadUsingPartitionKeys && allPartitionKeys\n        ? allPartitionKeys.slice(allPartitionKeys.length - 120)\n        : undefined;\n\n    return {asset, loadedPartitionKeys, materializations, observations, loading, refetch};\n  }, [data, loading, refetch, loadUsingPartitionKeys]);\n}\n\nexport const AssetEvents: React.FC<Props> = ({\n  assetKey,\n  assetLastMaterializedAt,\n  assetHasDefinedPartitions,\n  asSidebarSection,\n  params,\n  setParams,\n  liveData,\n}) => {\n  const before = params.asOf ? `${Number(params.asOf) + 1}` : undefined;\n  const xAxisDefault = assetHasDefinedPartitions ? 'partition' : 'time';\n  const xAxis =\n    assetHasDefinedPartitions && params.partition !== undefined\n      ? 'partition'\n      : params.time !== undefined || before\n      ? 'time'\n      : xAxisDefault;\n\n  const {\n    materializations,\n    observations,\n    loadedPartitionKeys,\n    loading,\n    refetch,\n  } = useRecentAssetEvents(assetKey, assetHasDefinedPartitions, xAxis, before);\n\n  React.useEffect(() => {\n    if (params.asOf) {\n      return;\n    }\n    refetch();\n  }, [params.asOf, assetLastMaterializedAt, refetch]);\n\n  const grouped = React.useMemo<AssetEventGroup[]>(() => {\n    const events = [...materializations, ...observations].sort(\n      (b, a) => Number(a.timestamp) - Number(b.timestamp),\n    );\n    if (xAxis === 'partition' && loadedPartitionKeys) {\n      return groupByPartition(events, loadedPartitionKeys);\n    } else {\n      // return a group for every materialization to achieve un-grouped rendering\n      return events.map((event) => ({\n        latest: event,\n        partition: event.partition || undefined,\n        timestamp: event.timestamp,\n        all: [],\n      }));\n    }\n  }, [loadedPartitionKeys, materializations, observations, xAxis]);\n\n  const activeItems = React.useMemo(() => new Set([xAxis]), [xAxis]);\n\n  const onSetFocused = (group: AssetEventGroup) => {\n    const updates: Partial<AssetViewParams> =\n      xAxis === 'time'\n        ? {time: group.timestamp !== params.time ? group.timestamp : ''}\n        : {partition: group.partition !== params.partition ? group.partition : ''};\n    setParams({...params, ...updates});\n  };\n\n  if (process.env.NODE_ENV === 'test') {\n    return <span />; // chartjs and our useViewport hook don't play nicely with jest\n  }\n\n  if (asSidebarSection) {\n    const latest = materializations[0];\n\n    if (loading) {\n      return (\n        <Box padding={{vertical: 20}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      );\n    }\n    return (\n      <>\n        <FailedRunsSinceMaterializationBanner liveData={liveData} />\n        <CurrentRunsBanner liveData={liveData} />\n        <SidebarSection title=\"Materialization in Last Run\">\n          {latest ? (\n            <div style={{margin: -1, maxWidth: '100%', overflowX: 'auto'}}>\n              <LatestMaterializationMetadata latest={latest} />\n            </div>\n          ) : (\n            <Box\n              margin={{horizontal: 24, vertical: 12}}\n              style={{color: Colors.Gray500, fontSize: '0.8rem'}}\n            >\n              No materializations found\n            </Box>\n          )}\n        </SidebarSection>\n        <SidebarSection title=\"Metadata Plots\">\n          <AssetMaterializationGraphs xAxis={xAxis} asSidebarSection groups={grouped} />\n        </SidebarSection>\n      </>\n    );\n  }\n\n  const focused =\n    grouped.find((b) =>\n      params.time\n        ? Number(b.timestamp) <= Number(params.time)\n        : params.partition\n        ? b.partition === params.partition\n        : false,\n    ) ||\n    grouped[0] ||\n    null;\n\n  if (loading) {\n    return (\n      <Box style={{display: 'flex'}}>\n        <Box style={{flex: 1}}>\n          <Box\n            flex={{justifyContent: 'space-between', alignItems: 'center'}}\n            padding={{vertical: 16, horizontal: 24}}\n            style={{marginBottom: -1}}\n          >\n            <Subheading>Asset Events</Subheading>\n          </Box>\n          <Box padding={{vertical: 20}}>\n            <Spinner purpose=\"section\" />\n          </Box>\n        </Box>\n        <Box style={{width: '40%'}} border={{side: 'left', color: Colors.KeylineGray, width: 1}} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box style={{display: 'flex', flex: 1}}>\n      <Box style={{flex: 1}}>\n        <Box\n          flex={{justifyContent: 'space-between', alignItems: 'center'}}\n          padding={{vertical: 16, horizontal: 24}}\n          style={{marginBottom: -1}}\n        >\n          <Subheading>Asset Events</Subheading>\n          {assetHasDefinedPartitions ? (\n            <div style={{margin: '-6px 0 '}}>\n              <ButtonGroup\n                activeItems={activeItems}\n                buttons={[\n                  {id: 'partition', label: 'By partition'},\n                  {id: 'time', label: 'By timestamp'},\n                ]}\n                onClick={(id: string) =>\n                  setParams(\n                    id === 'time'\n                      ? {...params, partition: undefined, time: focused.timestamp || ''}\n                      : {...params, partition: focused.partition || '', time: undefined},\n                  )\n                }\n              />\n            </div>\n          ) : null}\n        </Box>\n        <FailedRunsSinceMaterializationBanner liveData={liveData} />\n        <CurrentRunsBanner liveData={liveData} />\n        {grouped.length > 0 ? (\n          <AssetEventsTable\n            hasPartitions={assetHasDefinedPartitions}\n            hasLineage={materializations.some((m) => m.assetLineage.length > 0)}\n            groups={grouped}\n            focused={focused}\n            setFocused={onSetFocused}\n          />\n        ) : (\n          <Box padding={{vertical: 20}} border={{side: 'top', color: Colors.KeylineGray, width: 1}}>\n            <NonIdealState\n              icon=\"materialization\"\n              title=\"No materializations\"\n              description=\"No materializations were found for this asset.\"\n            />\n          </Box>\n        )}\n        {loadedPartitionKeys && (\n          <Box padding={{vertical: 16, horizontal: 24}} style={{color: Colors.Gray400}}>\n            Showing materializations for the last {loadedPartitionKeys.length} partitions.\n          </Box>\n        )}\n        {/** Ensures the line between the left and right columns goes to the bottom of the page */}\n        <div style={{flex: 1}} />\n      </Box>\n      <Box style={{width: '40%'}} border={{side: 'left', color: Colors.KeylineGray, width: 1}}>\n        <AssetMaterializationGraphs\n          xAxis={xAxis}\n          asSidebarSection={asSidebarSection}\n          groups={grouped}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst ASSET_EVENTS_QUERY = gql`\n  query AssetEventsQuery(\n    $assetKey: AssetKeyInput!\n    $limit: Int\n    $before: String\n    $partitionInLast: Int\n  ) {\n    assetOrError(assetKey: $assetKey) {\n      ... on Asset {\n        id\n        key {\n          path\n        }\n        assetObservations(\n          limit: $limit\n          beforeTimestampMillis: $before\n          partitionInLast: $partitionInLast\n        ) {\n          ...AssetObservationFragment\n        }\n        assetMaterializations(\n          limit: $limit\n          beforeTimestampMillis: $before\n          partitionInLast: $partitionInLast\n        ) {\n          ...AssetMaterializationFragment\n        }\n\n        definition {\n          id\n          partitionKeys\n        }\n      }\n    }\n  }\n  fragment AssetMaterializationFragment on MaterializationEvent {\n    partition\n    runOrError {\n      ... on PipelineRun {\n        id\n        runId\n        mode\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n        status\n        pipelineName\n        pipelineSnapshotId\n      }\n    }\n    runId\n    timestamp\n    stepKey\n    label\n    description\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    assetLineage {\n      ...AssetLineageFragment\n    }\n  }\n  fragment AssetObservationFragment on ObservationEvent {\n    partition\n    runOrError {\n      ... on PipelineRun {\n        id\n        runId\n        mode\n        repositoryOrigin {\n          id\n          repositoryName\n          repositoryLocationName\n        }\n        status\n        pipelineName\n        pipelineSnapshotId\n      }\n    }\n    runId\n    timestamp\n    stepKey\n    label\n    description\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${ASSET_LINEAGE_FRAGMENT}\n`;\n","import {Box, Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\n\nexport const AssetLink: React.FC<{\n  path: string[];\n  icon?: 'asset' | 'asset_non_sda' | 'folder';\n  url?: string;\n  isGroup?: boolean;\n}> = ({path, icon, url, isGroup}) => {\n  const linkUrl = url ? url : assetDetailsPathForKey({path});\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', display: 'inline-flex'}}>\n      {icon ? (\n        <Box margin={{right: 8}}>\n          <Icon name={icon} color={Colors.Gray400} />\n        </Box>\n      ) : null}\n      <Link to={linkUrl}>\n        <span style={{wordBreak: 'break-word'}}>\n          {path\n            .map((p, i) => <span key={i}>{p}</span>)\n            .reduce(\n              (accum, curr, ii) => [\n                ...accum,\n                ii > 0 ? <React.Fragment key={`${ii}-space`}>&nbsp;/&nbsp;</React.Fragment> : null,\n                curr,\n              ],\n              [] as React.ReactNode[],\n            )}\n          {isGroup ? '/' : null}\n        </span>\n      </Link>\n    </Box>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Box, MetadataTable} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DAGSTER_TYPE_FRAGMENT} from '../dagstertype/DagsterType';\nimport {DagsterTypeFragment} from '../dagstertype/types/DagsterTypeFragment';\nimport {MetadataEntry, METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntryFragment';\n\nimport {AssetNodeOpMetadataFragment} from './types/AssetNodeOpMetadataFragment';\n\nexport const metadataForAssetNode = (\n  assetNode: AssetNodeOpMetadataFragment,\n): {assetType?: DagsterTypeFragment; assetMetadata: MetadataEntryFragment[]} => {\n  const assetType = assetNode.op?.outputDefinitions[0]?.type;\n  const assetMetadata = assetNode.metadataEntries || [];\n  return {assetType, assetMetadata};\n};\n\nexport const AssetMetadataTable: React.FC<{\n  assetMetadata: MetadataEntryFragment[];\n}> = ({assetMetadata}) => {\n  const rows = assetMetadata.map((entry) => {\n    return {\n      key: entry.label,\n      value: <MetadataEntry entry={entry} />,\n    };\n  });\n  return (\n    <Box padding={{vertical: 16, horizontal: 24}}>\n      <MetadataTable rows={rows} />\n    </Box>\n  );\n};\n\nexport const ASSET_NODE_OP_METADATA_FRAGMENT = gql`\n  fragment AssetNodeOpMetadataFragment on AssetNode {\n    id\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    op {\n      outputDefinitions {\n        type {\n          ...DagsterTypeFragment\n        }\n      }\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${DAGSTER_TYPE_FRAGMENT}\n`;\n","import {Colors} from '@dagster-io/ui';\nimport {ActiveElement} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\nimport * as React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nexport interface AssetValueGraphData {\n  minY: number;\n  maxY: number;\n  minXNumeric: number;\n  maxXNumeric: number;\n  xAxis: 'time' | 'partition';\n  values: {\n    x: number | string; // time or partition\n    xNumeric: number; // time or partition index\n    y: number;\n  }[];\n}\n\nexport const AssetValueGraph: React.FC<{\n  label: string;\n  width: string;\n  yAxisLabel?: string;\n  data: AssetValueGraphData;\n  xHover: string | number | null;\n  onHoverX: (value: string | number | null) => void;\n}> = (props) => {\n  // Note: To get partitions on the X axis, we pass the partition names in as the `labels`,\n  // and pass the partition index as the x value. This prevents ChartJS from auto-coercing\n  // ISO date partition names to dates and then re-formatting the labels away from 2020-01-01.\n  //\n  if (!props.data) {\n    return <span />;\n  }\n\n  let labels: React.ReactText[] | undefined = undefined;\n  let xHover = props.xHover;\n  if (props.data.xAxis === 'partition') {\n    labels = props.data.values.map((v) => v.x);\n    xHover = xHover ? labels.indexOf(xHover) : null;\n  }\n\n  const graphData = {\n    labels,\n    datasets: [\n      {\n        label: props.label,\n        lineTension: 0,\n        data: props.data.values.map((v) => ({x: v.xNumeric, y: v.y})),\n        borderColor: Colors.Blue500,\n        backgroundColor: 'rgba(0,0,0,0)',\n        pointBorderWidth: 2,\n        pointHoverBorderWidth: 2,\n        pointHoverRadius: 13,\n        pointHoverBorderColor: Colors.Blue500,\n      },\n    ],\n  };\n\n  const options = {\n    animation: {\n      duration: 0,\n    },\n    elements: {\n      point: {\n        radius: ((context: any) =>\n          context.dataset.data[context.dataIndex]?.x === xHover ? 13 : 2) as any,\n      },\n    },\n    scales: {\n      x: {\n        id: 'x',\n        display: true,\n        ...(props.data.xAxis === 'time'\n          ? {\n              type: 'time',\n              title: {\n                display: true,\n                text: 'Timestamp',\n              },\n            }\n          : {\n              type: 'category',\n              title: {\n                display: true,\n                text: 'Partition',\n              },\n            }),\n      },\n      y: {id: 'y', display: true, title: {display: true, text: props.yAxisLabel || 'Value'}},\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    onHover(_: MouseEvent, activeElements: ActiveElement[]) {\n      if (activeElements.length === 0) {\n        props.onHoverX(null);\n        return;\n      }\n      const itemIdx = (activeElements[0] as any).index;\n      if (itemIdx === 0) {\n        // ChartJS errantly selects the first item when you're moving the mouse off the line\n        props.onHoverX(null);\n        return;\n      }\n      props.onHoverX(props.data.values[itemIdx].x);\n    },\n  };\n\n  return <Line type=\"line\" data={graphData} height={100} options={options} key={props.width} />;\n};\n","import {gql, RefetchQueriesFunction, useMutation} from '@apollo/client';\nimport {Button, DialogBody, DialogFooter, Dialog, Group} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\n\nimport {AssetWipeMutation, AssetWipeMutationVariables} from './types/AssetWipeMutation';\n\ninterface AssetKey {\n  path: string[];\n}\n\nexport const AssetWipeDialog: React.FC<{\n  assetKeys: AssetKey[];\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (assetKeys: AssetKey[]) => void;\n  requery?: RefetchQueriesFunction;\n}> = ({assetKeys, isOpen, onClose, onComplete, requery}) => {\n  const [requestWipe] = useMutation<AssetWipeMutation, AssetWipeMutationVariables>(\n    ASSET_WIPE_MUTATION,\n    {\n      variables: {assetKeys: assetKeys.map((key) => ({path: key.path || []}))},\n      refetchQueries: requery,\n    },\n  );\n\n  const wipe = async () => {\n    if (!assetKeys.length) {\n      return;\n    }\n    await requestWipe();\n    onComplete(assetKeys);\n  };\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={`Wipe materializations of ${\n        assetKeys.length === 1 ? displayNameForAssetKey(assetKeys[0]) : 'selected assets'\n      }?`}\n      onClose={onClose}\n      style={{width: 400}}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={8}>\n          <div>\n            Assets defined only by their historical materializations will disappear from the Asset\n            Catalog. Software-defined assets will remain unless their definition is also deleted\n            from the repository.\n          </div>\n          <strong>This action cannot be undone.</strong>\n        </Group>\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"none\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button intent=\"danger\" onClick={wipe}>\n          Wipe\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst ASSET_WIPE_MUTATION = gql`\n  mutation AssetWipeMutation($assetKeys: [AssetKeyInput!]!) {\n    wipeAssets(assetKeys: $assetKeys) {\n      ... on AssetWipeSuccess {\n        assetKeys {\n          path\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, RefetchQueriesFunction} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  Table,\n  Mono,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {usePermissions} from '../app/Permissions';\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {\n  AssetLatestRunWithNotices,\n  AssetRunLink,\n  ComputeStatusNotice,\n} from '../asset-graph/AssetNode';\nimport {LiveData, toGraphId} from '../asset-graph/Utils';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {MenuLink} from '../ui/MenuLink';\nimport {markdownToPlaintext} from '../ui/markdownToPlaintext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {AssetLink} from './AssetLink';\nimport {AssetWipeDialog} from './AssetWipeDialog';\nimport {LaunchAssetExecutionButton} from './LaunchAssetExecutionButton';\nimport {assetDetailsPathForKey} from './assetDetailsPathForKey';\nimport {AssetTableFragment as Asset} from './types/AssetTableFragment';\nimport {AssetViewType} from './useAssetView';\n\ntype AssetKey = {path: string[]};\n\nexport const AssetTable = ({\n  view,\n  assets,\n  actionBarComponents,\n  refreshState,\n  liveDataByNode,\n  prefixPath,\n  displayPathForAsset,\n  maxDisplayCount,\n  requery,\n}: {\n  view: AssetViewType;\n  assets: Asset[];\n  refreshState: QueryRefreshState;\n  actionBarComponents: React.ReactNode;\n  liveDataByNode: LiveData;\n  prefixPath: string[];\n  displayPathForAsset: (asset: Asset) => string[];\n  maxDisplayCount?: number;\n  requery?: RefetchQueriesFunction;\n}) => {\n  const [toWipe, setToWipe] = React.useState<AssetKey[] | undefined>();\n  const {canWipeAssets} = usePermissions();\n\n  const groupedByFirstComponent: {[pathComponent: string]: Asset[]} = {};\n\n  assets.forEach((asset) => {\n    const displayPathKey = JSON.stringify(displayPathForAsset(asset));\n    groupedByFirstComponent[displayPathKey] = [\n      ...(groupedByFirstComponent[displayPathKey] || []),\n      asset,\n    ];\n  });\n\n  const [{checkedIds: checkedPaths}, {onToggleFactory, onToggleAll}] = useSelectionReducer(\n    Object.keys(groupedByFirstComponent),\n  );\n\n  const checkedAssets: Asset[] = [];\n  const checkedPathsOnscreen: string[] = [];\n\n  const pageDisplayPathKeys = Object.keys(groupedByFirstComponent).sort().slice(0, maxDisplayCount);\n  pageDisplayPathKeys.forEach((pathKey) => {\n    if (checkedPaths.has(pathKey)) {\n      checkedPathsOnscreen.push(pathKey);\n      checkedAssets.push(...(groupedByFirstComponent[pathKey] || []));\n    }\n  });\n\n  return (\n    <Box flex={{direction: 'column'}}>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{vertical: 8, left: 24, right: 12}}>\n        {actionBarComponents}\n        <div style={{flex: 1}} />\n        <QueryRefreshCountdown refreshState={refreshState} />\n\n        <Box flex={{alignItems: 'center', gap: 8}}>\n          {checkedAssets.some((c) => !c.definition) ? (\n            <Tooltip content=\"One or more selected assets are not software-defined and cannot be launched directly.\">\n              <Button intent=\"primary\" icon={<Icon name=\"materialization\" />} disabled>\n                {checkedAssets.length > 1 ? `Materialize (${checkedAssets.length})` : 'Materialize'}\n              </Button>\n            </Tooltip>\n          ) : (\n            <LaunchAssetExecutionButton\n              assetKeys={checkedAssets.map((c) => c.key)}\n              liveDataByNode={liveDataByNode}\n            />\n          )}\n          <MoreActionsDropdown selected={checkedAssets} clearSelection={() => onToggleAll(false)} />\n        </Box>\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n              <Checkbox\n                indeterminate={\n                  checkedPathsOnscreen.length > 0 &&\n                  checkedPathsOnscreen.length !== pageDisplayPathKeys.length\n                }\n                checked={checkedPathsOnscreen.length === pageDisplayPathKeys.length}\n                onChange={(e) => {\n                  if (e.target instanceof HTMLInputElement) {\n                    onToggleAll(checkedPathsOnscreen.length !== pageDisplayPathKeys.length);\n                  }\n                }}\n              />\n            </th>\n            <th>{view === 'directory' ? 'Asset Key Prefix' : 'Asset Key'}</th>\n            <th style={{width: 340}}>Defined In</th>\n            <th style={{width: 265}}>Materialized</th>\n            <th style={{width: 115}}>Latest Run</th>\n            <th style={{width: 80}}>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pageDisplayPathKeys.length ? (\n            pageDisplayPathKeys.map((pathStr, idx) => {\n              return (\n                <AssetEntryRow\n                  key={idx}\n                  prefixPath={prefixPath}\n                  path={JSON.parse(pathStr)}\n                  assets={groupedByFirstComponent[pathStr] || []}\n                  liveDataByNode={liveDataByNode}\n                  isSelected={checkedPaths.has(pathStr)}\n                  onToggleChecked={onToggleFactory(pathStr)}\n                  onWipe={(assets: Asset[]) => setToWipe(assets.map((asset) => asset.key))}\n                  canWipe={canWipeAssets}\n                />\n              );\n            })\n          ) : (\n            <AssetEmptyRow />\n          )}\n        </tbody>\n      </Table>\n      <AssetWipeDialog\n        assetKeys={toWipe || []}\n        isOpen={!!toWipe}\n        onClose={() => setToWipe(undefined)}\n        onComplete={() => setToWipe(undefined)}\n        requery={requery}\n      />\n    </Box>\n  );\n};\n\nconst AssetEmptyRow = () => {\n  return (\n    <tr>\n      <td colSpan={6}>\n        <Box flex={{justifyContent: 'center', alignItems: 'center'}}>\n          <Box margin={{left: 8}}>No assets to display</Box>\n        </Box>\n      </td>\n    </tr>\n  );\n};\n\nconst AssetEntryRow: React.FC<{\n  prefixPath: string[];\n  path: string[];\n  isSelected: boolean;\n  onToggleChecked: (values: {checked: boolean; shiftKey: boolean}) => void;\n  assets: Asset[];\n  liveDataByNode: LiveData;\n  onWipe: (assets: Asset[]) => void;\n  canWipe?: boolean;\n}> = React.memo(\n  ({prefixPath, path, assets, isSelected, onToggleChecked, onWipe, canWipe, liveDataByNode}) => {\n    const fullPath = [...prefixPath, ...path];\n    const linkUrl = assetDetailsPathForKey({path: fullPath});\n\n    const isGroup = assets.length > 1 || fullPath.join('/') !== assets[0].key.path.join('/');\n    const asset = !isGroup ? assets[0] : null;\n\n    const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.target instanceof HTMLInputElement) {\n        const {checked} = e.target;\n        const shiftKey =\n          e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n        onToggleChecked({checked, shiftKey});\n      }\n    };\n\n    const liveData = asset && liveDataByNode[toGraphId(asset.key)];\n    const repoAddress = asset?.definition\n      ? buildRepoAddress(\n          asset.definition.repository.name,\n          asset.definition.repository.location.name,\n        )\n      : null;\n\n    return (\n      <tr>\n        <td style={{paddingRight: 8}}>\n          <Checkbox checked={isSelected} onChange={onChange} />\n        </td>\n        <td>\n          <AssetLink\n            path={path}\n            url={linkUrl}\n            isGroup={isGroup}\n            icon={isGroup ? 'folder' : asset?.definition ? 'asset' : 'asset_non_sda'}\n          />\n          <Description>\n            {asset?.definition &&\n              asset.definition.description &&\n              markdownToPlaintext(asset.definition.description).split('\\n')[0]}\n          </Description>\n        </td>\n        <td>\n          {repoAddress && (\n            <Box flex={{direction: 'column', gap: 4}}>\n              <RepositoryLink showIcon showRefresh={false} repoAddress={repoAddress} />\n              {asset?.definition && asset?.definition.groupName ? (\n                <Link\n                  to={workspacePathFromAddress(\n                    repoAddress,\n                    `/asset-groups/${asset.definition.groupName}`,\n                  )}\n                >\n                  <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n                    <Icon color={Colors.Gray400} name=\"asset_group\" /> {asset.definition.groupName}\n                  </Box>\n                </Link>\n              ) : undefined}\n            </Box>\n          )}\n        </td>\n        <td>\n          {liveData ? (\n            <Box flex={{gap: 8, alignItems: 'center'}}>\n              {liveData.lastMaterialization ? (\n                <Mono style={{flex: 1}}>\n                  <AssetRunLink\n                    runId={liveData.lastMaterialization.runId}\n                    event={{\n                      stepKey: liveData.stepKey,\n                      timestamp: liveData.lastMaterialization.timestamp,\n                    }}\n                  >\n                    <TimestampDisplay\n                      timestamp={Number(liveData.lastMaterialization.timestamp) / 1000}\n                      timeFormat={{showSeconds: false, showTimezone: false}}\n                    />\n                  </AssetRunLink>\n                </Mono>\n              ) : (\n                <span>–</span>\n              )}\n              <ComputeStatusNotice computeStatus={liveData?.computeStatus} />\n            </Box>\n          ) : undefined}\n        </td>\n        <td>\n          {liveData && (\n            <Mono>\n              <AssetLatestRunWithNotices liveData={liveData} />\n            </Mono>\n          )}\n        </td>\n        <td>\n          {asset ? (\n            <Box flex={{gap: 8, alignItems: 'center'}}>\n              <AnchorButton to={assetDetailsPathForKey({path})}>View details</AnchorButton>\n              <Popover\n                position=\"bottom-right\"\n                content={\n                  <Menu>\n                    <MenuLink\n                      text=\"Show in group\"\n                      to={\n                        repoAddress && asset.definition?.groupName\n                          ? workspacePathFromAddress(\n                              repoAddress,\n                              `/asset-groups/${asset.definition.groupName}`,\n                            )\n                          : ''\n                      }\n                      disabled={!asset?.definition}\n                      icon=\"asset_group\"\n                    />\n                    <MenuLink\n                      text=\"View neighbors\"\n                      to={assetDetailsPathForKey(\n                        {path},\n                        {view: 'lineage', lineageScope: 'neighbors'},\n                      )}\n                      disabled={!asset?.definition}\n                      icon=\"graph_neighbors\"\n                    />\n                    <MenuLink\n                      text=\"View upstream assets\"\n                      to={assetDetailsPathForKey(\n                        {path},\n                        {view: 'lineage', lineageScope: 'upstream'},\n                      )}\n                      disabled={!asset?.definition}\n                      icon=\"graph_upstream\"\n                    />\n                    <MenuLink\n                      text=\"View downstream assets\"\n                      to={assetDetailsPathForKey(\n                        {path},\n                        {view: 'lineage', lineageScope: 'downstream'},\n                      )}\n                      disabled={!asset?.definition}\n                      icon=\"graph_downstream\"\n                    />\n                    <MenuItem\n                      text=\"Wipe materializations\"\n                      icon=\"delete\"\n                      disabled={!canWipe}\n                      intent=\"danger\"\n                      onClick={() => canWipe && onWipe(assets)}\n                    />\n                  </Menu>\n                }\n              >\n                <Button icon={<Icon name=\"expand_more\" />} />\n              </Popover>\n            </Box>\n          ) : (\n            <span />\n          )}\n        </td>\n      </tr>\n    );\n  },\n);\n\nconst MoreActionsDropdown: React.FC<{\n  selected: Asset[];\n  clearSelection: () => void;\n  requery?: RefetchQueriesFunction;\n}> = React.memo(({selected, clearSelection, requery}) => {\n  const [showBulkWipeDialog, setShowBulkWipeDialog] = React.useState<boolean>(false);\n  const {canWipeAssets} = usePermissions();\n\n  if (!canWipeAssets) {\n    return null;\n  }\n\n  const disabled = selected.length === 0;\n\n  return (\n    <>\n      <Popover\n        position=\"bottom-right\"\n        content={\n          <Menu>\n            <MenuItem\n              text=\"Wipe materializations\"\n              onClick={() => setShowBulkWipeDialog(true)}\n              icon={<Icon name=\"delete\" color={disabled ? Colors.Gray600 : Colors.Red500} />}\n              disabled={disabled}\n              intent=\"danger\"\n            />\n          </Menu>\n        }\n      >\n        <Button icon={<Icon name=\"expand_more\" />} />\n      </Popover>\n      <AssetWipeDialog\n        assetKeys={selected.map((asset) => asset.key)}\n        isOpen={showBulkWipeDialog}\n        onClose={() => setShowBulkWipeDialog(false)}\n        onComplete={() => {\n          setShowBulkWipeDialog(false);\n          clearSelection();\n        }}\n        requery={requery}\n      />\n    </>\n  );\n});\n\nexport const ASSET_TABLE_DEFINITION_FRAGMENT = gql`\n  fragment AssetTableDefinitionFragment on AssetNode {\n    id\n    groupName\n    partitionDefinition\n    description\n    repository {\n      id\n      name\n      location {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const ASSET_TABLE_FRAGMENT = gql`\n  fragment AssetTableFragment on Asset {\n    __typename\n    id\n    key {\n      path\n    }\n    definition {\n      id\n      ...AssetTableDefinitionFragment\n    }\n  }\n  ${ASSET_TABLE_DEFINITION_FRAGMENT}\n`;\n\nconst Description = styled.div`\n  color: ${Colors.Gray800};\n  font-size: 14px;\n`;\n","import {NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\n\nexport const AssetsEmptyState = ({prefixPath}: {prefixPath: string[]}) => (\n  <NonIdealState\n    icon=\"asset\"\n    title=\"Assets\"\n    description={\n      <p>\n        {prefixPath && prefixPath.length\n          ? `There are no matching materialized assets with the specified asset key. `\n          : `There are no known materialized assets. `}\n        Any asset keys that have been specified with an <code>AssetMaterialization</code> during a\n        pipeline run will appear here. See the{' '}\n        <a href=\"https://docs.dagster.io/_apidocs/ops#dagster.AssetMaterialization\">\n          AssetMaterialization documentation\n        </a>{' '}\n        for more information.\n      </p>\n    }\n  />\n);\n","import {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nconst ASSET_VIEW_KEY = 'AssetViewPreference';\n\nexport type AssetViewType = 'flat' | 'directory';\n\nconst validateSavedAssetView = (storedValue: any) =>\n  storedValue === 'flat' || storedValue === 'directory' ? storedValue : 'flat';\n\nexport const useAssetView = () => {\n  return useStateWithStorage<AssetViewType>(ASSET_VIEW_KEY, validateSavedAssetView);\n};\n","import {gql, QueryResult, useQuery} from '@apollo/client';\nimport {\n  Box,\n  CursorPaginationControls,\n  CursorPaginationProps,\n  TextInput,\n  Suggest,\n  MenuItem,\n  Icon,\n  ButtonGroup,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport uniqBy from 'lodash/uniqBy';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useMergedRefresh, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment';\nimport {tokenForAssetKey} from '../asset-graph/Utils';\nimport {useLiveDataForAssetKeys} from '../asset-graph/useLiveDataForAssetKeys';\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {AssetGroupSelector} from '../types/globalTypes';\nimport {ClearButton} from '../ui/ClearButton';\nimport {LoadingSpinner} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\nimport {buildRepoPath} from '../workspace/buildRepoAddress';\n\nimport {AssetTable, ASSET_TABLE_DEFINITION_FRAGMENT, ASSET_TABLE_FRAGMENT} from './AssetTable';\nimport {AssetsEmptyState} from './AssetsEmptyState';\nimport {AssetKey} from './types';\nimport {\n  AssetCatalogGroupTableQuery,\n  AssetCatalogGroupTableQueryVariables,\n  AssetCatalogGroupTableQuery_assetNodes,\n} from './types/AssetCatalogGroupTableQuery';\nimport {\n  AssetCatalogTableQuery,\n  AssetCatalogTableQuery_assetsOrError_AssetConnection_nodes,\n} from './types/AssetCatalogTableQuery';\nimport {AssetTableFragment} from './types/AssetTableFragment';\nimport {AssetViewType, useAssetView} from './useAssetView';\n\nconst PAGE_SIZE = 50;\n\ntype Asset = AssetCatalogTableQuery_assetsOrError_AssetConnection_nodes;\n\nfunction useAllAssets(\n  groupSelector?: AssetGroupSelector,\n): {\n  query: QueryResult;\n  assets: AssetTableFragment[] | undefined;\n  error: PythonErrorFragment | undefined;\n} {\n  const assetsQuery = useQuery<AssetCatalogTableQuery>(ASSET_CATALOG_TABLE_QUERY, {\n    skip: !!groupSelector,\n    notifyOnNetworkStatusChange: true,\n  });\n  const groupQuery = useQuery<AssetCatalogGroupTableQuery, AssetCatalogGroupTableQueryVariables>(\n    ASSET_CATALOG_GROUP_TABLE_QUERY,\n    {\n      skip: !groupSelector,\n      variables: {group: groupSelector},\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  return React.useMemo(() => {\n    if (groupSelector) {\n      const assetNodes = groupQuery.data?.assetNodes;\n      return {\n        query: groupQuery,\n        error: undefined,\n        assets: assetNodes?.map(definitionToAssetTableFragment),\n      };\n    } else {\n      const assetsOrError = assetsQuery.data?.assetsOrError;\n      return {\n        query: assetsQuery,\n        error: assetsOrError?.__typename === 'PythonError' ? assetsOrError : undefined,\n        assets: assetsOrError?.__typename === 'AssetConnection' ? assetsOrError.nodes : undefined,\n      };\n    }\n  }, [assetsQuery, groupQuery, groupSelector]);\n}\n\ninterface AssetCatalogTableProps {\n  prefixPath: string[];\n  setPrefixPath: (prefixPath: string[]) => void;\n  groupSelector?: AssetGroupSelector;\n}\n\nexport const AssetsCatalogTable: React.FC<AssetCatalogTableProps> = ({\n  prefixPath,\n  setPrefixPath,\n  groupSelector,\n}) => {\n  const [view, setView] = useAssetView();\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n  const [search, setSearch] = useQueryPersistedState<string | undefined>({queryKey: 'q'});\n  const [searchGroup, setSearchGroup] = useQueryPersistedState<AssetGroupSelector | null>({\n    queryKey: 'g',\n    decode: (qs) => (qs.group ? JSON.parse(qs.group) : null),\n    encode: (group) => ({group: group ? JSON.stringify(group) : undefined}),\n  });\n\n  const searchPath = (search || '')\n    .replace(/(( ?> ?)|\\.|\\/)/g, '/')\n    .toLowerCase()\n    .trim();\n\n  const {assets, query, error} = useAllAssets(groupSelector);\n  const filtered = React.useMemo(\n    () =>\n      (assets || []).filter((a) => {\n        const groupMatch = !searchGroup || isEqual(buildAssetGroupSelector(a), searchGroup);\n        const pathMatch = !searchPath || tokenForAssetKey(a.key).toLowerCase().includes(searchPath);\n        return groupMatch && pathMatch;\n      }),\n    [assets, searchPath, searchGroup],\n  );\n\n  const {displayPathForAsset, displayed, nextCursor, prevCursor} =\n    view === 'flat'\n      ? buildFlatProps(filtered, prefixPath, cursor)\n      : buildNamespaceProps(filtered, prefixPath, cursor);\n\n  const displayedKeys = React.useMemo(\n    () => displayed.map<AssetKey>((a) => ({path: a.key.path})),\n    [displayed],\n  );\n  const {liveDataByNode, liveResult} = useLiveDataForAssetKeys(displayedKeys);\n\n  const refreshState = useMergedRefresh(\n    useQueryRefreshAtInterval(query, FIFTEEN_SECONDS),\n    useQueryRefreshAtInterval(liveResult, FIFTEEN_SECONDS),\n  );\n\n  React.useEffect(() => {\n    if (view !== 'directory' && prefixPath.length) {\n      setView('directory');\n    }\n  }, [view, setView, prefixPath]);\n\n  if (error) {\n    return <PythonErrorInfo error={error} />;\n  }\n  if (!assets) {\n    return <LoadingSpinner purpose=\"page\" />;\n  }\n  if (!assets.length) {\n    return (\n      <Box padding={{vertical: 64}}>\n        <AssetsEmptyState prefixPath={prefixPath} />\n      </Box>\n    );\n  }\n\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!prevCursor,\n    hasNextCursor: !!nextCursor,\n    popCursor: () => setCursor(prevCursor),\n    advanceCursor: () => setCursor(nextCursor),\n    reset: () => {\n      setCursor(undefined);\n    },\n  };\n\n  return (\n    <Wrapper>\n      <StickyTableContainer $top={0}>\n        <AssetTable\n          view={view}\n          assets={displayed}\n          liveDataByNode={liveDataByNode}\n          actionBarComponents={\n            <>\n              <ButtonGroup<AssetViewType>\n                activeItems={new Set([view])}\n                buttons={[\n                  {id: 'flat', icon: 'view_list', tooltip: 'List view'},\n                  {id: 'directory', icon: 'folder', tooltip: 'Folder view'},\n                ]}\n                onClick={(view) => {\n                  setView(view);\n                  if (view === 'flat' && prefixPath.length) {\n                    setPrefixPath([]);\n                  }\n                }}\n              />\n              <TextInput\n                value={search || ''}\n                style={{width: '30vw', minWidth: 150, maxWidth: 400}}\n                placeholder={\n                  prefixPath.length\n                    ? `Filter asset keys in ${prefixPath.join('/')}…`\n                    : `Filter asset keys…`\n                }\n                onChange={(e: React.ChangeEvent<any>) => setSearch(e.target.value)}\n              />\n              {!groupSelector ? (\n                <AssetGroupSuggest assets={assets} value={searchGroup} onChange={setSearchGroup} />\n              ) : undefined}\n            </>\n          }\n          refreshState={refreshState}\n          prefixPath={prefixPath || []}\n          displayPathForAsset={displayPathForAsset}\n          maxDisplayCount={PAGE_SIZE}\n          requery={(_) => [{query: ASSET_CATALOG_TABLE_QUERY}]}\n        />\n      </StickyTableContainer>\n      <Box padding={{bottom: 64}}>\n        <CursorPaginationControls {...paginationProps} />\n      </Box>\n    </Wrapper>\n  );\n};\n\nconst AssetGroupSuggest: React.FC<{\n  assets: Asset[];\n  value: AssetGroupSelector | null;\n  onChange: (g: AssetGroupSelector | null) => void;\n}> = ({assets, value, onChange}) => {\n  const assetGroups = React.useMemo(\n    () =>\n      uniqBy(\n        (assets || []).map(buildAssetGroupSelector).filter((a) => !!a) as AssetGroupSelector[],\n        (a) => JSON.stringify(a),\n      ).sort((a, b) => a.groupName.localeCompare(b.groupName)),\n    [assets],\n  );\n\n  const repoContextNeeded = React.useMemo(() => {\n    // This is a bit tricky - the first time we find a groupName it sets the key to `false`.\n    // The second time, it sets the value to `true` + tells use we need to show the repo name\n    const result: {[groupName: string]: boolean} = {};\n    assetGroups.forEach(\n      (group) => (result[group.groupName] = result.hasOwnProperty(group.groupName)),\n    );\n    return result;\n  }, [assetGroups]);\n\n  return (\n    <Suggest<AssetGroupSelector>\n      selectedItem={value}\n      items={assetGroups}\n      inputProps={{\n        style: {width: 220},\n        placeholder: 'Filter asset groups…',\n        rightElement: value ? (\n          <ClearButton onClick={() => onChange(null)} style={{marginTop: 5, marginRight: 4}}>\n            <Icon name=\"cancel\" />\n          </ClearButton>\n        ) : undefined,\n      }}\n      inputValueRenderer={(partition) => partition.groupName}\n      itemPredicate={(query, partition) =>\n        query.length === 0 || partition.groupName.includes(query)\n      }\n      itemsEqual={isEqual}\n      itemRenderer={(assetGroup, props) => (\n        <MenuItem\n          active={props.modifiers.active}\n          onClick={props.handleClick}\n          key={JSON.stringify(assetGroup)}\n          text={\n            <>\n              {assetGroup.groupName}\n              {repoContextNeeded[assetGroup.groupName] ? (\n                <span style={{opacity: 0.5, paddingLeft: 4}}>\n                  {buildRepoPath(assetGroup.repositoryName, assetGroup.repositoryLocationName)}\n                </span>\n              ) : undefined}\n            </>\n          }\n        />\n      )}\n      noResults={<MenuItem disabled={true} text=\"No asset groups\" />}\n      onItemSelect={onChange}\n    />\n  );\n};\nconst Wrapper = styled.div`\n  flex: 1 1;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  min-width: 0;\n  position: relative;\n  z-index: 0;\n`;\n\nconst ASSET_CATALOG_TABLE_QUERY = gql`\n  query AssetCatalogTableQuery {\n    assetsOrError {\n      __typename\n      ... on AssetConnection {\n        nodes {\n          id\n          ...AssetTableFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n  ${ASSET_TABLE_FRAGMENT}\n`;\n\nconst ASSET_CATALOG_GROUP_TABLE_QUERY = gql`\n  query AssetCatalogGroupTableQuery($group: AssetGroupSelector) {\n    assetNodes(group: $group) {\n      id\n      assetKey {\n        path\n      }\n      ...AssetTableDefinitionFragment\n    }\n  }\n  ${ASSET_TABLE_DEFINITION_FRAGMENT}\n`;\n\n// When we load the AssetCatalogTable for a particular asset group, we retrieve `assetNodes`,\n// not `assets`. To narrow the scope of this difference we coerce the nodes to look like\n// AssetCatalogTableQuery results.\n//\nfunction definitionToAssetTableFragment(\n  definition: AssetCatalogGroupTableQuery_assetNodes,\n): AssetTableFragment {\n  return {__typename: 'Asset', id: definition.id, key: definition.assetKey, definition};\n}\n\nfunction buildAssetGroupSelector(a: Asset) {\n  return a.definition && a.definition.groupName\n    ? {\n        groupName: a.definition.groupName,\n        repositoryName: a.definition.repository.name,\n        repositoryLocationName: a.definition.repository.location.name,\n      }\n    : null;\n}\n\nfunction buildFlatProps(assets: Asset[], prefixPath: string[], cursor: string | undefined) {\n  const cursorValue = (asset: Asset) => JSON.stringify([...prefixPath, ...asset.key.path]);\n  const cursorIndex = cursor ? assets.findIndex((ns) => cursor <= cursorValue(ns)) : 0;\n  const prevPageIndex = Math.max(0, cursorIndex - PAGE_SIZE);\n  const nextPageIndex = cursorIndex + PAGE_SIZE;\n\n  return {\n    displayed: assets.slice(cursorIndex, cursorIndex + PAGE_SIZE),\n    displayPathForAsset: (asset: Asset) => asset.key.path,\n    prevCursor: cursorIndex > 0 ? cursorValue(assets[prevPageIndex]) : undefined,\n    nextCursor: nextPageIndex < assets.length ? cursorValue(assets[nextPageIndex]) : undefined,\n  };\n}\n\nfunction buildNamespaceProps(assets: Asset[], prefixPath: string[], cursor: string | undefined) {\n  const namespaceForAsset = (asset: Asset) => {\n    return asset.key.path.slice(prefixPath.length, prefixPath.length + 1);\n  };\n  const namespaces = Array.from(\n    new Set(assets.map((asset) => JSON.stringify(namespaceForAsset(asset)))),\n  )\n    .map((x) => JSON.parse(x))\n    .sort();\n\n  const cursorValue = (ns: string[]) => JSON.stringify([...prefixPath, ...ns]);\n  const cursorIndex = cursor ? namespaces.findIndex((ns) => cursor <= cursorValue(ns)) : 0;\n\n  if (cursorIndex === -1) {\n    return {\n      displayPathForAsset: namespaceForAsset,\n      displayed: [],\n      prevCursor: undefined,\n      nextCursor: undefined,\n    };\n  }\n\n  const slice = namespaces.slice(cursorIndex, cursorIndex + PAGE_SIZE);\n  const prevPageIndex = Math.max(0, cursorIndex - PAGE_SIZE);\n  const prevCursor = cursorIndex !== 0 ? cursorValue(namespaces[prevPageIndex]) : undefined;\n  const nextPageIndex = cursorIndex + PAGE_SIZE;\n  const nextCursor =\n    namespaces.length > nextPageIndex ? cursorValue(namespaces[nextPageIndex]) : undefined;\n\n  return {\n    nextCursor,\n    prevCursor,\n    displayPathForAsset: namespaceForAsset,\n    displayed: filterAssetsByNamespace(\n      assets,\n      slice.map((ns) => [...prefixPath, ...ns]),\n    ),\n  };\n}\n\nconst filterAssetsByNamespace = (assets: Asset[], paths: string[][]) => {\n  return assets.filter((asset) =>\n    paths.some((path) => path.every((part, i) => part === asset.key.path[i])),\n  );\n};\n","import {gql, useLazyQuery, useMutation, useQuery} from '@apollo/client';\nimport {\n  Alert,\n  Box,\n  Button,\n  ButtonLink,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Tooltip,\n  Mono,\n} from '@dagster-io/ui';\nimport {History} from 'history';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {SharedToaster} from '../app/DomUtils';\nimport {PipelineRunTag} from '../app/ExecutionSessionStorage';\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {GanttChartMode} from '../gantt/GanttChart';\nimport {buildLayout} from '../gantt/GanttChartLayout';\nimport {useViewport} from '../gantt/useViewport';\nimport {LAUNCH_PARTITION_BACKFILL_MUTATION} from '../instance/BackfillUtils';\nimport {\n  LaunchPartitionBackfill,\n  LaunchPartitionBackfillVariables,\n} from '../instance/types/LaunchPartitionBackfill';\nimport {LaunchButton} from '../launchpad/LaunchButton';\nimport {TagContainer, TagEditor} from '../launchpad/TagEditor';\nimport {RunStatus} from '../types/globalTypes';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nimport {PartitionRangeInput} from './PartitionRangeInput';\nimport {\n  BOX_SIZE,\n  GridColumn,\n  GridFloatingContainer,\n  GridScrollContainer,\n  LeftLabel,\n  topLabelHeightForLabels,\n  TopLabel,\n  TopLabelTilted,\n} from './RunMatrixUtils';\nimport {PartitionStatusQuery, PartitionStatusQueryVariables} from './types/PartitionStatusQuery';\nimport {\n  PartitionsBackfillSelectorQuery,\n  PartitionsBackfillSelectorQueryVariables,\n} from './types/PartitionsBackfillSelectorQuery';\n\nconst OVERSCROLL = 200;\nconst DEFAULT_RUN_LAUNCHER_NAME = 'DefaultRunLauncher';\n\ninterface BackfillOptions {\n  reexecute: boolean;\n  fromFailure: boolean;\n}\n\ntype SelectionRange = {\n  start: string;\n  end: string;\n};\n\nexport const PartitionsBackfillPartitionSelector: React.FC<{\n  partitionSetName: string;\n  pipelineName: string;\n  onLaunch?: (backfillId: string, stepQuery: string) => void;\n  onCancel?: () => void;\n  onSubmit: () => void;\n  repoAddress: RepoAddress;\n}> = ({partitionSetName, pipelineName, onLaunch, onCancel, onSubmit, repoAddress}) => {\n  const history = useHistory();\n  const repositorySelector = repoAddressToSelector(repoAddress);\n  const [currentSelectionRange, setCurrentSelectionRange] = React.useState<\n    SelectionRange | undefined\n  >();\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [tagEditorOpen, setTagEditorOpen] = React.useState<boolean>(false);\n  const [tags, setTags] = React.useState<PipelineRunTag[]>([]);\n  const [query, setQuery] = React.useState<string>('');\n  const [options, setOptions] = React.useState<BackfillOptions>({\n    reexecute: false,\n    fromFailure: false,\n  });\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  const {containerProps, viewport} = useViewport({\n    initialOffset: React.useCallback((el) => ({left: el.scrollWidth - el.clientWidth, top: 0}), []),\n  });\n\n  React.useEffect(() => {\n    const resetSelectionRange = () => setCurrentSelectionRange(undefined);\n    window.addEventListener('mouseup', resetSelectionRange);\n    return () => window.removeEventListener('mouseup', resetSelectionRange);\n  });\n\n  const mounted = React.useRef(true);\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [onLaunch]);\n\n  const {loading, data} = useQuery<\n    PartitionsBackfillSelectorQuery,\n    PartitionsBackfillSelectorQueryVariables\n  >(PARTITIONS_BACKFILL_SELECTOR_QUERY, {\n    variables: {\n      repositorySelector,\n      partitionSetName,\n      pipelineSelector: {\n        ...repositorySelector,\n        pipelineName,\n      },\n    },\n    fetchPolicy: 'network-only',\n  });\n\n  const [queryStatuses, {loading: statusesLoading, data: statusesData}] = useLazyQuery<\n    PartitionStatusQuery,\n    PartitionStatusQueryVariables\n  >(PARTITION_STATUS_QUERY, {\n    variables: {\n      repositorySelector,\n      partitionSetName,\n    },\n    fetchPolicy: 'cache-and-network',\n  });\n\n  if (!data || loading) {\n    return (\n      <Box margin={{vertical: 32}} flex={{justifyContent: 'center'}}>\n        <Spinner purpose=\"section\" />\n      </Box>\n    );\n  }\n\n  if (data.partitionSetOrError.__typename === 'PartitionSetNotFoundError') {\n    return (\n      <Box margin={20}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"Partition Set Not Found\"\n          description={data.partitionSetOrError.message}\n        />\n      </Box>\n    );\n  }\n  if (data.pipelineSnapshotOrError.__typename === 'PipelineNotFoundError') {\n    return (\n      <Box margin={20}>\n        <NonIdealState\n          icon=\"error\"\n          title={isJob ? 'Job not found' : 'Pipeline not found'}\n          description={data.pipelineSnapshotOrError.message}\n        />\n      </Box>\n    );\n  }\n  if (data.pipelineSnapshotOrError.__typename === 'PipelineSnapshotNotFoundError') {\n    return (\n      <Box margin={20}>\n        <NonIdealState\n          icon=\"error\"\n          title={isJob ? 'Job not found' : 'Pipeline not found'}\n          description={data.pipelineSnapshotOrError.message}\n        />\n      </Box>\n    );\n  }\n\n  if (data.partitionSetOrError.__typename === 'PythonError') {\n    return (\n      <Box margin={20}>\n        <PythonErrorInfo error={data.partitionSetOrError} />\n      </Box>\n    );\n  }\n\n  if (data.pipelineSnapshotOrError.__typename === 'PythonError') {\n    return (\n      <Box margin={20}>\n        <PythonErrorInfo error={data.pipelineSnapshotOrError} />;\n      </Box>\n    );\n  }\n\n  if (statusesData?.partitionSetOrError.__typename === 'PythonError') {\n    return (\n      <Box margin={20}>\n        <PythonErrorInfo error={statusesData?.partitionSetOrError} />\n      </Box>\n    );\n  }\n\n  const onSuccess = (backfillId: string) => {\n    showBackfillSuccessToast(history, backfillId);\n    onLaunch?.(backfillId, query);\n  };\n\n  const onError = (data: LaunchPartitionBackfill | null | undefined) => {\n    showBackfillErrorToast(data);\n  };\n\n  const {\n    partitionSetOrError: partitionSet,\n    pipelineSnapshotOrError: pipelineSnapshot,\n    instance,\n  } = data;\n\n  const solids = pipelineSnapshot.solidHandles.map((h: any) => h.solid);\n  const runPartitions =\n    partitionSet.partitionsOrError.__typename === 'Partitions'\n      ? partitionSet.partitionsOrError.results\n      : null;\n\n  if (!solids || !runPartitions) {\n    return <span />;\n  }\n\n  const partitionStatuses = () => {\n    if (\n      statusesData?.partitionSetOrError.__typename === 'PartitionSet' &&\n      statusesData.partitionSetOrError.partitionStatusesOrError.__typename === 'PartitionStatuses'\n    ) {\n      return statusesData.partitionSetOrError.partitionStatusesOrError.results;\n    }\n    return [];\n  };\n\n  const partitionNames = runPartitions.map((x) => x.name);\n  const statuses = partitionStatuses();\n\n  const partitionsWithLastRunSuccess = statuses\n    .filter((x) => x.runStatus === RunStatus.SUCCESS)\n    .map((x) => x.partitionName);\n\n  const partitionsWithLastRunFailure = statuses\n    .filter(\n      (x) =>\n        x.runStatus === RunStatus.FAILURE ||\n        x.runStatus === RunStatus.CANCELED ||\n        x.runStatus === RunStatus.CANCELING,\n    )\n    .map((x) => x.partitionName);\n\n  const selectablePartitions = options.reexecute\n    ? options.fromFailure\n      ? partitionsWithLastRunFailure\n      : partitionsWithLastRunSuccess\n    : partitionNames;\n\n  const solidsFiltered = filterByQuery(solids, query);\n  const layout = buildLayout({nodes: solidsFiltered.all, mode: GanttChartMode.FLAT});\n  const stepRows = layout.boxes.map((box) => ({\n    x: box.x,\n    name: box.node.name,\n  }));\n\n  const usingDefaultRunLauncher = instance.runLauncher?.name === DEFAULT_RUN_LAUNCHER_NAME;\n\n  const getRangeSelection = (start: string, end: string) => {\n    const startIdx = selectablePartitions.indexOf(start);\n    const endIdx = selectablePartitions.indexOf(end);\n    return selectablePartitions.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n  };\n\n  const currentRangeSelection = currentSelectionRange\n    ? getRangeSelection(currentSelectionRange.start, currentSelectionRange.end)\n    : [];\n\n  const onPartitionMouseDown = (name: string) => {\n    setCurrentSelectionRange({start: name, end: name});\n  };\n\n  const onPartitionMouseUp = (_: string) => {\n    if (!currentRangeSelection.length) {\n      return;\n    }\n\n    const allSelected = currentRangeSelection.every((name) => selected.includes(name));\n    if (allSelected) {\n      setSelected(selected.filter((x) => !currentRangeSelection.includes(x)));\n    } else {\n      const newSelected = new Set(selected);\n      currentRangeSelection.forEach((name) => newSelected.add(name));\n      setSelected(Array.from(newSelected));\n    }\n    setCurrentSelectionRange(undefined);\n  };\n\n  const onPartitionMouseOver = (name: string) => {\n    if (!currentSelectionRange) {\n      return;\n    }\n    const {start} = currentSelectionRange;\n    setCurrentSelectionRange({start, end: name});\n  };\n\n  const visibleRangeStart = Math.max(0, Math.floor((viewport.left - OVERSCROLL) / BOX_SIZE));\n  const visibleCount = Math.ceil((viewport.width + OVERSCROLL * 2) / BOX_SIZE);\n  const visiblePartitionNames = partitionNames.slice(\n    visibleRangeStart,\n    visibleRangeStart + visibleCount,\n  );\n\n  const topLabelHeight = topLabelHeightForLabels(partitionNames);\n\n  return (\n    <>\n      <DialogBody>\n        <Box flex={{direction: 'column', gap: 8}}>\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n            <strong style={{display: 'block'}}>Partitions</strong>\n            <Checkbox\n              label=\"Select all\"\n              disabled={!selectablePartitions.length}\n              style={{marginBottom: 0, marginLeft: 10}}\n              checked={selected.length === selectablePartitions.length}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (!e.target.checked) {\n                  setSelected([]);\n                } else {\n                  setSelected(\n                    selected.length === selectablePartitions.length ? [] : selectablePartitions,\n                  );\n                }\n              }}\n            />\n          </Box>\n          <PartitionRangeInput\n            value={selected}\n            partitionNames={partitionNames}\n            onChange={setSelected}\n          />\n        </Box>\n        <Box flex={{direction: 'row', gap: 24}} margin={{top: 16}}>\n          <Box flex={{direction: 'column', gap: 8}}>\n            <strong>Step subset</strong>\n            <GraphQueryInput\n              disabled={options.fromFailure}\n              width={520}\n              items={solids}\n              value={query}\n              placeholder=\"Type a step subset\"\n              onChange={setQuery}\n            />\n          </Box>\n          <Box flex={{direction: 'column', gap: 12}}>\n            <strong>Options</strong>\n            <div style={{display: 'flex'}}>\n              <Checkbox\n                checked={options.fromFailure}\n                onChange={() => {\n                  if (!statusesData) {\n                    queryStatuses();\n                  }\n                  setSelected([]);\n                  setQuery('');\n                  setOptions({\n                    ...options,\n                    reexecute: !options.reexecute,\n                    fromFailure: !options.fromFailure,\n                  });\n                }}\n                label={\n                  <Box flex={{display: 'inline-flex', alignItems: 'center'}}>\n                    <Box margin={{right: 4}}>Re-execute from failures</Box>\n                    <Tooltip\n                      placement=\"top\"\n                      content=\"For each partition, if the most recent run failed, launch a re-execution starting from the steps that failed.\"\n                    >\n                      <Icon name=\"info\" color={Colors.Gray500} />\n                    </Tooltip>\n                  </Box>\n                }\n              />\n              {statusesLoading ? (\n                <div style={{marginLeft: '8px', marginTop: '3px'}}>\n                  <Spinner purpose=\"body-text\" />\n                </div>\n              ) : null}\n            </div>\n          </Box>\n        </Box>\n        <Box flex={{direction: 'column', gap: 8}} margin={{top: 16}}>\n          <TagEditor\n            tagsFromSession={tags}\n            onChange={setTags}\n            open={tagEditorOpen}\n            onRequestClose={() => setTagEditorOpen(false)}\n          />\n          <strong>Tags</strong>\n          {tags.length ? (\n            <div style={{border: `1px solid ${Colors.Gray300}`, borderRadius: 8, padding: 3}}>\n              <TagContainer tagsFromSession={tags} onRequestEdit={() => setTagEditorOpen(true)} />\n            </div>\n          ) : (\n            <div>\n              <Button onClick={() => setTagEditorOpen(true)}>Add tags to backfill runs</Button>\n            </div>\n          )}\n        </Box>\n\n        <div\n          style={{\n            display: 'flex',\n            marginTop: 20,\n            paddingTop: 20,\n            borderTop: `1px solid ${Colors.Gray100}`,\n            justifyContent: 'space-between',\n          }}\n        >\n          <strong style={{display: 'block', marginBottom: 4}}>Preview</strong>\n          <div style={{color: Colors.Gray400}}>Click or drag to edit selected partitions</div>\n        </div>\n        <div style={{display: 'flex', border: `1px solid ${Colors.Gray200}`}}>\n          {query && (\n            <GridFloatingContainer floating={true}>\n              <GridColumn disabled>\n                <TopLabel style={{height: topLabelHeight}} />\n                {stepRows.map((step) => (\n                  <LeftLabel style={{paddingLeft: step.x}} key={step.name}>\n                    {step.name}\n                  </LeftLabel>\n                ))}\n              </GridColumn>\n            </GridFloatingContainer>\n          )}\n          <GridScrollContainer {...containerProps}>\n            <div\n              style={{\n                width: partitionNames.length * BOX_SIZE,\n                position: 'relative',\n                height: query\n                  ? stepRows.length * BOX_SIZE + topLabelHeight\n                  : BOX_SIZE + topLabelHeight + 25,\n              }}\n            >\n              {visiblePartitionNames.map((partitionName, idx) => (\n                <GridColumn\n                  key={partitionName}\n                  style={{\n                    zIndex: partitionNames.length - (idx + visibleRangeStart),\n                    width: BOX_SIZE,\n                    position: 'absolute',\n                    userSelect: 'none',\n                    left: (idx + visibleRangeStart) * BOX_SIZE,\n                  }}\n                  disabled={statusesLoading || !selectablePartitions.includes(partitionName)}\n                  focused={selected.includes(partitionName)}\n                  multiselectFocused={currentRangeSelection.includes(partitionName)}\n                  onMouseDown={() => onPartitionMouseDown(partitionName)}\n                  onMouseUp={() => onPartitionMouseUp(partitionName)}\n                  onMouseOver={() => onPartitionMouseOver(partitionName)}\n                >\n                  <TopLabelTilted $height={topLabelHeight} label={partitionName} />\n                  {!options.reexecute ? (\n                    <div\n                      className={`square ${\n                        selectablePartitions.includes(partitionName) ? 'missing' : 'disabled'\n                      }`}\n                    />\n                  ) : options.fromFailure ? (\n                    <div\n                      className={`square ${\n                        selectablePartitions.includes(partitionName) ? 'failure' : 'disabled'\n                      }`}\n                    />\n                  ) : (\n                    stepRows.map((step) => (\n                      <div\n                        key={`${partitionName}:${step.name}`}\n                        className={`square ${\n                          selectablePartitions.includes(partitionName) ? 'missing' : 'disabled'\n                        }`}\n                      />\n                    ))\n                  )}\n                </GridColumn>\n              ))}\n            </div>\n          </GridScrollContainer>\n        </div>\n\n        {!instance.daemonHealth.daemonStatus.healthy ? (\n          <div style={{marginTop: 10}}>\n            <DaemonNotRunningAlert />\n          </div>\n        ) : null}\n        {usingDefaultRunLauncher && !instance.runQueuingSupported ? (\n          <div style={{marginTop: 10}}>\n            <UsingDefaultLauncherAlert />\n          </div>\n        ) : null}\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"none\" onClick={onCancel}>\n          Cancel\n        </Button>\n        <LaunchBackfillButton\n          partitionNames={selected}\n          partitionSetName={partitionSet.name}\n          reexecutionSteps={\n            !options.fromFailure && solidsFiltered.all.length < solids.length\n              ? stepRows.map((step) => step.name)\n              : undefined\n          }\n          fromFailure={options.fromFailure}\n          tags={tags}\n          onSubmit={onSubmit}\n          onSuccess={onSuccess}\n          onError={onError}\n          repoAddress={repoAddress}\n        />\n      </DialogFooter>\n    </>\n  );\n};\n\nconst LaunchBackfillButton: React.FC<{\n  partitionSetName: string;\n  partitionNames: string[];\n  reexecutionSteps?: string[];\n  fromFailure?: boolean;\n  tags?: PipelineRunTag[];\n  onSuccess?: (backfillId: string) => void;\n  onError: (data: LaunchPartitionBackfill | null | undefined) => void;\n  onSubmit: () => void;\n  repoAddress: RepoAddress;\n}> = ({\n  partitionSetName,\n  partitionNames,\n  reexecutionSteps,\n  fromFailure,\n  tags,\n  onSuccess,\n  onError,\n  onSubmit,\n  repoAddress,\n}) => {\n  const repositorySelector = repoAddressToSelector(repoAddress);\n  const mounted = React.useRef(true);\n  const [launchBackfill, {loading}] = useMutation<\n    LaunchPartitionBackfill,\n    LaunchPartitionBackfillVariables\n  >(LAUNCH_PARTITION_BACKFILL_MUTATION);\n\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, [onSuccess]);\n\n  const onLaunch = async () => {\n    onSubmit();\n    const {data} = await launchBackfill({\n      variables: {\n        backfillParams: {\n          selector: {\n            partitionSetName,\n            repositorySelector,\n          },\n          partitionNames,\n          reexecutionSteps,\n          fromFailure,\n          tags,\n        },\n      },\n    });\n\n    if (!mounted.current) {\n      return;\n    }\n\n    if (data && data.launchPartitionBackfill.__typename === 'LaunchBackfillSuccess') {\n      onSuccess?.(data.launchPartitionBackfill.backfillId);\n    } else {\n      onError?.(data);\n    }\n  };\n\n  const count = partitionNames.length;\n  const reexecutionCount = reexecutionSteps?.length;\n\n  const title = () => {\n    if (loading) {\n      return `Submitting ${count} ${count === 1 ? 'run' : 'runs'}…`;\n    }\n\n    if (count) {\n      return `Submit ${count} ${count === 1 ? 'run' : 'runs'}`;\n    }\n\n    return 'Select partitions to submit';\n  };\n\n  const subtitle = () => {\n    return !loading && reexecutionCount\n      ? `(${reexecutionCount} selected ${reexecutionCount === 1 ? 'step' : 'steps'})`\n      : '';\n  };\n\n  const buttonTitle = [title(), subtitle()].join(' ');\n\n  return (\n    <LaunchButton\n      runCount={count}\n      config={{\n        title: buttonTitle,\n        icon: 'open_in_new',\n        disabled: !count || loading,\n        onClick: onLaunch,\n      }}\n    />\n  );\n};\n\nconst PARTITIONS_BACKFILL_SELECTOR_QUERY = gql`\n  query PartitionsBackfillSelectorQuery(\n    $partitionSetName: String!\n    $repositorySelector: RepositorySelector!\n    $pipelineSelector: PipelineSelector!\n  ) {\n    partitionSetOrError(\n      partitionSetName: $partitionSetName\n      repositorySelector: $repositorySelector\n    ) {\n      ... on PartitionSet {\n        id\n        name\n        partitionsOrError {\n          ... on Partitions {\n            results {\n              name\n            }\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ... on PartitionSetNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n    pipelineSnapshotOrError(activePipelineSelector: $pipelineSelector) {\n      ... on PipelineSnapshot {\n        id\n        name\n        solidHandles {\n          handleID\n          solid {\n            name\n            definition {\n              name\n            }\n            inputs {\n              dependsOn {\n                solid {\n                  name\n                }\n              }\n            }\n            outputs {\n              dependedBy {\n                solid {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n    instance {\n      runLauncher {\n        name\n      }\n      daemonHealth {\n        id\n        daemonStatus(daemonType: \"BACKFILL\") {\n          id\n          healthy\n        }\n      }\n      runQueuingSupported\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst PARTITION_STATUS_QUERY = gql`\n  query PartitionStatusQuery($partitionSetName: String!, $repositorySelector: RepositorySelector!) {\n    partitionSetOrError(\n      partitionSetName: $partitionSetName\n      repositorySelector: $repositorySelector\n    ) {\n      ... on PartitionSet {\n        id\n        name\n        partitionStatusesOrError {\n          ... on PartitionStatuses {\n            results {\n              id\n              partitionName\n              runStatus\n            }\n          }\n          ...PythonErrorFragment\n        }\n      }\n      ... on PartitionSetNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nfunction messageForLaunchBackfillError(data: LaunchPartitionBackfill | null | undefined) {\n  const result = data?.launchPartitionBackfill;\n\n  let errors = <></>;\n  if (result?.__typename === 'PythonError' || result?.__typename === 'PartitionSetNotFoundError') {\n    errors = <PythonErrorInfo error={result} />;\n  } else if (result?.__typename === 'InvalidStepError') {\n    errors = <div>{`Invalid step: ${result.invalidStepKey}`}</div>;\n  } else if (result?.__typename === 'InvalidOutputError') {\n    errors = <div>{`Invalid output: ${result.invalidOutputName} for ${result.stepKey}`}</div>;\n  } else if (result && 'errors' in result) {\n    errors = (\n      <>\n        {result['errors'].map((error, idx) => (\n          <PythonErrorInfo error={error} key={idx} />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <Group direction=\"column\" spacing={4}>\n      <div>An unexpected error occurred. This backfill was not launched.</div>\n      {errors ? (\n        <ButtonLink\n          color={Colors.White}\n          underline=\"always\"\n          onClick={() => {\n            showCustomAlert({\n              body: errors,\n            });\n          }}\n        >\n          View error\n        </ButtonLink>\n      ) : null}\n    </Group>\n  );\n}\n\nexport function showBackfillErrorToast(data: LaunchPartitionBackfill | null | undefined) {\n  SharedToaster.show({\n    message: messageForLaunchBackfillError(data),\n    icon: 'error',\n    intent: 'danger',\n  });\n}\n\nexport function showBackfillSuccessToast(history: History<unknown>, backfillId: string) {\n  SharedToaster.show({\n    intent: 'success',\n    message: (\n      <div>\n        Created backfill <Mono>{backfillId}</Mono>\n      </div>\n    ),\n    action: {\n      text: 'View',\n      onClick: () => history.push(`/instance/backfills`),\n    },\n  });\n}\n\nconst DaemonNotRunningAlert: React.FC = () => (\n  <Alert\n    intent=\"warning\"\n    title=\"The backfill daemon is not running.\"\n    description={\n      <div>\n        See the{' '}\n        <a\n          href=\"https://docs.dagster.io/deployment/dagster-daemon\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          dagster-daemon documentation\n        </a>{' '}\n        for more information on how to deploy the dagster-daemon process.\n      </div>\n    }\n  />\n);\n\nconst UsingDefaultLauncherAlert: React.FC = () => (\n  <Alert\n    intent=\"warning\"\n    title={\n      <div>\n        Using the default run launcher <code>{DEFAULT_RUN_LAUNCHER_NAME}</code> for launching\n        backfills without a queued run coordinator is not advised.\n      </div>\n    }\n    description={\n      <div>\n        Check your instance configuration in <code>dagster.yaml</code> to either configure the{' '}\n        <a\n          href=\"https://docs.dagster.io/deployment/run-coordinator\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          queued run coordinator\n        </a>{' '}\n        or to configure a run launcher more appropriate for launching a large number of jobs.\n      </div>\n    }\n  />\n);\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Icon} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {RunningBackfillsNoticeQuery} from './types/RunningBackfillsNoticeQuery';\n\nexport const RunningBackfillsNotice: React.FC<{partitionSetName: string}> = ({\n  partitionSetName,\n}) => {\n  const {data} = useQuery<RunningBackfillsNoticeQuery>(RUNNING_BACKFILLS_NOTICE_QUERY, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const runningBackfills =\n    data?.partitionBackfillsOrError.__typename === 'PartitionBackfills'\n      ? data.partitionBackfillsOrError.results\n      : [];\n\n  const runningBackfillCount = runningBackfills.filter(\n    (r) => r.partitionSetName === partitionSetName,\n  ).length;\n\n  if (runningBackfillCount === 0) {\n    return <span />;\n  }\n  return (\n    <div style={{color: Colors.Gray400, maxWidth: 350}}>\n      {runningBackfillCount === 1\n        ? 'Note: A backfill has been requested for this job and may be refreshing displayed assets. '\n        : `Note: ${runningBackfillCount} backfills have been requested for this job and may be refreshing displayed assets. `}\n      <Link to=\"/instance/backfills\" target=\"_blank\">\n        <Box flex={{gap: 4, display: 'inline-flex', alignItems: 'center'}}>\n          View <Icon name=\"open_in_new\" color={Colors.Link} />\n        </Box>\n      </Link>\n    </div>\n  );\n};\n\nconst RUNNING_BACKFILLS_NOTICE_QUERY = gql`\n  query RunningBackfillsNoticeQuery {\n    partitionBackfillsOrError(status: REQUESTED) {\n      __typename\n      ... on PartitionBackfills {\n        results {\n          partitionSetName\n          backfillId\n        }\n      }\n    }\n  }\n`;\n","import {gql, useApolloClient, useQuery} from '@apollo/client';\nimport {\n  Dialog,\n  DialogHeader,\n  DialogBody,\n  Box,\n  Subheading,\n  Button,\n  ButtonLink,\n  DialogFooter,\n  Alert,\n} from '@dagster-io/ui';\nimport reject from 'lodash/reject';\nimport React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {PartitionHealthSummary, usePartitionHealthData} from '../assets/PartitionHealthSummary';\nimport {AssetKey} from '../assets/types';\nimport {LAUNCH_PARTITION_BACKFILL_MUTATION} from '../instance/BackfillUtils';\nimport {\n  LaunchPartitionBackfill,\n  LaunchPartitionBackfillVariables,\n} from '../instance/types/LaunchPartitionBackfill';\nimport {CONFIG_PARTITION_SELECTION_QUERY} from '../launchpad/ConfigEditorConfigPicker';\nimport {useLaunchWithTelemetry} from '../launchpad/LaunchRootExecutionButton';\nimport {\n  ConfigPartitionSelectionQuery,\n  ConfigPartitionSelectionQueryVariables,\n} from '../launchpad/types/ConfigPartitionSelectionQuery';\nimport {\n  assembleIntoSpans,\n  PartitionRangeInput,\n  stringForSpan,\n} from '../partitions/PartitionRangeInput';\nimport {showBackfillErrorToast, showBackfillSuccessToast} from '../partitions/PartitionsBackfill';\nimport {RepoAddress} from '../workspace/types';\n\nimport {executionParamsForAssetJob} from './LaunchAssetExecutionButton';\nimport {RunningBackfillsNotice} from './RunningBackfillsNotice';\nimport {\n  AssetJobPartitionSetsQuery,\n  AssetJobPartitionSetsQueryVariables,\n} from './types/AssetJobPartitionSetsQuery';\n\ninterface Props {\n  open: boolean;\n  setOpen: (open: boolean) => void;\n  repoAddress: RepoAddress;\n  assetJobName: string;\n  assets: {assetKey: AssetKey; opNames: string[]; partitionDefinition: string | null}[];\n  upstreamAssetKeys: AssetKey[]; // single layer of upstream dependencies\n}\n\nexport const LaunchAssetChoosePartitionsDialog: React.FC<Props> = (props) => {\n  const title = `Launch runs to materialize ${\n    props.assets.length > 1\n      ? `${props.assets.length} assets`\n      : displayNameForAssetKey(props.assets[0].assetKey)\n  }`;\n\n  return (\n    <Dialog\n      style={{width: 700}}\n      isOpen={props.open}\n      canEscapeKeyClose\n      canOutsideClickClose\n      onClose={() => props.setOpen(false)}\n    >\n      <DialogHeader icon=\"layers\" label={title} />\n      <LaunchAssetChoosePartitionsDialogBody {...props} />\n    </Dialog>\n  );\n};\n\n// Note: This dialog loads a lot of data - the body is broken into a separate\n// component so we can be *sure* the hooks won't load data until it's opened.\n// (<Dialog> does not render it's children until open=true)\n//\n// Additionally, we want the dialog to reset when it's closed and re-opened so\n// that partition health, etc. is up-to-date.\n//\nconst LaunchAssetChoosePartitionsDialogBody: React.FC<Props> = ({\n  setOpen,\n  assets,\n  repoAddress,\n  assetJobName,\n  upstreamAssetKeys,\n}) => {\n  const data = usePartitionHealthData(assets.map((a) => a.assetKey));\n  const upstreamData = usePartitionHealthData(upstreamAssetKeys);\n\n  const allKeys = data[0] ? data[0].keys : [];\n  const mostRecentKey = allKeys[allKeys.length - 1];\n\n  const [selected, setSelected] = React.useState<string[]>([]);\n  const [previewCount, setPreviewCount] = React.useState(4);\n  const [launching, setLaunching] = React.useState(false);\n\n  const setMostRecent = () => setSelected([mostRecentKey]);\n  const setAll = () => setSelected([...allKeys]);\n  const setMissing = () =>\n    setSelected(allKeys.filter((key) => data.every((d) => !d.statusByPartition[key])));\n\n  React.useEffect(() => {\n    setSelected([mostRecentKey]);\n  }, [mostRecentKey]);\n\n  const client = useApolloClient();\n  const history = useHistory();\n  const launchWithTelemetry = useLaunchWithTelemetry();\n\n  // Find the partition set name. This seems like a bit of a hack, unclear\n  // how it would work if there were two different partition spaces in the asset job\n  const {data: partitionSetsData} = useQuery<\n    AssetJobPartitionSetsQuery,\n    AssetJobPartitionSetsQueryVariables\n  >(ASSET_JOB_PARTITION_SETS_QUERY, {\n    variables: {\n      repositoryLocationName: repoAddress.location,\n      repositoryName: repoAddress.name,\n      pipelineName: assetJobName,\n    },\n  });\n\n  const partitionSet =\n    partitionSetsData?.partitionSetsOrError.__typename === 'PartitionSets'\n      ? partitionSetsData.partitionSetsOrError.results[0]\n      : undefined;\n\n  const onLaunch = async () => {\n    setLaunching(true);\n\n    if (!partitionSet) {\n      const error =\n        partitionSetsData?.partitionSetsOrError.__typename === 'PythonError'\n          ? partitionSetsData.partitionSetsOrError\n          : {message: 'No details provided.'};\n\n      setLaunching(false);\n      showCustomAlert({\n        title: `Unable to find partition set on ${assetJobName}`,\n        body: <PythonErrorInfo error={error} />,\n      });\n      return;\n    }\n\n    if (selected.length === 1) {\n      const {data: tagAndConfigData} = await client.query<\n        ConfigPartitionSelectionQuery,\n        ConfigPartitionSelectionQueryVariables\n      >({\n        query: CONFIG_PARTITION_SELECTION_QUERY,\n        fetchPolicy: 'network-only',\n        variables: {\n          repositorySelector: {\n            repositoryLocationName: repoAddress.location,\n            repositoryName: repoAddress.name,\n          },\n          partitionSetName: partitionSet.name,\n          partitionName: selected[0],\n        },\n      });\n\n      if (\n        !tagAndConfigData ||\n        !tagAndConfigData.partitionSetOrError ||\n        tagAndConfigData.partitionSetOrError.__typename !== 'PartitionSet' ||\n        !tagAndConfigData.partitionSetOrError.partition\n      ) {\n        return;\n      }\n\n      const {partition} = tagAndConfigData.partitionSetOrError;\n\n      if (partition.tagsOrError.__typename === 'PythonError') {\n        setLaunching(false);\n        showCustomAlert({\n          title: 'Unable to load tags',\n          body: <PythonErrorInfo error={partition.tagsOrError} />,\n        });\n        return;\n      }\n      if (partition.runConfigOrError.__typename === 'PythonError') {\n        setLaunching(false);\n        showCustomAlert({\n          title: 'Unable to load tags',\n          body: <PythonErrorInfo error={partition.runConfigOrError} />,\n        });\n        return;\n      }\n\n      const tags = [...partition.tagsOrError.results];\n      const runConfigData = partition.runConfigOrError.yaml || '';\n\n      const result = await launchWithTelemetry(\n        {\n          executionParams: {\n            ...executionParamsForAssetJob(repoAddress, assetJobName, assets, tags),\n            runConfigData,\n            mode: partition.mode,\n          },\n        },\n        'toast',\n      );\n\n      setLaunching(false);\n      if (result?.launchPipelineExecution.__typename === 'LaunchRunSuccess') {\n        setOpen(false);\n      }\n    } else {\n      const {data: launchBackfillData} = await client.mutate<\n        LaunchPartitionBackfill,\n        LaunchPartitionBackfillVariables\n      >({\n        mutation: LAUNCH_PARTITION_BACKFILL_MUTATION,\n        variables: {\n          backfillParams: {\n            selector: {\n              partitionSetName: partitionSet.name,\n              repositorySelector: {\n                repositoryLocationName: repoAddress.location,\n                repositoryName: repoAddress.name,\n              },\n            },\n            partitionNames: selected,\n            reexecutionSteps: assets.map((a) => a.opNames).flat(),\n            fromFailure: false,\n            tags: [],\n          },\n        },\n      });\n\n      setLaunching(false);\n\n      if (launchBackfillData?.launchPartitionBackfill.__typename === 'LaunchBackfillSuccess') {\n        showBackfillSuccessToast(history, launchBackfillData?.launchPartitionBackfill.backfillId);\n        setOpen(false);\n      } else {\n        showBackfillErrorToast(launchBackfillData);\n      }\n    }\n  };\n\n  const upstreamUnavailable = (key: string) =>\n    upstreamData.length > 0 &&\n    upstreamData.some((a) => a.keys.includes(key) && !a.statusByPartition[key]);\n\n  const upstreamUnavailableSpans = assembleIntoSpans(selected, upstreamUnavailable).filter(\n    (s) => s.status === true,\n  );\n  const onRemoveUpstreamUnavailable = () => {\n    setSelected(reject(selected, upstreamUnavailable));\n  };\n\n  return (\n    <>\n      <DialogBody>\n        <Box flex={{direction: 'column', gap: 8}}>\n          <Subheading style={{flex: 1}}>Partition Keys</Subheading>\n          <Box flex={{direction: 'row', gap: 8, alignItems: 'baseline'}}>\n            <Box flex={{direction: 'column'}} style={{flex: 1}}>\n              <PartitionRangeInput\n                value={selected}\n                onChange={setSelected}\n                partitionNames={allKeys}\n              />\n            </Box>\n            <Button small onClick={setMostRecent}>\n              Most Recent\n            </Button>\n            <Button small onClick={setMissing}>\n              Missing\n            </Button>\n            <Button small onClick={setAll}>\n              All\n            </Button>\n          </Box>\n        </Box>\n        <Box\n          flex={{direction: 'column', gap: 8}}\n          style={{marginTop: 16, overflowY: 'auto', overflowX: 'visible', maxHeight: '50vh'}}\n        >\n          {assets.slice(0, previewCount).map((a) => (\n            <PartitionHealthSummary\n              assetKey={a.assetKey}\n              showAssetKey\n              key={displayNameForAssetKey(a.assetKey)}\n              data={data}\n              selected={selected}\n            />\n          ))}\n          {previewCount < assets.length ? (\n            <Box margin={{vertical: 8}}>\n              <ButtonLink onClick={() => setPreviewCount(assets.length)}>\n                Show {assets.length - previewCount} more previews\n              </ButtonLink>\n            </Box>\n          ) : undefined}\n        </Box>\n        {upstreamUnavailableSpans.length > 0 && (\n          <Box margin={{top: 16}}>\n            <Alert\n              intent=\"warning\"\n              title=\"Upstream Data Missing\"\n              description={\n                <>\n                  {upstreamUnavailableSpans.map((span) => stringForSpan(span, selected)).join(', ')}\n                  {\n                    ' cannot be materialized because upstream materializations are missing. Consider materializing upstream assets or '\n                  }\n                  <a onClick={onRemoveUpstreamUnavailable}>remove these partitions</a>\n                  {` to avoid failures.`}\n                </>\n              }\n            />\n          </Box>\n        )}\n      </DialogBody>\n      <DialogFooter\n        left={partitionSet && <RunningBackfillsNotice partitionSetName={partitionSet.name} />}\n      >\n        <Button intent=\"none\" onClick={() => setOpen(false)}>\n          Cancel\n        </Button>\n        <Button intent=\"primary\" onClick={onLaunch}>\n          {launching\n            ? 'Launching...'\n            : selected.length !== 1\n            ? `Launch ${selected.length}-Run Backfill`\n            : `Launch 1 Run`}\n        </Button>\n      </DialogFooter>\n    </>\n  );\n};\n\nconst ASSET_JOB_PARTITION_SETS_QUERY = gql`\n  query AssetJobPartitionSetsQuery(\n    $pipelineName: String!\n    $repositoryName: String!\n    $repositoryLocationName: String!\n  ) {\n    partitionSetsOrError(\n      pipelineName: $pipelineName\n      repositorySelector: {\n        repositoryName: $repositoryName\n        repositoryLocationName: $repositoryLocationName\n      }\n    ) {\n      __typename\n      ...PythonErrorFragment\n      ... on PartitionSets {\n        __typename\n        results {\n          id\n          name\n          mode\n          solidSelection\n        }\n      }\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, useApolloClient} from '@apollo/client';\nimport {Button, Icon, Spinner, Tooltip} from '@dagster-io/ui';\nimport pick from 'lodash/pick';\nimport uniq from 'lodash/uniq';\nimport React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {IExecutionSession} from '../app/ExecutionSessionStorage';\nimport {usePermissions} from '../app/Permissions';\nimport {isSourceAsset, LiveData, toGraphId} from '../asset-graph/Utils';\nimport {useLaunchWithTelemetry} from '../launchpad/LaunchRootExecutionButton';\nimport {AssetLaunchpad} from '../launchpad/LaunchpadRoot';\nimport {DagsterTag} from '../runs/RunTag';\nimport {LaunchPipelineExecutionVariables} from '../runs/types/LaunchPipelineExecution';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\n\nimport {ASSET_NODE_CONFIG_FRAGMENT, configSchemaForAssetNode} from './AssetConfig';\nimport {LaunchAssetChoosePartitionsDialog} from './LaunchAssetChoosePartitionsDialog';\nimport {AssetKey} from './types';\nimport {LaunchAssetExecutionAssetNodeFragment} from './types/LaunchAssetExecutionAssetNodeFragment';\nimport {\n  LaunchAssetLoaderQuery,\n  LaunchAssetLoaderQueryVariables,\n} from './types/LaunchAssetLoaderQuery';\n\ntype LaunchAssetsState =\n  | {type: 'none'}\n  | {type: 'loading'}\n  | {type: 'error'; error: string}\n  | {\n      type: 'launchpad';\n      jobName: string;\n      sessionPresets: Partial<IExecutionSession>;\n      repoAddress: RepoAddress;\n    }\n  | {\n      type: 'partitions';\n      jobName: string;\n      assets: LaunchAssetExecutionAssetNodeFragment[];\n      upstreamAssetKeys: AssetKey[];\n      repoAddress: RepoAddress;\n    }\n  | {\n      type: 'single-run';\n      executionParams: LaunchPipelineExecutionVariables['executionParams'];\n    };\n\nexport const LaunchAssetExecutionButton: React.FC<{\n  assetKeys: AssetKey[]; // Memoization not required\n  liveDataByNode: LiveData;\n  context?: 'all' | 'selected';\n  intent?: 'primary' | 'none';\n  preferredJobName?: string;\n}> = ({assetKeys, liveDataByNode, preferredJobName, context, intent = 'primary'}) => {\n  const {canLaunchPipelineExecution} = usePermissions();\n  const launchWithTelemetry = useLaunchWithTelemetry();\n\n  const [state, setState] = React.useState<LaunchAssetsState>({type: 'none'});\n  const client = useApolloClient();\n\n  const count = assetKeys.length > 1 ? ` (${assetKeys.length})` : '';\n  const isRematerializeForAll = (assetKeys.length\n    ? assetKeys.map((n) => liveDataByNode[toGraphId(n)])\n    : Object.values(liveDataByNode)\n  ).every((e) => !!e?.lastMaterialization);\n\n  const label = `${isRematerializeForAll ? 'Rematerialize' : 'Materialize'}${\n    context === 'all' ? ` all${count}` : context === 'selected' ? ` selected${count}` : count\n  }`;\n\n  if (!assetKeys.length || !canLaunchPipelineExecution) {\n    return (\n      <Tooltip\n        content={\n          !canLaunchPipelineExecution\n            ? 'You do not have permission to materialize assets'\n            : 'Select one or more assets to materialize.'\n        }\n      >\n        <Button intent={intent} icon={<Icon name=\"materialization\" />} disabled>\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  const onClick = async (e: React.MouseEvent<any>) => {\n    if (state.type === 'loading') {\n      return;\n    }\n    setState({type: 'loading'});\n\n    const result = await client.query<LaunchAssetLoaderQuery, LaunchAssetLoaderQueryVariables>({\n      query: LAUNCH_ASSET_LOADER_QUERY,\n      variables: {assetKeys: assetKeys.map(({path}) => ({path}))},\n    });\n    const assets = result.data.assetNodes;\n    const forceLaunchpad = e.shiftKey;\n    const next = stateForLaunchingAssets(assets, forceLaunchpad, preferredJobName);\n\n    if (next.type === 'error') {\n      showCustomAlert({\n        title: 'Unable to Materialize',\n        body: next.error,\n      });\n      setState({type: 'none'});\n    } else if (next.type === 'single-run') {\n      await launchWithTelemetry({executionParams: next.executionParams}, 'toast');\n      setState({type: 'none'});\n    } else {\n      setState(next);\n    }\n  };\n\n  return (\n    <>\n      <Tooltip content=\"Shift+click to add configuration\">\n        <Button\n          intent={intent}\n          onClick={onClick}\n          icon={\n            state.type === 'loading' ? (\n              <Spinner purpose=\"body-text\" />\n            ) : (\n              <Icon name=\"materialization\" />\n            )\n          }\n        >\n          {label}\n        </Button>\n      </Tooltip>\n      {state.type === 'launchpad' && (\n        <AssetLaunchpad\n          assetJobName={state.jobName}\n          repoAddress={state.repoAddress}\n          sessionPresets={state.sessionPresets}\n          open={true}\n          setOpen={() => setState({type: 'none'})}\n        />\n      )}\n      {state.type === 'partitions' && (\n        <LaunchAssetChoosePartitionsDialog\n          assets={state.assets}\n          upstreamAssetKeys={state.upstreamAssetKeys}\n          repoAddress={state.repoAddress}\n          assetJobName={state.jobName}\n          open={true}\n          setOpen={() => setState({type: 'none'})}\n        />\n      )}\n    </>\n  );\n};\n\nfunction stateForLaunchingAssets(\n  assets: LaunchAssetExecutionAssetNodeFragment[],\n  forceLaunchpad: boolean,\n  preferredJobName?: string,\n): LaunchAssetsState {\n  if (assets.some(isSourceAsset)) {\n    return {\n      type: 'error',\n      error: 'One or more source assets are selected and cannot be materialized.',\n    };\n  }\n\n  const repoAddress = buildRepoAddress(\n    assets[0]?.repository.name || '',\n    assets[0]?.repository.location.name || '',\n  );\n  if (\n    !assets.every(\n      (a) =>\n        a.repository.name === repoAddress.name &&\n        a.repository.location.name === repoAddress.location,\n    )\n  ) {\n    return {\n      type: 'error',\n      error: 'Assets must be in the same repository to be materialized together.',\n    };\n  }\n\n  const partitionDefinition = assets.find((a) => !!a.partitionDefinition)?.partitionDefinition;\n  if (assets.some((a) => a.partitionDefinition && a.partitionDefinition !== partitionDefinition)) {\n    return {\n      type: 'error',\n      error: 'Assets must share a partition definition to be materialized together.',\n    };\n  }\n\n  const everyAssetHasJob = (jobName: string) => assets.every((a) => a.jobNames.includes(jobName));\n  const jobsInCommon = assets[0] ? assets[0].jobNames.filter(everyAssetHasJob) : [];\n  const jobName = jobsInCommon.find((name) => name === preferredJobName) || jobsInCommon[0];\n  if (!jobName) {\n    return {\n      type: 'error',\n      error: 'Assets must be in the same job to be materialized together.',\n    };\n  }\n\n  const anyAssetsHaveConfig = assets.some((a) => configSchemaForAssetNode(a));\n  if (anyAssetsHaveConfig && partitionDefinition) {\n    return {\n      type: 'error',\n      error: 'Cannot materialize assets using both asset config and partitions.',\n    };\n  }\n\n  // Ok! Assertions met, how do we launch this run\n\n  if (anyAssetsHaveConfig || forceLaunchpad) {\n    const assetOpNames = assets.flatMap((a) => a.opNames || []);\n    return {\n      type: 'launchpad',\n      jobName,\n      repoAddress,\n      sessionPresets: {\n        solidSelection: assetOpNames,\n        solidSelectionQuery: assetOpNames.map((name) => `\"${name}\"`).join(' '),\n      },\n    };\n  }\n  if (partitionDefinition) {\n    const assetKeys = new Set(assets.map((a) => JSON.stringify(a.assetKey)));\n    const upstreamAssetKeys = uniq(\n      assets.flatMap((a) => a.dependencyKeys.map(({path}) => JSON.stringify({path}))),\n    )\n      .filter((key) => !assetKeys.has(key))\n      .map((key) => JSON.parse(key));\n\n    return {\n      type: 'partitions',\n      assets,\n      jobName,\n      repoAddress,\n      upstreamAssetKeys,\n    };\n  }\n  return {\n    type: 'single-run',\n    executionParams: executionParamsForAssetJob(repoAddress, jobName, assets, []),\n  };\n}\n\nexport function executionParamsForAssetJob(\n  repoAddress: RepoAddress,\n  jobName: string,\n  assets: {assetKey: AssetKey; opNames: string[]}[],\n  tags: {key: string; value: string}[],\n): LaunchPipelineExecutionVariables['executionParams'] {\n  return {\n    mode: 'default',\n    executionMetadata: {\n      tags: [\n        ...tags.map((t) => pick(t, ['key', 'value'])),\n        {\n          key: DagsterTag.StepSelection,\n          value: assets.flatMap((o) => o.opNames).join(','),\n        },\n      ],\n    },\n    runConfigData: {},\n    selector: {\n      repositoryLocationName: repoAddress.location,\n      repositoryName: repoAddress.name,\n      pipelineName: jobName,\n      assetSelection: assets.map((asset) => ({\n        path: asset.assetKey.path,\n      })),\n    },\n  };\n}\n\nexport const LAUNCH_ASSET_EXECUTION_ASSET_NODE_FRAGMENT = gql`\n  fragment LaunchAssetExecutionAssetNodeFragment on AssetNode {\n    id\n    opNames\n    jobNames\n    graphName\n    partitionDefinition\n    assetKey {\n      path\n    }\n    dependencyKeys {\n      path\n    }\n    repository {\n      id\n      name\n      location {\n        id\n        name\n      }\n    }\n    ...AssetNodeConfigFragment\n  }\n  ${ASSET_NODE_CONFIG_FRAGMENT}\n`;\n\nconst LAUNCH_ASSET_LOADER_QUERY = gql`\n  query LaunchAssetLoaderQuery($assetKeys: [AssetKeyInput!]!) {\n    assetNodes(assetKeys: $assetKeys) {\n      id\n      ...LaunchAssetExecutionAssetNodeFragment\n    }\n  }\n  ${LAUNCH_ASSET_EXECUTION_ASSET_NODE_FRAGMENT}\n`;\n","import {gql, useApolloClient} from '@apollo/client';\nimport {Tooltip, Spinner, Box, Colors} from '@dagster-io/ui';\nimport fromPairs from 'lodash/fromPairs';\nimport React from 'react';\n\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assembleIntoSpans} from '../partitions/PartitionRangeInput';\n\nimport {AssetKey} from './types';\nimport {PartitionHealthQuery, PartitionHealthQueryVariables} from './types/PartitionHealthQuery';\n\ninterface PartitionHealthData {\n  assetKey: AssetKey;\n  keys: string[];\n  spans: {startIdx: number; endIdx: number; status: boolean}[];\n  statusByPartition: {[partitionName: string]: boolean};\n  indexToPct: (idx: number) => string;\n}\n\nexport function usePartitionHealthData(assetKeys: AssetKey[]) {\n  const [result, setResult] = React.useState<PartitionHealthData[]>([]);\n  const client = useApolloClient();\n\n  const assetKeyJSONs = assetKeys.map((k) => JSON.stringify(k));\n  const missingKeyJSON = assetKeyJSONs.find(\n    (k) => !result.some((r) => JSON.stringify(r.assetKey) === k),\n  );\n\n  React.useMemo(() => {\n    if (!missingKeyJSON) {\n      return;\n    }\n    const loadKey: AssetKey = JSON.parse(missingKeyJSON);\n    const load = async () => {\n      const {data} = await client.query<PartitionHealthQuery, PartitionHealthQueryVariables>({\n        query: PARTITION_HEALTH_QUERY,\n        fetchPolicy: 'network-only',\n        variables: {\n          assetKey: {path: loadKey.path},\n        },\n      });\n      const latest =\n        (data &&\n          data.assetNodeOrError.__typename === 'AssetNode' &&\n          data.assetNodeOrError.materializationCountByPartition) ||\n        [];\n\n      const keys =\n        data && data.assetNodeOrError.__typename === 'AssetNode'\n          ? data.assetNodeOrError.materializationCountByPartition.map(({partition}) => partition)\n          : [];\n\n      const statusByPartition = fromPairs(\n        latest.map((l) => [l.partition, !!l.materializationCount]),\n      );\n      const spans = assembleIntoSpans(keys, (key) => statusByPartition[key]);\n\n      setResult((result) => [\n        ...result,\n        {\n          keys,\n          spans,\n          assetKey: loadKey,\n          statusByPartition,\n          indexToPct: (idx: number) => `${((idx * 100) / keys.length).toFixed(3)}%`,\n        },\n      ]);\n    };\n    load();\n  }, [client, missingKeyJSON]);\n\n  return result.filter((r) => assetKeyJSONs.includes(JSON.stringify(r.assetKey)));\n}\n\nexport const PartitionHealthSummary: React.FC<{\n  assetKey: AssetKey;\n  selected?: string[];\n  showAssetKey?: boolean;\n  data: PartitionHealthData[];\n}> = ({showAssetKey, assetKey, selected, data}) => {\n  const assetData = data.find((d) => JSON.stringify(d.assetKey) === JSON.stringify(assetKey));\n\n  if (!assetData) {\n    return (\n      <div style={{minHeight: 55, position: 'relative'}}>\n        <Spinner purpose=\"section\" />\n      </div>\n    );\n  }\n\n  const {spans, keys, indexToPct} = assetData;\n  const highestIndex = spans.map((s) => s.endIdx).reduce((prev, cur) => Math.max(prev, cur), 0);\n\n  const selectedSpans = selected\n    ? assembleIntoSpans(keys, (key) => selected.includes(key)).filter((s) => s.status)\n    : [];\n\n  const populated = spans\n    .filter((s) => s.status === true)\n    .map((s) => s.endIdx - s.startIdx + 1)\n    .reduce((a, b) => a + b, 0);\n\n  return (\n    <div>\n      <Box\n        flex={{justifyContent: 'space-between'}}\n        margin={{bottom: 4}}\n        style={{fontSize: '0.8rem', color: Colors.Gray500}}\n      >\n        <span>\n          {showAssetKey\n            ? displayNameForAssetKey(assetKey)\n            : `${populated}/${keys.length} Partitions`}\n        </span>\n        {showAssetKey ? <span>{`${populated}/${keys.length}`}</span> : undefined}\n      </Box>\n      {selected && (\n        <div style={{position: 'relative', width: '100%', overflowX: 'hidden', height: 10}}>\n          {selectedSpans.map((s) => (\n            <div\n              key={s.startIdx}\n              style={{\n                left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n                width: indexToPct(s.endIdx - s.startIdx + 1),\n                position: 'absolute',\n                top: 0,\n                height: 8,\n                border: `2px solid ${Colors.Blue500}`,\n                borderBottom: 0,\n              }}\n            />\n          ))}\n        </div>\n      )}\n      <div\n        style={{\n          position: 'relative',\n          width: '100%',\n          height: 14,\n          borderRadius: 6,\n          overflow: 'hidden',\n        }}\n      >\n        {spans.map((s) => (\n          <div\n            key={s.startIdx}\n            style={{\n              left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n              width: indexToPct(s.endIdx - s.startIdx + 1),\n              minWidth: s.status ? 2 : undefined,\n              position: 'absolute',\n              zIndex: s.startIdx === 0 || s.endIdx === highestIndex ? 3 : s.status ? 2 : 1, //End-caps, then statuses, then missing\n              top: 0,\n            }}\n          >\n            <Tooltip\n              display=\"block\"\n              content={\n                s.startIdx === s.endIdx\n                  ? `Partition ${keys[s.startIdx]} is ${s.status ? 'up-to-date' : 'missing'}`\n                  : `Partitions ${keys[s.startIdx]} through ${keys[s.endIdx]} are ${\n                      s.status ? 'up-to-date' : 'missing'\n                    }`\n              }\n            >\n              <div\n                style={{\n                  width: '100%',\n                  height: 14,\n                  outline: 'none',\n                  background: s.status ? Colors.Green500 : Colors.Gray200,\n                }}\n              />\n            </Tooltip>\n          </div>\n        ))}\n      </div>\n      <Box\n        flex={{justifyContent: 'space-between'}}\n        margin={{top: 4}}\n        style={{fontSize: '0.8rem', color: Colors.Gray500}}\n      >\n        <span>{keys[0]}</span>\n        <span>{keys[keys.length - 1]}</span>\n      </Box>\n    </div>\n  );\n};\n\nconst PARTITION_HEALTH_QUERY = gql`\n  query PartitionHealthQuery($assetKey: AssetKeyInput!) {\n    assetNodeOrError(assetKey: $assetKey) {\n      ... on AssetNode {\n        id\n        materializationCountByPartition {\n          partition\n          materializationCount\n        }\n      }\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors, FontFamily, Tag} from '@dagster-io/ui';\nimport {Spacing} from '@dagster-io/ui/src/components/types';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {gqlTypePredicate} from '../app/Util';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {TableSchema} from '../metadata/TableSchema';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntryFragment';\nimport {Description} from '../pipelines/Description';\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\n\nimport {DagsterTypeFragment} from './types/DagsterTypeFragment';\n\nexport const dagsterTypeKind = (type: {metadataEntries: MetadataEntryFragment[]}) => {\n  const tableSchema = type.metadataEntries.find(gqlTypePredicate('TableSchemaMetadataEntry'));\n  if (tableSchema) {\n    return 'table';\n  } else {\n    return 'standard';\n  }\n};\n\nexport const DagsterTypeKindTag: React.FC<{type: DagsterTypeFragment}> = (kind) => {\n  return <Tag intent=\"primary\">{kind}</Tag>;\n};\n\nconst _DagsterTypeName: React.FC<{type: DagsterTypeFragment; className?: string}> = ({\n  type,\n  className,\n}) => {\n  const typeKind = dagsterTypeKind(type);\n  const displayName = typeKind === 'standard' ? type.name : `${type.name} (${typeKind})`;\n  return <Box className={className}>{displayName}</Box>;\n};\n\nexport const DagsterTypeName = styled(_DagsterTypeName)`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const DagsterTypeSummary: React.FC<{\n  type: DagsterTypeFragment;\n  horizontalPadding?: Spacing;\n}> = ({type, horizontalPadding}) => {\n  horizontalPadding = horizontalPadding || 0;\n  const tableSchemaEntry = type.metadataEntries.find(gqlTypePredicate('TableSchemaMetadataEntry'));\n  return (\n    <Box\n      flex={{direction: 'column', gap: 8}}\n      padding={{horizontal: 24, vertical: 16}}\n      style={{overflowY: 'auto'}}\n    >\n      {type.name && (\n        <Box>\n          <DagsterTypeName type={type} />\n        </Box>\n      )}\n      {type.description && (\n        <Box padding={{horizontal: horizontalPadding}}>\n          <Description description={type.description} />\n        </Box>\n      )}\n      {tableSchemaEntry && (\n        <Box\n          border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n          style={{overflowY: 'auto', marginBottom: -12}}\n          margin={{top: 4}}\n        >\n          <TableSchema schema={tableSchemaEntry.schema} itemHorizontalPadding={horizontalPadding} />\n        </Box>\n      )}\n    </Box>\n  );\n};\n\n// NOTE: Because you can't have a recursive fragment, inner types are limited.\nexport const DAGSTER_TYPE_FRAGMENT = gql`\n  fragment DagsterTypeFragment on DagsterType {\n    ..._DagsterTypeFragment\n    innerTypes {\n      ..._DagsterTypeFragment\n    }\n  }\n  fragment _DagsterTypeFragment on DagsterType {\n    key\n    name\n    displayName\n    description\n    isNullable\n    isList\n    isBuiltin\n    isNothing\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    inputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n    outputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n  }\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepState} from '../runs/RunMetadataProvider';\n\nexport type IGanttNode = GraphQueryItem;\n\nexport interface GanttViewport {\n  left: number; // Note: pixel values\n  top: number;\n  width: number;\n  height: number;\n}\n\nexport interface GanttChartPlacement {\n  key: string; // A React-friendly unique key like `step:retry-1`\n  width: number;\n  x: number; // Note: This is a pixel value\n  y: number; // Note: This is a \"row number\" not a pixel value\n}\n\nexport interface GanttChartBox extends GanttChartPlacement {\n  state: IStepState | undefined;\n  children: GanttChartBox[];\n  node: IGanttNode;\n  root: boolean;\n}\n\nexport interface GanttChartMarker extends GanttChartPlacement {}\n\nexport interface GanttChartLayout {\n  boxes: GanttChartBox[];\n\n  // only present in timescaled layout\n  markers: GanttChartMarker[];\n}\n\nexport interface GanttChartLayoutOptions {\n  mode: GanttChartMode;\n  zoom: number; // 1 => 100\n  hideWaiting: boolean;\n  hideTimedMode: boolean;\n  hideUnselectedSteps: boolean;\n}\n\nexport enum GanttChartMode {\n  FLAT = 'flat',\n  WATERFALL = 'waterfall',\n  WATERFALL_TIMED = 'waterfall-timed',\n}\n\nexport const MIN_SCALE = 0.0002;\nexport const MAX_SCALE = 0.5;\nexport const LEFT_INSET = 16;\nexport const TOP_INSET = 16;\nexport const BOTTOM_INSET = 16;\nexport const FLAT_INSET_FROM_PARENT = 16;\nexport const BOX_HEIGHT = 34;\nexport const BOX_MARGIN_Y = 5;\nexport const BOX_SPACING_X = 20;\nexport const BOX_WIDTH = 100;\nexport const BOX_DOT_WIDTH_CUTOFF = 8;\nexport const BOX_SHOW_LABEL_WIDTH_CUTOFF = 30;\nexport const BOX_DOT_SIZE = 6;\nexport const BOX_DOT_MARGIN_Y = (BOX_HEIGHT - BOX_DOT_SIZE) / 2;\n\nexport const LINE_SIZE = 2;\nexport const CSS_DURATION = 100;\n\nexport const DEFAULT_OPTIONS: GanttChartLayoutOptions = {\n  mode: GanttChartMode.WATERFALL,\n  hideWaiting: false,\n  hideTimedMode: false,\n  zoom: 1,\n  hideUnselectedSteps: false,\n};\n","/**\n * Ops with dynamic outputs yield execution plans like step_a => step_b[?] => step_c[?],\n * where the index syntax indicates that step_b and step_c may be invoked an arbitrary number\n * of times. At runtime, Dagit replaces and duplicates these \"planned dynamic steps\" as it\n * observes invocations in the logs.\n *\n * Dagit currently parses step keys to implement this behavior and assumes that:\n *  - [?] Indicates a planned dynamic step\n *  - [ and ] are only used in dynamic steps\n *  - Index values are arbitrary (eg: step[1] or step[A] or step[US-East-1])\n *  - Index values are propagated through the entire subgraph after a dynamic invocation\n */\nexport function isDynamicStep(stepKey: string) {\n  return stepKey.endsWith(']');\n}\n\nexport function isPlannedDynamicStep(stepKey: string) {\n  return stepKey.endsWith('[?]');\n}\n\nexport function invocationsOfPlannedDynamicStep(plannedStepKey: string, runtimeStepKeys: string[]) {\n  return runtimeStepKeys.filter((k) => k.startsWith(plannedStepKey.replace('?]', '')));\n}\n\nexport function dynamicKeyWithoutIndex(stepKey: string) {\n  return stepKey.split('[')[0];\n}\n\nexport function replacePlannedIndex(stepKey: string, stepKeyWithIndex: string) {\n  return stepKey.replace('[?]', stepKeyWithIndex.match(/(\\[.*\\])/)![1]);\n}\n","import {\n  Box,\n  Checkbox,\n  Colors,\n  FontFamily,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  SpinnerWrapper,\n  SplitPanelContainer,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {withMiddleTruncation} from '../app/Util';\nimport {WebSocketContext} from '../app/WebSocketProvider';\nimport {CancelRunButton} from '../runs/RunActionButtons';\nimport {\n  EMPTY_RUN_METADATA,\n  IRunMetadataDict,\n  IStepMetadata,\n  IStepState,\n} from '../runs/RunMetadataProvider';\nimport {runsPathWithFilters} from '../runs/RunsFilterInput';\nimport {StepSelection} from '../runs/StepSelection';\nimport {RunFragment} from '../runs/types/RunFragment';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\n\nimport {\n  BOTTOM_INSET,\n  BOX_DOT_MARGIN_Y,\n  BOX_DOT_SIZE,\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_HEIGHT,\n  BOX_MARGIN_Y,\n  BOX_SHOW_LABEL_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  CSS_DURATION,\n  DEFAULT_OPTIONS,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMode,\n  GanttChartPlacement,\n  GanttViewport,\n  LINE_SIZE,\n  MAX_SCALE,\n  MIN_SCALE,\n  TOP_INSET,\n} from './Constants';\nimport {isDynamicStep} from './DynamicStepSupport';\nimport {\n  adjustLayoutWithRunMetadata,\n  boxStyleFor,\n  buildLayout,\n  BuildLayoutParams,\n  interestingQueriesFor,\n} from './GanttChartLayout';\nimport {GanttChartModeControl} from './GanttChartModeControl';\nimport {GanttChartTimescale} from './GanttChartTimescale';\nimport {GanttStatusPanel} from './GanttStatusPanel';\nimport {OptionsContainer, OptionsSpacer} from './VizComponents';\nimport {ZoomSlider} from './ZoomSlider';\nimport {useGanttChartMode} from './useGanttChartMode';\nimport {useViewport} from './useViewport';\n\nexport {GanttChartMode} from './Constants';\n\nconst HIGHLIGHT_TIME_EVENT = 'gantt-highlight-time';\n\nlet highlightTimer: NodeJS.Timeout;\n\n/**\n * Set or clear the highlighted time on the Gantt chart. Goal of this convenience\n * method is to make the implementation (via event dispatch) private to this file.\n */\nexport function setHighlightedGanttChartTime(timestamp: null | string, debounced = true) {\n  clearTimeout(highlightTimer);\n\n  if (debounced) {\n    highlightTimer = setTimeout(() => setHighlightedGanttChartTime(timestamp, false), 100);\n  } else {\n    document.dispatchEvent(new CustomEvent(HIGHLIGHT_TIME_EVENT, {detail: timestamp}));\n  }\n}\n\ninterface GanttChartProps {\n  selection: StepSelection;\n  focusedTime: number | null;\n  runId: string;\n  graph: GraphQueryItem[];\n  options?: Partial<GanttChartLayoutOptions>;\n  metadata?: IRunMetadataDict;\n  toolbarActions?: React.ReactChild;\n\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n  onSetSelection: (query: string) => void;\n\n  // for storybooks\n  overrideNowTime?: number;\n}\n\ninterface GanttChartState {\n  options: GanttChartLayoutOptions;\n}\n\nexport const GanttChart: React.FC<GanttChartProps> = (props) => {\n  const {graph, onSetSelection, options, selection, toolbarActions} = props;\n  const [mode, setMode] = useGanttChartMode();\n  const [state, setState] = React.useState(() => ({\n    ...DEFAULT_OPTIONS,\n    ...options,\n    mode,\n  }));\n\n  const cachedLayout = React.useRef<GanttChartLayout | null>(null);\n  const cachedLayoutParams = React.useRef<BuildLayoutParams | null>(null);\n  const graphFiltered = filterByQuery(graph, selection.query);\n  const layoutParams = React.useMemo(\n    () => ({\n      nodes: state.hideUnselectedSteps ? graphFiltered.all : graph,\n      mode: state.mode,\n    }),\n    [graph, graphFiltered.all, state.hideUnselectedSteps, state.mode],\n  );\n\n  const layout = React.useMemo(() => {\n    const names = (ns: GraphQueryItem[]) => ns.map((n) => n.name).join(',');\n    if (\n      !cachedLayoutParams.current ||\n      names(cachedLayoutParams.current.nodes) !== names(layoutParams.nodes) ||\n      cachedLayoutParams.current.mode !== layoutParams.mode\n    ) {\n      cachedLayout.current = buildLayout(layoutParams);\n      cachedLayoutParams.current = layoutParams;\n    }\n    return cachedLayout.current!;\n  }, [layoutParams]);\n\n  const updateOptions = React.useCallback((changes: Partial<GanttChartLayoutOptions>) => {\n    setState((current) => ({...current, ...changes}));\n  }, []);\n\n  const onChangeMode = React.useCallback(\n    (mode: GanttChartMode) => {\n      updateOptions({mode});\n      setMode(mode);\n    },\n    [setMode, updateOptions],\n  );\n\n  const onUpdateQuery = React.useCallback(\n    (query: string) => {\n      onSetSelection(query || '*');\n    },\n    [onSetSelection],\n  );\n\n  const onDoubleClickStep = React.useCallback(\n    (stepKey: string) => {\n      const query = `*${stepKey}*`;\n      onUpdateQuery(selection.query !== query ? query : '*');\n    },\n    [onUpdateQuery, selection.query],\n  );\n\n  return (\n    <GanttChartContainer>\n      <OptionsContainer>\n        <GanttChartModeControl\n          value={state.mode}\n          onChange={onChangeMode}\n          hideTimedMode={state.hideTimedMode}\n        />\n        {state.mode === GanttChartMode.WATERFALL_TIMED && (\n          <>\n            <OptionsSpacer />\n            <div style={{width: 200}}>\n              <ZoomSlider value={state.zoom} onChange={(v) => updateOptions({zoom: v})} />\n            </div>\n            <OptionsSpacer />\n            <Checkbox\n              style={{marginBottom: 0}}\n              label=\"Hide not started steps\"\n              checked={state.hideWaiting}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                updateOptions({hideWaiting: e.target.checked})\n              }\n            />\n          </>\n        )}\n        <div style={{flex: 1}} />\n        {toolbarActions}\n      </OptionsContainer>\n      <GanttChartInner\n        {...props}\n        options={{...state}}\n        layout={layout}\n        graph={graph}\n        onUpdateQuery={onUpdateQuery}\n        onDoubleClickStep={onDoubleClickStep}\n        onChange={() =>\n          updateOptions({\n            hideUnselectedSteps: !state.hideUnselectedSteps,\n          })\n        }\n      />\n    </GanttChartContainer>\n  );\n};\n\ntype GanttChartInnerProps = GanttChartProps &\n  GanttChartState & {\n    graph: GraphQueryItem[];\n    layout: GanttChartLayout;\n    onUpdateQuery: (value: string) => void;\n    onDoubleClickStep: (stepName: string) => void;\n    onChange: () => void;\n  };\n\nconst GanttChartInner = (props: GanttChartInnerProps) => {\n  const {viewport, containerProps, onMoveToViewport} = useViewport();\n  const [hoveredStep, setHoveredNodeName] = React.useState<string | null>(null);\n  const [hoveredTime, setHoveredTime] = React.useState<number | null>(null);\n  const [nowMs, setNowMs] = React.useState<number>(() => props.overrideNowTime || Date.now());\n  const {options, metadata, selection} = props;\n\n  const {rootServerURI} = React.useContext(AppContext);\n\n  const {availability, disabled, status} = React.useContext(WebSocketContext);\n  const lostWebsocket = !disabled && availability === 'available' && status === WebSocket.CLOSED;\n\n  // The slider in the UI updates `options.zoom` from 1-100. We convert that value\n  // into a px-per-ms \"scale\", where the minimum is the value required to zoom-to-fit.\n  // To make the slider feel more linear, we convert the input from log10 to logE.\n  let minScale = MIN_SCALE;\n  if (viewport.width && metadata && metadata.startedPipelineAt) {\n    const zoomToFitWidthPx = Math.max(1, viewport.width - 150);\n    const elapsedMs = Math.max(1, nowMs - metadata.startedPipelineAt);\n    minScale = zoomToFitWidthPx / elapsedMs;\n  }\n\n  const scale = Math.exp(\n    Math.log(minScale) + ((Math.log(MAX_SCALE) - Math.log(minScale)) / 100) * options.zoom,\n  );\n\n  // When the pipeline is running we want the graph to be steadily moving, even if logs\n  // aren't arriving. To achieve this we determine an update interval based on the scale\n  // and advance a \"now\" value that is used as the currnet time when adjusting the layout\n  // to account for run metadata below.\n\n  // Because renders can happen \"out of band\" of our update interval, we set a timer for\n  // \"time until the next interval after the current nowMs\".\n  React.useEffect(() => {\n    if (scale === 0 || lostWebsocket) {\n      return;\n    }\n\n    if (metadata?.exitedAt) {\n      if (nowMs !== metadata.exitedAt) {\n        setNowMs(metadata.exitedAt);\n      }\n      return;\n    }\n\n    const renderInterval = Math.max(CSS_DURATION, 2 / scale);\n    const now = Date.now();\n\n    const timeUntilIntervalElasped = renderInterval - (now - nowMs);\n    const timeout = setTimeout(() => setNowMs(now), timeUntilIntervalElasped);\n    return () => clearTimeout(timeout);\n  }, [scale, nowMs, lostWebsocket, metadata]);\n\n  // Listen for events specifying hover time (eg: a marker at a particular timestamp)\n  // and sync them to our React state for display.\n  React.useEffect(() => {\n    const listener = (e: CustomEvent) => setHoveredTime(e.detail);\n    document.addEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n    return () => document.removeEventListener(HIGHLIGHT_TIME_EVENT, listener as EventListener);\n  });\n\n  // The `layout` we receive has been laid out and the rows / \"waterfall\" are final,\n  // but it doesn't incorporate the display scale or run metadata. We stretch and\n  // shift the layout boxes using this data to create the final layout for display.\n  const layout = adjustLayoutWithRunMetadata(\n    props.layout,\n    options,\n    metadata || EMPTY_RUN_METADATA,\n    scale,\n    nowMs,\n  );\n  const layoutSize = {\n    width: Math.max(0, ...layout.boxes.map((b) => b.x + b.width + BOX_SPACING_X)),\n    height: Math.max(0, ...layout.boxes.map((b) => TOP_INSET + b.y * BOX_HEIGHT + BOTTOM_INSET)),\n  };\n\n  React.useEffect(() => {\n    const node = layout.boxes.find((b) => selection.keys.includes(b.node.name));\n    if (!node) {\n      return;\n    }\n    const bounds = boundsForBox(node);\n    const x = (bounds.maxX + bounds.minX) / 2 - viewport.width / 2;\n    const y = (bounds.maxY + bounds.minY) / 2 - viewport.height / 2;\n    onMoveToViewport({left: x, top: y}, true);\n  }, [selection]); // eslint-disable-line\n\n  const highlightedMs: number[] = [];\n  if (props.focusedTime) {\n    highlightedMs.push(props.focusedTime);\n  }\n\n  if (hoveredTime) {\n    highlightedMs.push(hoveredTime);\n  } else if (selection.keys.length > 0) {\n    const selectedMeta = selection.keys\n      .map((stepKey) => metadata?.steps[stepKey])\n      .filter((x): x is IStepMetadata => x !== undefined);\n    const sortedSelectedSteps = selectedMeta.sort((a, b) =>\n      a.start && b.start ? a.start - b.start : 0,\n    );\n    const firstMeta = sortedSelectedSteps[0];\n    const lastMeta = sortedSelectedSteps[sortedSelectedSteps.length - 1];\n    if (firstMeta?.start) {\n      highlightedMs.push(firstMeta.start);\n    }\n    if (lastMeta?.end) {\n      highlightedMs.push(lastMeta.end);\n    }\n  }\n\n  const measurementComplete = viewport.width > 0;\n\n  const content = (\n    <>\n      {options.mode === GanttChartMode.WATERFALL_TIMED && measurementComplete && (\n        <GanttChartTimescale\n          scale={scale}\n          viewport={viewport}\n          layoutSize={layoutSize}\n          startMs={metadata?.startedPipelineAt || 0}\n          highlightedMs={highlightedMs}\n          nowMs={nowMs}\n        />\n      )}\n      <div style={{overflow: 'scroll', flex: 1}} {...containerProps}>\n        <div style={{position: 'relative', marginBottom: 70, ...layoutSize}}>\n          {measurementComplete && (\n            <GanttChartViewportContents\n              options={options}\n              metadata={metadata || EMPTY_RUN_METADATA}\n              layout={layout}\n              hoveredStep={hoveredStep}\n              focusedSteps={selection.keys}\n              viewport={viewport}\n              setHoveredNodeName={setHoveredNodeName}\n              onClickStep={props.onClickStep}\n              onDoubleClickStep={props.onDoubleClickStep}\n            />\n          )}\n        </div>\n      </div>\n\n      <GraphQueryInputContainer>\n        {lostWebsocket ? (\n          <WebsocketWarning>\n            <Box flex={{justifyContent: 'space-around'}} margin={{bottom: 12}}>\n              <Group\n                direction=\"row\"\n                spacing={8}\n                background={`${Colors.Yellow500}26`}\n                padding={{vertical: 8, horizontal: 12}}\n                alignItems=\"flex-start\"\n              >\n                <Icon name=\"warning\" color={Colors.Yellow700} />\n                <div style={{maxWidth: '400px', whiteSpace: 'normal', overflow: 'hidden'}}>\n                  <strong>Lost connection to Dagit server.</strong>\n                  <span>\n                    {` Verify that your instance is responding to requests at ${rootServerURI} and reload the page.`}\n                  </span>\n                </div>\n              </Group>\n            </Box>\n          </WebsocketWarning>\n        ) : null}\n        <FilterInputsBackgroundBox flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n          <GraphQueryInput\n            items={props.graph}\n            value={props.selection.query}\n            placeholder=\"Type a step subset\"\n            onChange={props.onUpdateQuery}\n            presets={metadata ? interestingQueriesFor(metadata, layout) : undefined}\n            className={selection.keys.length > 0 ? 'has-step' : ''}\n          />\n          <Checkbox\n            checked={options.hideUnselectedSteps}\n            label=\"Hide unselected steps\"\n            onChange={props.onChange}\n          />\n        </FilterInputsBackgroundBox>\n      </GraphQueryInputContainer>\n    </>\n  );\n\n  return metadata ? (\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={content}\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          {...props}\n          nowMs={nowMs}\n          metadata={metadata}\n          onHighlightStep={(name) => setHoveredNodeName(name)}\n        />\n      }\n    />\n  ) : (\n    content\n  );\n};\n\ninterface GanttChartViewportContentsProps {\n  options: GanttChartLayoutOptions;\n  metadata: IRunMetadataDict;\n  layout: GanttChartLayout;\n  hoveredStep: string | null;\n  focusedSteps: string[];\n  viewport: GanttViewport;\n  setHoveredNodeName: (name: string | null) => void;\n  onDoubleClickStep: (step: string) => void;\n  onClickStep: (step: string, evt: React.MouseEvent<any>) => void;\n}\n\nconst GanttChartViewportContents: React.FC<GanttChartViewportContentsProps> = (props) => {\n  const {viewport, layout, hoveredStep, focusedSteps, metadata, options} = props;\n  const items: React.ReactChild[] = [];\n\n  // To avoid drawing zillions of DOM nodes, we render only the boxes + lines that\n  // intersect with the current viewport.\n  const intersectsViewport = (bounds: Bounds) =>\n    bounds.minX < viewport.left + viewport.width &&\n    bounds.maxX > viewport.left &&\n    bounds.minY < viewport.top + viewport.height &&\n    bounds.maxY > viewport.top;\n\n  // We track the number of lines that end at each X value (they go over and then down,\n  // so this tracks where the vertical lines are). We shift lines by {count}px if there\n  // are others at the same X so wide \"tracks\" show you where data is being collected.\n  const verticalLinesAtXCoord: {[x: string]: number} = {};\n\n  if (options.mode !== GanttChartMode.FLAT) {\n    layout.boxes.forEach((box) => {\n      box.children.forEach((child, childIdx) => {\n        const bounds = boundsForLine(box, child);\n        if (!intersectsViewport(bounds)) {\n          return;\n        }\n        const childNotDrawn = !layout.boxes.includes(child);\n        const childWaiting = metadata ? !metadata.steps[child.node.name]?.state : false;\n\n        const overlapAtXCoord = verticalLinesAtXCoord[bounds.maxX] || 0;\n        verticalLinesAtXCoord[bounds.maxX] = overlapAtXCoord + 1;\n\n        items.push(\n          <GanttLine\n            darkened={\n              (focusedSteps?.includes(box.node.name) || hoveredStep) === box.node.name ||\n              (focusedSteps?.includes(child.node.name) || hoveredStep) === child.node.name\n            }\n            dotted={childNotDrawn || childWaiting}\n            key={`${box.key}-${child.key}-${childIdx}`}\n            depNotDrawn={childNotDrawn}\n            depIdx={overlapAtXCoord}\n            {...bounds}\n          />,\n        );\n      });\n    });\n  }\n\n  layout.boxes.forEach((box) => {\n    const bounds = boundsForBox(box);\n    const useDot = box.width === BOX_DOT_WIDTH_CUTOFF;\n    if (!intersectsViewport(bounds)) {\n      return;\n    }\n\n    items.push(\n      <div\n        key={box.key}\n        data-tooltip={box.node.name}\n        onClick={(evt: React.MouseEvent<any>) => props.onClickStep(box.node.name, evt)}\n        onDoubleClick={() => props.onDoubleClickStep(box.node.name)}\n        onMouseEnter={() => props.setHoveredNodeName(box.node.name)}\n        onMouseLeave={() => props.setHoveredNodeName(null)}\n        className={`\n            chart-element\n            ${useDot ? 'dot' : 'box'}\n            ${focusedSteps.includes(box.node.name) && 'focused'}\n            ${hoveredStep === box.node.name && 'hovered'}\n            ${isDynamicStep(box.node.name) && 'dynamic'}`}\n        style={{\n          left: bounds.minX,\n          top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n          width: useDot ? BOX_DOT_SIZE : box.width,\n          ...boxStyleFor(box.state, {metadata, options}),\n        }}\n      >\n        {box.state === IStepState.RUNNING ? <Spinner purpose=\"body-text\" /> : undefined}\n        {truncatedBoxLabel(box)}\n      </div>,\n    );\n  });\n\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    // Note: We sort the markers from left to right so that they're added to the DOM in that\n    // order and a long one doesn't make ones \"behind it\" unclickable.\n    layout.markers\n      .map((marker, idx) => ({marker, idx, bounds: boundsForBox(marker)}))\n      .filter(({bounds}) => intersectsViewport(bounds))\n      .sort((a, b) => a.bounds.minX - b.bounds.minX)\n      .forEach(({marker, bounds, idx}) => {\n        const useDot = marker.width === BOX_DOT_WIDTH_CUTOFF;\n\n        items.push(\n          <div\n            key={idx}\n            data-tooltip={marker.key}\n            className={`\n            chart-element\n            ${useDot ? 'marker-dot' : 'marker-whiskers'}`}\n            style={{\n              left: bounds.minX,\n              top: bounds.minY + (useDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y),\n              width: useDot ? BOX_DOT_SIZE : marker.width,\n            }}\n          >\n            <div />\n          </div>,\n        );\n      });\n  }\n\n  return <>{items}</>;\n};\n\ninterface Bounds {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\n/**\n * Returns the top left + bottom right bounds for the provided Gantt chart box\n * so that the box can be drawn and tested for intersection with the viewport.\n */\nconst boundsForBox = (a: GanttChartPlacement): Bounds => {\n  return {\n    minX: a.x,\n    minY: TOP_INSET + a.y * BOX_HEIGHT,\n    maxX: a.x + a.width,\n    maxY: TOP_INSET + a.y * BOX_HEIGHT + BOX_HEIGHT,\n  };\n};\n\n/**\n * Returns the top left + bottom right bounds for the line between two Gantt\n * chart boxes. The boxes do not need to be provided in left -> right order.\n * @param a: GanttChartBox\n */\nconst boundsForLine = (a: GanttChartBox, b: GanttChartBox): Bounds => {\n  if (b.y < a.y) {\n    [a, b] = [b, a];\n  }\n\n  const aIsDot = a.width === BOX_DOT_WIDTH_CUTOFF;\n  const aCenterY = aIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const bIsDot = b.width === BOX_DOT_WIDTH_CUTOFF;\n  const bCenterY = bIsDot ? BOX_DOT_MARGIN_Y + BOX_DOT_SIZE / 2 : BOX_HEIGHT / 2;\n\n  const straight = b.y === a.y;\n\n  // Line comes out of the center of the right side of the box\n  const minX = Math.min(a.x + a.width, b.x + b.width);\n  const minY = TOP_INSET + (straight ? a.y * BOX_HEIGHT + aCenterY : a.y * BOX_HEIGHT + aCenterY);\n\n  // Line ends on the center left edge of the box if it is on the\n  // same line, or drops into the top center of the box if it's below.\n  const maxX = straight\n    ? Math.max(a.x, b.x)\n    : Math.max(a.x + a.width / 2, b.x + (bIsDot ? BOX_DOT_SIZE : b.width) / 2);\n  const maxY = straight\n    ? TOP_INSET + b.y * BOX_HEIGHT + bCenterY\n    : TOP_INSET + b.y * BOX_HEIGHT + (bIsDot ? BOX_DOT_MARGIN_Y : BOX_MARGIN_Y);\n\n  return {minX, minY, maxX, maxY};\n};\n\n/**\n * Renders a line on the Gantt visualization using a thin horizontal <div> and\n * a thin vertical <div> as necessary.\n */\nconst GanttLine = React.memo(\n  ({\n    minX,\n    minY,\n    maxX,\n    maxY,\n    dotted,\n    darkened,\n    depIdx,\n    depNotDrawn,\n  }: {\n    dotted: boolean;\n    darkened: boolean;\n    depIdx: number;\n    depNotDrawn: boolean;\n  } & Bounds) => {\n    const border = `${LINE_SIZE}px ${dotted ? 'dotted' : 'solid'} ${\n      darkened ? Colors.Gray700 : Colors.Gray300\n    }`;\n\n    const maxXAvoidingOverlap = maxX + (depIdx % 10) * LINE_SIZE;\n\n    return (\n      <>\n        <div\n          className=\"line\"\n          style={{\n            height: 1,\n            left: minX,\n            width: depNotDrawn ? 50 : maxXAvoidingOverlap - minX,\n            top: minY - 1,\n            borderTop: border,\n            zIndex: darkened ? 100 : 1,\n          }}\n        />\n        {minY !== maxY && !depNotDrawn && (\n          <div\n            className=\"line\"\n            style={{\n              width: 1,\n              left: maxXAvoidingOverlap,\n              top: minY - LINE_SIZE / 2,\n              height: maxY - minY,\n              borderRight: border,\n              zIndex: darkened ? 100 : 1,\n            }}\n          />\n        )}\n      </>\n    );\n  },\n  isEqual,\n);\n\nfunction truncatedBoxLabel(box: GanttChartBox) {\n  if (box.width <= BOX_SHOW_LABEL_WIDTH_CUTOFF) {\n    return undefined;\n  }\n\n  // Note: The constants here must be in sync with the CSS immediately below\n  const totalPadding = 7 + (box.state === IStepState.RUNNING ? 16 : 0);\n  const maxLength = (box.width - totalPadding) / 6.2;\n\n  return withMiddleTruncation(box.node.name, {maxLength});\n}\n\n// Note: It is much faster to use standard CSS class selectors here than make\n// each box and line a styled-component because all styled components register\n// listeners for the \"theme\" React context.\nconst GanttChartContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  user-select: none;\n  background: ${Colors.White};\n\n  .line {\n    position: absolute;\n    user-select: none;\n    pointer-events: none;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n  }\n\n  .chart-element {\n    font-size: 12px;\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear;\n    display: inline-block;\n    position: absolute;\n    color: white;\n    overflow: hidden;\n    user-select: text;\n    z-index: 2;\n\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n  }\n\n  .dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid transparent;\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n\n  .box {\n    /* Note: padding + font changes may also impact truncatedBoxLabel */\n\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    padding: 3px;\n    padding-right: 1px;\n    border: 1px solid transparent;\n    border-radius: 2px;\n    white-space: nowrap;\n    font-family: ${FontFamily.monospace};\n    font-size: 12.5px;\n    font-weight: 700;\n    line-height: 15px;\n\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear, height ${CSS_DURATION}ms linear;\n\n    &.focused {\n      border: 1px solid ${Colors.Gray900};\n      box-shadow: 0 0 0 2px ${Colors.Yellow500};\n    }\n    &.hovered {\n      border: 1px solid ${Colors.Gray800};\n    }\n    &.dynamic {\n      filter: brightness(125%);\n    }\n\n    ${SpinnerWrapper} {\n      display: inline-block;\n      vertical-align: text-bottom;\n      padding-right: 4px;\n    }\n  }\n\n  .marker-dot {\n    width: ${BOX_DOT_SIZE}px;\n    height: ${BOX_DOT_SIZE}px;\n    border: 1px solid rgb(27, 164, 206);\n    border-radius: ${BOX_DOT_SIZE / 2}px;\n  }\n  .marker-whiskers {\n    display: inline-block;\n    position: absolute;\n    height: ${BOX_HEIGHT - BOX_MARGIN_Y * 2}px;\n    background: rgba(27, 164, 206, 0.09);\n    border-left: 1px solid rgba(27, 164, 206, 0.6);\n    border-right: 1px solid rgba(27, 164, 206, 0.6);\n    transition: top ${CSS_DURATION}ms linear, left ${CSS_DURATION}ms linear,\n      width ${CSS_DURATION}ms linear;\n\n    & > div {\n      border-bottom: 1px dashed rgba(27, 164, 206, 0.6);\n      height: ${(BOX_HEIGHT - BOX_MARGIN_Y * 2) / 2}px;\n    }\n  }\n`;\n\nconst WebsocketWarning = styled.div`\n  position: absolute;\n  bottom: 100%;\n  color: ${Colors.Yellow700};\n  width: 100%;\n`;\n\nconst GraphQueryInputContainer = styled.div`\n  z-index: 2;\n  position: absolute;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  white-space: nowrap;\n`;\n\nconst FilterInputsBackgroundBox = styled(Box)`\n  background: radial-gradient(${Colors.Gray50} 0%, rgba(255, 255, 255, 0) 100%);\n  padding: 15px 15px 0px 15px;\n`;\n\nexport const GanttChartLoadingState = ({runId}: {runId: string}) => (\n  <GanttChartContainer>\n    <OptionsContainer />\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <div style={{margin: 'auto', marginTop: 100}}>\n          <Spinner purpose=\"section\" />\n        </div>\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={runId}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n\nexport const QueuedState = ({run}: {run: RunFragment}) => (\n  <GanttChartContainer>\n    <OptionsContainer style={{justifyContent: 'flex-end'}}>\n      <CancelRunButton run={run} />\n    </OptionsContainer>\n    <SplitPanelContainer\n      identifier=\"gantt-split\"\n      axis=\"horizontal\"\n      first={\n        <NonIdealState\n          icon=\"arrow_forward\"\n          title=\"Run queued\"\n          description=\"This run is queued for execution and will start soon.\"\n          action={\n            <Link to={runsPathWithFilters([{token: 'status', value: 'QUEUED'}])}>\n              View queued runs\n            </Link>\n          }\n        />\n      }\n      firstInitialPercent={70}\n      second={\n        <GanttStatusPanel\n          metadata={EMPTY_RUN_METADATA}\n          selection={{keys: [], query: '*'}}\n          runId={run.id}\n          nowMs={0}\n        />\n      }\n    />\n  </GanttChartContainer>\n);\n","import {ButtonGroup, ButtonGroupItem} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {GanttChartMode} from './Constants';\n\nexport const GanttChartModeControl: React.FC<{\n  value: GanttChartMode;\n  hideTimedMode: boolean;\n  onChange: (mode: GanttChartMode) => void;\n}> = React.memo(({value, onChange, hideTimedMode}) => {\n  const buttons: ButtonGroupItem<GanttChartMode>[] = [\n    {id: GanttChartMode.FLAT, icon: 'gantt_flat', tooltip: 'Flat view'},\n    {id: GanttChartMode.WATERFALL, icon: 'gantt_waterfall', tooltip: 'Waterfall view'},\n  ];\n\n  if (!hideTimedMode) {\n    buttons.push({\n      id: GanttChartMode.WATERFALL_TIMED,\n      icon: 'timer',\n      tooltip: 'Timed view',\n    });\n  }\n\n  const activeItems = React.useMemo(() => new Set([value]), [value]);\n  const onClick = React.useCallback((id: GanttChartMode) => onChange(id), [onChange]);\n\n  return <ButtonGroup activeItems={activeItems} buttons={buttons} onClick={onClick} />;\n});\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\n\nimport {CSS_DURATION, GanttViewport, LEFT_INSET} from './Constants';\n\nconst msToMinuteLabel = (ms: number) => `${Math.round(ms / 1000 / 60)}m`;\nconst msToSecondLabel = (ms: number) => `${(ms / 1000).toFixed(0)}s`;\nconst msToSubsecondLabel = (ms: number) => `${(ms / 1000).toFixed(1)}s`;\n\n// We want to gracefully transition the tick marks shown as you zoom, but it's\n// nontrivial to programatically pick good intervals. (500ms => 1s => 5s, etc.)\n// This lookup table defines the available tick mark intervals and the labeling\n// that should be used for each one(\"2:00\" or \"2m\" or \"2s\" or \"0.05s\", etc.).\n//\n// We use the first configuration that places ticks at least 80 pixels apart\n// at the rendered scale.\n//\nconst TICK_LABEL_WIDTH = 56;\nconst TICK_CONFIG = [\n  {\n    tickIntervalMs: 0.5 * 1000,\n    tickLabels: msToSubsecondLabel,\n  },\n  {\n    tickIntervalMs: 1 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 5 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 10 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 30 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 60 * 1000,\n    tickLabels: msToSecondLabel,\n  },\n  {\n    tickIntervalMs: 2 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 5 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 10 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 20 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n  {\n    tickIntervalMs: 6 * 60 * 60 * 1000,\n    tickLabels: msToMinuteLabel,\n  },\n];\n\ninterface GanttChartTimescaleProps {\n  scale: number;\n  viewport: GanttViewport;\n  layoutSize: {width: number; height: number};\n  nowMs: number;\n  startMs: number;\n  highlightedMs: number[];\n}\n\nexport const GanttChartTimescale = ({\n  scale,\n  viewport,\n  nowMs,\n  startMs,\n  highlightedMs,\n  layoutSize,\n}: GanttChartTimescaleProps) => {\n  const transform = `translate(${LEFT_INSET - viewport.left}px)`;\n  const ticks: React.ReactChild[] = [];\n  const lines: React.ReactChild[] = [];\n\n  const pxPerMs = scale;\n  const tickConfig = TICK_CONFIG.find((t) => t.tickIntervalMs * pxPerMs > 80);\n  if (tickConfig) {\n    const {tickIntervalMs, tickLabels} = tickConfig;\n    const pxPerTick = tickIntervalMs * pxPerMs;\n    const firstTickX = Math.floor(viewport.left / pxPerTick) * pxPerTick;\n\n    for (let x = firstTickX; x < firstTickX + viewport.width; x += pxPerTick) {\n      if (x - viewport.left < 10) {\n        continue;\n      }\n      const ms = x / pxPerMs;\n      const key = `${ms.toFixed(2)}`;\n      const label = tickLabels(ms);\n      lines.push(<div className=\"line\" key={key} style={{left: x, transform}} />);\n      ticks.push(\n        <div className=\"tick\" key={key} style={{left: x - TICK_LABEL_WIDTH / 2, transform}}>\n          {label}\n        </div>,\n      );\n    }\n  }\n\n  return (\n    <TimescaleContainer>\n      <TimescaleTicksContainer>\n        {ticks}\n        {highlightedMs.length === 2 && (\n          <div\n            key=\"highlight-duration\"\n            className=\"tick duration\"\n            style={{\n              left: (highlightedMs[0] - startMs) * pxPerMs + 2,\n              width: (highlightedMs[1] - highlightedMs[0]) * pxPerMs - 2,\n              transform,\n            }}\n          >\n            {formatElapsedTime(highlightedMs[1] - highlightedMs[0])}\n          </div>\n        )}\n        {highlightedMs.map((ms, idx) => {\n          const timeX = (ms - startMs) * pxPerMs;\n          const labelOffset =\n            idx === 0 && timeX > TICK_LABEL_WIDTH + viewport.left ? -(TICK_LABEL_WIDTH - 1) : 0;\n\n          return (\n            <div\n              key={`highlight-${idx}`}\n              className=\"tick highlight\"\n              style={{left: timeX + labelOffset, transform}}\n            >\n              {msToSubsecondLabel(ms - startMs)}\n            </div>\n          );\n        })}\n      </TimescaleTicksContainer>\n      <TimescaleLinesContainer style={{width: viewport.width, height: viewport.height}}>\n        {lines}\n        {highlightedMs.map((ms, idx) => (\n          <div\n            className=\"line highlight\"\n            key={`highlight-${idx}`}\n            style={{left: (ms - startMs) * pxPerMs + (idx === 0 ? -1 : 0), transform}}\n          />\n        ))}\n        {nowMs > startMs && (\n          <div\n            className=\"fog-of-war\"\n            style={{\n              left: (nowMs - startMs) * pxPerMs,\n              width: Math.max(layoutSize.width, viewport.width) - (nowMs - startMs) * pxPerMs + 100,\n              transform,\n            }}\n          ></div>\n        )}\n      </TimescaleLinesContainer>\n    </TimescaleContainer>\n  );\n};\n\nconst TICKS_ROW_HEIGHT = 32;\n\nconst TimescaleContainer = styled.div`\n  width: 100%;\n\n  & .tick {\n    position: absolute;\n    padding-top: 7px;\n    width: ${TICK_LABEL_WIDTH}px;\n    height: ${TICKS_ROW_HEIGHT}px;\n    box-sizing: border-box;\n    transition: left ${CSS_DURATION}ms linear, width ${CSS_DURATION}ms linear;\n    text-align: center;\n  }\n  & .tick.duration {\n    color: ${Colors.Gray500};\n    background: ${Colors.Gray100};\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n  & .tick.highlight {\n    color: white;\n    height: ${TICKS_ROW_HEIGHT + 2}px;\n    background: ${Colors.Gray900};\n  }\n  & .line {\n    position: absolute;\n    border-left: 1px solid #f0f0f0;\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n  }\n  & .line.highlight {\n    border-left: 2px solid ${Colors.Gray900};\n    z-index: 1111;\n    top: -1px;\n  }\n\n  & .fog-of-war {\n    position: absolute;\n    background: ${Colors.Gray50};\n    transition: left ${CSS_DURATION}ms linear;\n    top: 0px;\n    bottom: 0px;\n    width: 100%;\n  }\n`;\n\nconst TimescaleTicksContainer = styled.div`\n  height: ${TICKS_ROW_HEIGHT}px;\n  z-index: 4;\n  position: relative;\n  background: ${Colors.White};\n  display: flex;\n  color: ${Colors.Gray500};\n  font-size: 13px;\n  font-family: ${FontFamily.monospace};\n  box-shadow: inset 0 -1px ${Colors.KeylineGray};\n  overflow: hidden;\n`;\n\nconst TimescaleLinesContainer = styled.div`\n  z-index: 0;\n  top: ${TICKS_ROW_HEIGHT}px;\n  left: 0;\n  position: absolute;\n  pointer-events: none;\n  overflow: hidden;\n`;\n","import {Colors, SliderStyles} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\n/**\n * Renders a horizontal slider that lets you adjust the graph's relative zoom from 1-100.\n * It uses Blueprint CSS but not the Slider component, because that renders twice and\n * forces a DOM layout to determine it's size (I think for tick marks, which we aren't using)\n */\nexport const ZoomSlider: React.FC<{\n  value: number;\n  onChange: (v: number) => void;\n}> = React.memo((props) => {\n  return (\n    <ZoomSliderContainer\n      $fillColor={Colors.Gray600}\n      className=\"bp3-slider bp3-slider-unlabeled\"\n      onMouseDown={(e: React.MouseEvent) => {\n        const rect = e.currentTarget.closest('.bp3-slider')!.getBoundingClientRect();\n\n        let initialX: number;\n        if (e.target instanceof HTMLElement && e.target.classList.contains('bp3-slider-handle')) {\n          initialX = e.pageX;\n        } else {\n          initialX = rect.left + (props.value / 100) * rect.width;\n        }\n\n        const onUpdate = (e: MouseEvent) => {\n          const nextValue = props.value + (e.pageX - initialX) * (100 / rect.width);\n          props.onChange(Math.max(0, Math.min(100, nextValue)));\n        };\n        const onRelease = (e: MouseEvent) => {\n          onUpdate(e);\n          document.removeEventListener('mousemove', onUpdate);\n          document.removeEventListener('mouseup', onRelease);\n        };\n        document.addEventListener('mousemove', onUpdate);\n        document.addEventListener('mouseup', onRelease);\n      }}\n    >\n      <div className=\"bp3-slider-track\">\n        <div className=\"bp3-slider-progress\" style={{left: 0, right: 0, top: 0}} />\n        <div\n          className=\"bp3-slider-progress bp3-intent-primary\"\n          style={{left: 0, right: `${100 - props.value}%`, top: 0}}\n        />\n      </div>\n      <div className=\"bp3-slider-axis\" />\n      <span\n        className=\"bp3-slider-handle\"\n        style={{left: `calc(${props.value}% - 8px)`}}\n        tabIndex={0}\n      />\n    </ZoomSliderContainer>\n  );\n});\n\nconst ZoomSliderContainer = styled.div`\n  ${SliderStyles}\n`;\n","import {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {GanttChartMode} from './Constants';\n\nconst GANTT_CHART_MODE_KEY = 'GanttChartModePreference';\n\nconst validateSavedMode = (storedValue: string) =>\n  storedValue === GanttChartMode.FLAT ||\n  storedValue === GanttChartMode.WATERFALL ||\n  storedValue === GanttChartMode.WATERFALL_TIMED\n    ? storedValue\n    : GanttChartMode.WATERFALL_TIMED;\n\nexport const useGanttChartMode = () => {\n  return useStateWithStorage(GANTT_CHART_MODE_KEY, validateSavedMode);\n};\n","import {Colors} from '@dagster-io/ui';\n\nimport {IRunMetadataDict, IStepAttempt, IStepState} from '../runs/RunMetadataProvider';\n\nimport {\n  BOX_DOT_WIDTH_CUTOFF,\n  BOX_SPACING_X,\n  BOX_WIDTH,\n  FLAT_INSET_FROM_PARENT,\n  GanttChartBox,\n  GanttChartLayout,\n  GanttChartLayoutOptions,\n  GanttChartMarker,\n  GanttChartMode,\n  IGanttNode,\n  LEFT_INSET,\n} from './Constants';\nimport {isDynamicStep, isPlannedDynamicStep, dynamicKeyWithoutIndex} from './DynamicStepSupport';\n\nexport interface BuildLayoutParams {\n  nodes: IGanttNode[];\n  mode: GanttChartMode;\n}\n\nexport const buildLayout = (params: BuildLayoutParams) => {\n  const {nodes, mode} = params;\n\n  // Step 1: Place the nodes that have no dependencies into the layout.\n  const hasNoDependencies = (g: IGanttNode) =>\n    !g.inputs.some((i) => i.dependsOn.some((s) => nodes.find((o) => o.name === s.solid.name)));\n\n  const boxes: GanttChartBox[] = nodes.filter(hasNoDependencies).map((node) => ({\n    node,\n    key: node.name,\n    state: undefined,\n    children: [],\n    x: -1,\n    y: -1,\n    root: true,\n    width: BOX_WIDTH,\n  }));\n\n  // Step 2: Recursively iterate through the graph and insert child nodes\n  // into the `boxes` array, ensuring that their positions in the array are\n  // always greater than their parent(s) position (which requires correction\n  // because boxes can have multiple dependencies.)\n  const roots = [...boxes];\n  roots.forEach((box) => addChildren(boxes, box, params));\n\n  // Step 3: Assign X values (pixels) to each box by traversing the graph from the\n  // roots onward and pushing things to the right as we go.\n  const deepen = (box: GanttChartBox, x: number) => {\n    if (box.x >= x) {\n      // If this box is already further to the right than required by it's parent,\n      // we can safely stop traversing this branch of the graph.\n      return;\n    }\n    box.x = x;\n    box.children.forEach((child) => deepen(child, box.x + box.width + BOX_SPACING_X));\n  };\n  roots.forEach((box) => deepen(box, LEFT_INSET));\n\n  const parents: {[name: string]: GanttChartBox[]} = {};\n  const boxesByY: {[y: string]: GanttChartBox[]} = {};\n\n  // Step 4: Assign Y values (row numbers not pixel values)\n  // First put each box on it's own line. We know this will generate a fine gantt viz\n  // because we sorted the boxes array as we built it.\n  boxes.forEach((box, idx) => {\n    box.y = idx;\n    box.children.forEach((child) => {\n      parents[child.node.name] = parents[child.node.name] || [];\n      parents[child.node.name].push(box);\n    });\n  });\n\n  boxes.forEach((box) => {\n    boxesByY[`${box.y}`] = boxesByY[`${box.y}`] || [];\n    boxesByY[`${box.y}`].push(box);\n  });\n\n  // Next, start at the bottom of the viz and \"collapse\" boxes up on to the previous line\n  // as long as that does not result in them being higher than their parents AND does\n  // not cause them to sit on top of an existing on-the-same-line A ---> B arrow.\n\n  // This makes basic box series (A -> B -> C -> D) one row instead of four rows.\n\n  let changed = true;\n  while (changed) {\n    changed = false;\n    for (let idx = boxes.length - 1; idx > 0; idx--) {\n      const box = boxes[idx];\n      const boxParents = parents[box.node.name] || [];\n      const highestYParent = boxParents.sort((a, b) => b.y - a.y)[0];\n      if (!highestYParent) {\n        continue;\n      }\n      // Don't re-order the first row of nodes that \"fan out\" from a dynamic output. this\n      // ensures that these nodes are always \"waterfall\" visually by ascending index.\n      if (isDynamicStep(box.node.name) && !isDynamicStep(highestYParent.node.name)) {\n        continue;\n      }\n      const onTargetY = boxesByY[`${highestYParent.y}`];\n      const taken = onTargetY.find((r) => r.x === box.x);\n      if (taken) {\n        continue;\n      }\n\n      const parentX = highestYParent.x;\n      const willCross = onTargetY.some((r) => r.x > parentX && r.x < box.x);\n      const willCauseCrossing = onTargetY.some(\n        (r) => r.x < box.x && r.children.some((c) => c.y >= highestYParent.y && c.x > box.x),\n      );\n      if (willCross || willCauseCrossing) {\n        continue;\n      }\n\n      boxesByY[`${box.y}`] = boxesByY[`${box.y}`].filter((b) => b !== box);\n      box.y = highestYParent.y;\n      boxesByY[`${box.y}`].push(box);\n\n      changed = true;\n      break;\n    }\n  }\n\n  if (mode === GanttChartMode.FLAT) {\n    // Now that we've inlined chains of boxes where possible, flatten everything back out onto the\n    // Y axis. Doing this after inlining ensures that children are close to their parents in the\n    // resulting tree rather than placed randomly before their mutual dependents.\n    let bottomY = 0;\n    for (const y of Object.keys(boxesByY)) {\n      const row = boxesByY[y];\n      if (!row.length) {\n        continue;\n      }\n      let x = row[0].root ? LEFT_INSET : parents[row[0].node.name][0].x + FLAT_INSET_FROM_PARENT;\n      for (const box of row) {\n        box.x = x;\n        box.y = bottomY;\n        bottomY += 1;\n        x += FLAT_INSET_FROM_PARENT;\n      }\n    }\n    boxes.sort((a, b) => a.y - b.y || a.x - b.x);\n  } else {\n    // Since we've inlined boxes, shift rows up and fill empty space until every Y value has a box.\n    changed = true;\n    while (changed) {\n      changed = false;\n      const maxY = boxes.reduce((m, r) => Math.max(m, r.y), 0);\n      for (let y = 0; y < maxY; y++) {\n        const empty = !boxes.some((r) => r.y === y);\n        if (empty) {\n          boxes.filter((r) => r.y > y).forEach((r) => (r.y -= 1));\n          changed = true;\n          break;\n        }\n      }\n    }\n  }\n\n  return {boxes, markers: []} as GanttChartLayout;\n};\n\nconst ensureSubtreeAfterParentInArray = (\n  boxes: GanttChartBox[],\n  parent: GanttChartBox,\n  box: GanttChartBox,\n) => {\n  const parentIdx = boxes.indexOf(parent);\n  const boxIdx = boxes.indexOf(box);\n  if (parentIdx <= boxIdx) {\n    return;\n  }\n  boxes.splice(boxIdx, 1);\n  boxes.splice(parentIdx, 0, box);\n\n  // Note: It's important that we don't cache or pass indexes during this recursion.\n  // Visiting a child below could cause boxes earlier in the array to be pulled to the\n  // end. Our `parentIdx` above is not stable within the box.children loop below.\n\n  for (const child of box.children) {\n    ensureSubtreeAfterParentInArray(boxes, box, child);\n  }\n};\n\nconst addChildren = (boxes: GanttChartBox[], box: GanttChartBox, params: BuildLayoutParams) => {\n  const seen: string[] = [];\n  const added: GanttChartBox[] = [];\n\n  for (const out of box.node.outputs) {\n    for (const dep of out.dependedBy) {\n      const depNode = params.nodes.find((n) => dep.solid.name === n.name);\n      if (!depNode) {\n        continue;\n      }\n\n      if (seen.includes(depNode.name)) {\n        continue;\n      }\n\n      // Hide the unresolved node if any its resolved node exists\n      if (\n        isPlannedDynamicStep(depNode.name) &&\n        seen\n          .filter((n) => isDynamicStep(n))\n          .some((n) => dynamicKeyWithoutIndex(n) === dynamicKeyWithoutIndex(depNode.name))\n      ) {\n        continue;\n      }\n\n      seen.push(depNode.name);\n\n      const depBoxIdx = boxes.findIndex((r) => r.node === depNode);\n      let depBox: GanttChartBox;\n\n      if (depBoxIdx === -1) {\n        depBox = {\n          children: [],\n          key: depNode.name,\n          node: depNode,\n          state: undefined,\n          width: BOX_WIDTH,\n          root: false,\n          x: 0,\n          y: -1,\n        };\n        boxes.push(depBox);\n        added.push(depBox);\n      } else {\n        depBox = boxes[depBoxIdx];\n        ensureSubtreeAfterParentInArray(boxes, box, depBox);\n      }\n\n      box.children.push(depBox);\n    }\n  }\n\n  // Note: To limit the amount of time we spend shifting elements of our `boxes` array to keep it\n  // ordered (knowing that parents appear before children gives us more opportunities for early\n  // returns, etc. elsewhere), we add all of our immediate children and THEN proceed in to the next layer.\n  for (const depBox of added) {\n    addChildren(boxes, depBox, params);\n  }\n};\n\nconst TextColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue700,\n};\nconst BackgroundColorForStates = {\n  [IStepState.RUNNING]: Colors.Blue100,\n  [IStepState.RETRY_REQUESTED]: Colors.Yellow500,\n  [IStepState.SUCCEEDED]: Colors.Green500,\n  [IStepState.FAILED]: Colors.Red500,\n  [IStepState.SKIPPED]: Colors.Gray500,\n};\n\nexport const boxStyleFor = (\n  state: IStepState | undefined,\n  context: {\n    metadata: IRunMetadataDict;\n    options: {mode: GanttChartMode};\n  },\n) => {\n  // Not running and not viewing waterfall? We always use a nice blue\n  if (\n    !context.metadata.startedPipelineAt &&\n    context.options.mode !== GanttChartMode.WATERFALL_TIMED\n  ) {\n    return {background: `#2491eb`};\n  }\n\n  // Step has started and has state? Return state color.\n  if (state && state !== IStepState.PREPARING) {\n    return {\n      color: TextColorForStates[state] || '#fff',\n      background: BackgroundColorForStates[state] || Colors.Gray400,\n    };\n  }\n\n  // Step has not started, use \"hypothetical dotted box\".\n  return {\n    color: Colors.Gray600,\n    background: Colors.White,\n    border: `1.5px dotted ${Colors.Gray500}`,\n  };\n};\n\n// Does a shallow clone of the boxes so attributes (`width`, `x`, etc) can be mutated.\n// This requires special logic because (for easy graph travesal), boxes.children references\n// other elements of the boxes array. A basic deepClone would replicate these into\n// copies rather than references.\nconst cloneLayout = ({boxes, markers}: GanttChartLayout): GanttChartLayout => {\n  const map = new WeakMap();\n  const nextMarkers = markers.map((m) => ({...m}));\n  const nextBoxes: GanttChartBox[] = [];\n  for (const box of boxes) {\n    const next = {...box};\n    nextBoxes.push(next);\n    map.set(box, next);\n  }\n  for (let ii = 0; ii < boxes.length; ii++) {\n    nextBoxes[ii].children = boxes[ii].children.map((c) => map.get(c));\n  }\n\n  return {boxes: nextBoxes, markers: nextMarkers};\n};\n\nconst positionAndSplitBoxes = (\n  boxes: GanttChartBox[],\n  metadata: IRunMetadataDict,\n  positionFor: (\n    box: GanttChartBox,\n    run?: IStepAttempt | null,\n    runIdx?: number,\n  ) => {width: number; x: number},\n) => {\n  // Apply X values + widths to boxes, and break apart retries into their own boxes by looking\n  // at the transitions recorded for each step.\n  for (let ii = boxes.length - 1; ii >= 0; ii--) {\n    const box = boxes[ii];\n    const meta = metadata.steps[box.node.name];\n    if (!meta) {\n      Object.assign(box, positionFor(box));\n      continue;\n    }\n    if (meta.attempts.length === 0) {\n      Object.assign(box, positionFor(box));\n      box.state = meta.state;\n      continue;\n    }\n\n    const runBoxes: GanttChartBox[] = [];\n    meta.attempts.forEach((run, runIdx) => {\n      runBoxes.push({\n        ...box,\n        ...positionFor(box, run, runIdx),\n        key: `${box.key}-${runBoxes.length}`,\n        state: run.exitState || IStepState.RUNNING,\n      });\n    });\n\n    // Move the children (used to draw outbound lines) to the last box\n    for (let ii = 0; ii < runBoxes.length - 1; ii++) {\n      runBoxes[ii].children = [runBoxes[ii + 1]];\n    }\n    runBoxes[runBoxes.length - 1].children = box.children;\n\n    Object.assign(box, runBoxes[0]);\n    // Add additional boxes we created for retries\n    if (runBoxes.length > 1) {\n      boxes.splice(ii, 0, ...runBoxes.slice(1));\n    }\n  }\n};\n\n/** Traverse the graph from the root and place boxes that still have x=0 locations.\n(Unstarted or skipped boxes) so that they appear downstream of running boxes\nwe have position / time data for. */\nconst positionUntimedBoxes = (boxes: GanttChartBox[], earliestAllowedX: number) => {\n  const unstarted = boxes.filter((box) => box.x === 0);\n\n  const visit = (box: GanttChartBox, parentX: number) => {\n    if (box.x === 0) {\n      // If we are visiting the box for the first time (by traversing the tree from\n      // another starting box), starting another pass using it as the root is unnecessary.\n      const idx = unstarted.indexOf(box);\n      if (idx !== -1) {\n        unstarted.splice(idx, 1);\n      }\n    }\n\n    box.x = Math.max(box.x, earliestAllowedX, parentX);\n\n    const minXForUnstartedChildren = box.x + box.width + BOX_SPACING_X;\n    for (const child of box.children) {\n      if (child.x < minXForUnstartedChildren) {\n        visit(child, minXForUnstartedChildren);\n      }\n    }\n  };\n\n  let box: GanttChartBox | undefined;\n  while ((box = unstarted.shift())) {\n    visit(box, earliestAllowedX);\n  }\n};\n\nexport const adjustLayoutWithRunMetadata = (\n  layout: GanttChartLayout,\n  options: GanttChartLayoutOptions,\n  metadata: IRunMetadataDict,\n  scale: number,\n  nowMs: number,\n): GanttChartLayout => {\n  // Clone the layout into a new set of JS objects so that React components can do shallow\n  // comparison between the old set and the new set and code below can traverse + mutate\n  // in place.\n  let {boxes} = cloneLayout(layout);\n  const markers: GanttChartMarker[] = [];\n\n  // Move and size boxes based on the run metadata. Note that we don't totally invalidate\n  // the pre-computed layout for the execution plan, (and shouldn't have to since the run's\n  // step ordering, etc. should obey the constraints we already planned for). We just push\n  // boxes around on their existing rows.\n  if (options.mode === GanttChartMode.WATERFALL_TIMED) {\n    const startedPipelineAt = metadata.startedPipelineAt || nowMs;\n    const xForMs = (time: number) => LEFT_INSET + (time - startedPipelineAt) * scale;\n    const widthForMs = ({start, end}: {start: number; end?: number}) =>\n      Math.max(BOX_DOT_WIDTH_CUTOFF, ((end || nowMs) - start) * scale);\n\n    positionAndSplitBoxes(boxes, metadata, (_box, run) => ({\n      x: run ? xForMs(run.start) : 0,\n      width: run ? widthForMs(run) : BOX_WIDTH,\n    }));\n\n    positionUntimedBoxes(boxes, xForMs(nowMs) + BOX_SPACING_X);\n\n    // Add markers to the layout using the run metadata\n    metadata.globalMarkers.forEach((m) => {\n      if (m.start === undefined) {\n        return;\n      }\n      markers.push({\n        key: `global:${m.key}`,\n        y: 0,\n        x: xForMs(m.start),\n        width: widthForMs({start: m.start, end: m.end}),\n      });\n    });\n    Object.entries(metadata.steps).forEach(([name, step]) => {\n      for (const m of step.markers) {\n        if (m.start === undefined) {\n          continue;\n        }\n        const stepBox = layout.boxes.find((b) => b.node.name === name);\n        if (!stepBox) {\n          continue;\n        }\n\n        markers.push({\n          key: `${name}:${m.key}`,\n          y: stepBox.y,\n          x: xForMs(m.start),\n          width: widthForMs({start: m.start, end: m.end}),\n        });\n      }\n    });\n\n    // Apply display options / filtering\n    if (options.hideWaiting) {\n      boxes = boxes.filter((b) => !!metadata.steps[b.node.name]?.state);\n    }\n  } else if (options.mode === GanttChartMode.WATERFALL) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (BOX_SPACING_X + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else if (options.mode === GanttChartMode.FLAT) {\n    positionAndSplitBoxes(boxes, metadata, (box, _run, runIdx) => ({\n      x: box.x + (runIdx ? (2 + BOX_WIDTH) * runIdx : 0),\n      width: BOX_WIDTH,\n    }));\n  } else {\n    throw new Error('Invalid mdoe ');\n  }\n\n  return {boxes, markers};\n};\n\n/**\n * Returns a set of query presets that highlight interesting slices of the visualization.\n */\nexport const interestingQueriesFor = (metadata: IRunMetadataDict, layout: GanttChartLayout) => {\n  if (layout.boxes.length === 0) {\n    return;\n  }\n  const results: {name: string; value: string}[] = [];\n\n  const errorsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k].state === IStepState.FAILED)\n    .map((k) => `+${k}`)\n    .join(', ');\n  if (errorsQuery) {\n    results.push({name: 'Errors', value: errorsQuery});\n  }\n\n  const slowStepsQuery = Object.keys(metadata.steps)\n    .filter((k) => metadata.steps[k]?.end && metadata.steps[k]?.start)\n    .sort(\n      (a, b) =>\n        metadata.steps[b]!.end! -\n        metadata.steps[b]!.start! -\n        (metadata.steps[a]!.end! - metadata.steps[a]!.start!),\n    )\n    .slice(0, 5)\n    .map((k) => `\"${k}\"`)\n    .join(', ');\n  if (slowStepsQuery) {\n    results.push({name: 'Slowest Individual Steps', value: slowStepsQuery});\n  }\n\n  const rightmostCompletedBox = [...layout.boxes]\n    .filter((b) => metadata.steps[b.node.name]?.end)\n    .sort((a, b) => b.x + b.width - (a.x + a.width))[0];\n\n  if (rightmostCompletedBox) {\n    results.push({\n      name: 'Slowest Path',\n      value: `*${rightmostCompletedBox.node.name}`,\n    });\n  }\n\n  return results;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, ButtonLink, Colors, Group, Icon, FontFamily} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {FIFTEEN_SECONDS, useQueryRefreshAtInterval} from '../app/QueryRefresh';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunStateSummary, RunTime, RUN_TIME_FRAGMENT} from '../runs/RunUtils';\n\nimport {\n  RunGroupPanelQuery,\n  RunGroupPanelQueryVariables,\n  RunGroupPanelQuery_runGroupOrError_RunGroup_runs,\n} from './types/RunGroupPanelQuery';\n\ntype Run = RunGroupPanelQuery_runGroupOrError_RunGroup_runs;\n\nfunction subsetTitleForRun(run: {tags: {key: string; value: string}[]}) {\n  const stepsTag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  return stepsTag ? stepsTag.value : '*';\n}\n\nexport const RunGroupPanel: React.FC<{runId: string; runStatusLastChangedAt: number}> = ({\n  runId,\n  runStatusLastChangedAt,\n}) => {\n  const queryResult = useQuery<RunGroupPanelQuery, RunGroupPanelQueryVariables>(\n    RUN_GROUP_PANEL_QUERY,\n    {\n      variables: {runId},\n      fetchPolicy: 'cache-and-network',\n      notifyOnNetworkStatusChange: true,\n    },\n  );\n\n  const {data, refetch} = queryResult;\n  useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  // Because the RunGroupPanel makes it's own query for the runs and their statuses,\n  // the log + gantt chart UI can show that the run is \"completed\" for up to 15s before\n  // it's reflected in the sidebar. Observing this single timestamp from our parent\n  // allows us to refetch data immediately when the run's exitedAt / startedAt, etc. is set.\n  React.useEffect(() => {\n    if (runStatusLastChangedAt) {\n      refetch();\n    }\n  }, [refetch, runStatusLastChangedAt]);\n\n  const group = data?.runGroupOrError;\n\n  if (!group || group.__typename === 'RunGroupNotFoundError') {\n    return null;\n  }\n\n  if (group.__typename === 'PythonError') {\n    return (\n      <Group direction=\"row\" spacing={8} padding={8}>\n        <Icon name=\"warning\" color={Colors.Yellow500} />\n        <div style={{fontSize: '13px'}}>\n          The run group for this run could not be loaded.{' '}\n          <ButtonLink\n            color={Colors.Blue500}\n            underline=\"always\"\n            onClick={() => {\n              showCustomAlert({\n                title: 'Python error',\n                body: group.message,\n              });\n            }}\n          >\n            View error\n          </ButtonLink>\n        </div>\n      </Group>\n    );\n  }\n\n  if (group.runs?.length === 1) {\n    return null;\n  }\n\n  const unsorted: Run[] = [];\n  (group.runs || []).forEach((run: Run | null) => {\n    if (run && typeof run.startTime === 'number') {\n      unsorted.push(run);\n    }\n  });\n  const runs: Run[] = unsorted.sort((a: Run, b: Run) => {\n    return (a.startTime || 0) - (b.startTime || 0);\n  });\n\n  return (\n    <SidebarSection title={runs[0] ? `${runs[0].pipelineName} (${runs.length})` : ''}>\n      <>\n        {runs.map((g, idx) =>\n          g ? (\n            <RunGroupRun\n              key={g.runId}\n              to={`/instance/runs/${g.runId}`}\n              selected={g.runId === runId}\n            >\n              {idx < runs.length - 1 && <ThinLine style={{height: 36}} />}\n              <Box padding={{top: 4}}>\n                <RunStatusIndicator status={g.status} />\n              </Box>\n              <div\n                style={{\n                  flex: 1,\n                  marginLeft: 5,\n                  minWidth: 0,\n                  color: Colors.Gray700,\n                }}\n              >\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                  <RunTitle>\n                    {g.runId.split('-')[0]}\n                    {idx === 0 && RootTag}\n                  </RunTitle>\n                  <RunTime run={g} />\n                </div>\n                <div\n                  style={{\n                    display: 'flex',\n                    color: Colors.Gray700,\n                    justifyContent: 'space-between',\n                  }}\n                >\n                  {subsetTitleForRun(g)}\n                  <RunStateSummary run={g} />\n                </div>\n              </div>\n            </RunGroupRun>\n          ) : null,\n        )}\n      </>\n    </SidebarSection>\n  );\n};\n\nconst RUN_GROUP_PANEL_QUERY = gql`\n  query RunGroupPanelQuery($runId: ID!) {\n    runGroupOrError(runId: $runId) {\n      __typename\n      ...PythonErrorFragment\n      ... on RunGroup {\n        rootRunId\n        runs {\n          id\n          runId\n          parentRunId\n          status\n          stepKeysToExecute\n          pipelineName\n          tags {\n            key\n            value\n          }\n          ...RunTimeFragment\n        }\n      }\n    }\n  }\n  ${RUN_TIME_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunGroupRun = styled(Link)<{selected: boolean}>`\n  align-items: flex-start;\n  background: ${({selected}) => (selected ? Colors.Gray100 : Colors.White)};\n  padding: 4px 6px 4px 24px;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  line-height: 20px;\n  display: flex;\n  position: relative;\n  &:hover {\n    text-decoration: none;\n    background: ${({selected}) => (selected ? Colors.Gray100 : Colors.Gray50)};\n  }\n`;\n\nconst ThinLine = styled.div`\n  position: absolute;\n  top: 20px;\n  width: 1px;\n  background: ${Colors.Gray200};\n  left: 29px;\n  z-index: 2;\n`;\n\nconst RunTitle = styled.span`\n  color: ${Colors.Dark};\n  font-weight: 500;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  user-select: text;\n  flex: 1;\n`;\n\nconst RootTag = (\n  <span\n    style={{\n      borderRadius: 2,\n      fontSize: 12,\n      lineHeight: '14px',\n      background: Colors.Gray300,\n      color: Colors.White,\n      padding: '0 4px',\n      fontWeight: 400,\n      userSelect: 'none',\n      marginLeft: 12,\n    }}\n  >\n    ROOT\n  </span>\n);\n","import {Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {formatElapsedTime} from '../app/Util';\nimport {SidebarSection} from '../pipelines/SidebarComponents';\nimport {IRunMetadataDict, IStepState} from '../runs/RunMetadataProvider';\nimport {StepSelection} from '../runs/StepSelection';\n\nimport {GanttChartMode} from './Constants';\nimport {boxStyleFor} from './GanttChartLayout';\nimport {RunGroupPanel} from './RunGroupPanel';\n\ninterface GanttStatusPanelProps {\n  metadata: IRunMetadataDict;\n  selection: StepSelection;\n  runId: string;\n  nowMs: number;\n\n  onClickStep?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHighlightStep?: (step: string | null) => void;\n  onDoubleClickStep?: (step: string) => void;\n}\n\nexport const GanttStatusPanel: React.FC<GanttStatusPanelProps> = ({\n  runId,\n  nowMs,\n  metadata,\n  selection,\n  onClickStep,\n  onDoubleClickStep,\n  onHighlightStep,\n}) => {\n  const {preparing, executing, errored, succeeded} = React.useMemo(() => {\n    const keys = Object.keys(metadata.steps);\n    const preparing = [];\n    const executing = [];\n    const errored = [];\n    const succeeded = [];\n    for (const key of keys) {\n      const state = metadata.steps[key].state;\n      switch (state) {\n        case IStepState.PREPARING:\n          preparing.push(key);\n          break;\n        case IStepState.RUNNING:\n        case IStepState.UNKNOWN:\n          executing.push(key);\n          break;\n        case IStepState.FAILED:\n          errored.push(key);\n          break;\n        case IStepState.SUCCEEDED:\n          succeeded.push(key);\n      }\n    }\n    return {preparing, executing, errored, succeeded};\n  }, [metadata]);\n\n  const renderStepItem = (stepName: string) => (\n    <StepItem\n      nowMs={nowMs}\n      name={stepName}\n      key={stepName}\n      metadata={metadata}\n      selected={selection.keys.includes(stepName)}\n      onClick={onClickStep}\n      onDoubleClick={onDoubleClickStep}\n      onHover={onHighlightStep}\n    />\n  );\n\n  const isFinished = metadata?.exitedAt && metadata.exitedAt > 0;\n\n  return (\n    <div style={{overflowY: 'auto'}}>\n      <RunGroupPanel\n        runId={runId}\n        runStatusLastChangedAt={\n          metadata.exitedAt || metadata.startedProcessAt || metadata.startedPipelineAt || 0\n        }\n      />\n      <SidebarSection title={`${isFinished ? 'Not executed' : 'Preparing'} (${preparing.length})`}>\n        <div>\n          {preparing.length === 0 ? (\n            <EmptyNotice>No steps are waiting to execute</EmptyNotice>\n          ) : (\n            preparing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Executing (${executing.length})`}>\n        <div>\n          {executing.length === 0 ? (\n            <EmptyNotice>No steps are executing</EmptyNotice>\n          ) : (\n            executing.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection title={`Errored (${errored.length})`}>\n        <div>\n          {errored.length === 0 ? (\n            <EmptyNotice>No steps have errored</EmptyNotice>\n          ) : (\n            errored.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n      <SidebarSection collapsedByDefault title={`Succeeded (${succeeded.length})`}>\n        <div>\n          {succeeded.length === 0 ? (\n            <EmptyNotice>No steps have succeeded</EmptyNotice>\n          ) : (\n            succeeded.map(renderStepItem)\n          )}\n        </div>\n      </SidebarSection>\n    </div>\n  );\n};\n\nconst StepItem: React.FC<{\n  name: string;\n  selected: boolean;\n  metadata: IRunMetadataDict;\n  nowMs: number;\n  onClick?: (step: string, evt: React.MouseEvent<any>) => void;\n  onHover?: (name: string | null) => void;\n  onDoubleClick?: (name: string) => void;\n}> = ({nowMs, name, selected, metadata, onClick, onHover, onDoubleClick}) => {\n  const step = metadata.steps[name];\n  const end = step.end ?? nowMs;\n  return (\n    <StepItemContainer\n      key={name}\n      selected={selected}\n      onClick={(evt: React.MouseEvent<any>) => onClick?.(name, evt)}\n      onDoubleClick={() => onDoubleClick?.(name)}\n      onMouseEnter={() => onHover?.(name)}\n      onMouseLeave={() => onHover?.(null)}\n    >\n      {step.state === IStepState.RUNNING ? (\n        <Spinner purpose=\"body-text\" />\n      ) : step.state === IStepState.UNKNOWN ? (\n        <Tooltip\n          // Modifiers are to prevent flickering: https://github.com/palantir/blueprint/issues/4019\n          modifiers={{\n            preventOverflow: {enabled: false},\n            flip: {enabled: false},\n          }}\n          position=\"bottom\"\n          content=\"Unknown step state. Run completed without step execution completion.\"\n        >\n          <StepStatusDot>?</StepStatusDot>\n        </Tooltip>\n      ) : (\n        <StepStatusDot\n          style={{\n            ...boxStyleFor(metadata.steps[name]?.state, {\n              metadata,\n              options: {mode: GanttChartMode.WATERFALL_TIMED},\n            }),\n          }}\n        />\n      )}\n      <StepLabel>{name}</StepLabel>\n      {step.start && <Elapsed>{formatElapsedTime(end - step.start)}</Elapsed>}\n    </StepItemContainer>\n  );\n};\n\nconst StepLabel = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  flex: 1;\n`;\n\nconst StepItemContainer = styled.div<{selected: boolean}>`\n  display: flex;\n  line-height: 32px;\n  height: 32px;\n  padding: 0 14px 0 6px;\n  gap: 6px;\n  align-items: center;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  font-size: 12px;\n  ${({selected}) => selected && `background: ${Colors.Gray100};`}\n\n  &:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n\nexport const StepStatusDot = styled.div`\n  width: 12px;\n  height: 12px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 12px;\n`;\n\nconst Elapsed = styled.div`\n  color: ${Colors.Gray400};\n  font-variant-numeric: tabular-nums;\n`;\n\nconst EmptyNotice = styled.div`\n  height: 32px;\n  font-size: 12px;\n  padding: 8px 24px;\n  color: ${Colors.Gray400};\n`;\n","import {Colors, CursorControlsContainer} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const OptionsContainer = styled.div`\n  min-height: 56px;\n  display: flex;\n  align-items: center;\n  padding: 5px 12px 5px 24px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  background: ${Colors.White};\n  flex-shrink: 0;\n  flex-wrap: wrap;\n  z-index: 3;\n\n  ${CursorControlsContainer} {\n    margin-top: 0;\n    gap: 8px;\n\n    @media (max-width: 1100px) {\n      & .hideable-button-text {\n        display: none;\n      }\n      & div[role='img'] {\n        margin: 0;\n      }\n    }\n  }\n`;\n\nexport const OptionsDivider = styled.div`\n  width: 30px;\n  height: 25px;\n`;\n\nexport const OptionsSpacer = styled.div`\n  width: 30px;\n`;\n","import {gql} from '@apollo/client';\n\nimport {GraphQueryItem} from '../app/GraphQueryImpl';\nimport {IStepMetadata, IStepState} from '../runs/RunMetadataProvider';\nimport {StepKind} from '../types/globalTypes';\n\nimport {invocationsOfPlannedDynamicStep, replacePlannedIndex} from './DynamicStepSupport';\nimport {ExecutionPlanToGraphFragment} from './types/ExecutionPlanToGraphFragment';\n\n/**\n * Converts a Run execution plan into a tree of `GraphQueryItem` items that\n * can be used as the input to the \"solid query\" filtering algorithm or rendered\n * into the Gannt visualization or the SVG DAG visualization. The idea\n * is that this data structure is generic, but it's really a fake solid tree.\n *\n * Pass runtimeStepKeys to duplicate dynamic step sub-trees for each occurrence of\n * the step key found at runtime.\n */\n\nexport const toGraphQueryItems = (\n  plan: ExecutionPlanToGraphFragment,\n  runtimeStepMetadata: {[key: string]: IStepMetadata},\n) => {\n  // Step 1: Find unresolved steps in the initial plan and build a mapping\n  // of their unresolved names to their resolved step keys, eg:\n  // \"multiply_input[*]\" => [\"multiply_input[1]\", \"multiply_input[2]\"]\n  const keyExpansionMap: {[key: string]: string[]} = {};\n  const runtimeStepKeys = Object.keys(runtimeStepMetadata);\n\n  for (const step of plan.steps) {\n    if (step.kind === StepKind.UNRESOLVED_MAPPED) {\n      const keys = invocationsOfPlannedDynamicStep(step.key, runtimeStepKeys);\n\n      // If the upstream steps have NOT succeeded, it's expected that there are zero runtime step keys\n      // matching the dynamic step. Until upstream steps run, we should show the [*] placeholder item\n      // in the runtime graph (rather than just showing nothing.)\n      const invocationsHappened = step.inputs.every((i) =>\n        i.dependsOn.every((s) => IStepState.SUCCEEDED === runtimeStepMetadata[s.key]?.state),\n      );\n      if (!invocationsHappened && keys.length === 0) {\n        keyExpansionMap[step.key] = [step.key];\n        continue;\n      }\n      // The order matters here: add the planned dynamic step at the end, so when displaying the gantt\n      // chart, we can ignore planned dynamic step if any of its invocation exists (i.e. hide the\n      // unresolved node if any resolved node exists).\n      keyExpansionMap[step.key] = [...keys, step.key];\n    }\n  }\n\n  // Step 2: Create a graph node for each resolved step without any inputs or outputs.\n  const nodeTable: {[key: string]: GraphQueryItem} = {};\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] ? keyExpansionMap[step.key] : [step.key];\n    for (const key of stepRuntimeKeys) {\n      nodeTable[key] = {\n        name: key,\n        inputs: [],\n        outputs: [],\n      };\n    }\n  }\n\n  // Step 3: For each step in the original plan, visit each input and create inputs/outputs\n  // in our Gantt Node result set.\n  for (const step of plan.steps) {\n    const stepRuntimeKeys = keyExpansionMap[step.key] ? keyExpansionMap[step.key] : [step.key];\n    for (const key of stepRuntimeKeys) {\n      for (const input of step.inputs) {\n        // Add the input to our node in the result set\n        const nodeInput: GraphQueryItem['inputs'][0] = {dependsOn: []};\n        nodeTable[key].inputs.push(nodeInput);\n\n        // For each upstream step in the plan, map it to upstream nodes in the runtime graph\n        // and attach inputs / outputs to our result graph.\n        for (const upstream of input.dependsOn) {\n          let upstreamKeys = [];\n          if (step.kind === StepKind.UNRESOLVED_COLLECT) {\n            // If we are a collect, there may be N runtime keys fanning in to this input,\n            // fetch the keys if they exist or fall back to the sigle upstream step case.\n            upstreamKeys = keyExpansionMap[upstream.key] || [upstream.key];\n          } else {\n            // If the input was coming from an unresolved mapped step and WE are not a collector,\n            // assume our own dynamic key index applies to the upstream mapped step as well.\n            upstreamKeys = [\n              upstream.kind === StepKind.UNRESOLVED_MAPPED\n                ? replacePlannedIndex(upstream.key, key)\n                : upstream.key,\n            ];\n          }\n\n          for (const upstreamKey of upstreamKeys) {\n            if (!nodeTable[upstreamKey]) {\n              continue;\n            }\n            nodeInput.dependsOn.push({solid: {name: upstreamKey}});\n            let upstreamOutput: GraphQueryItem['outputs'][0] = nodeTable[upstreamKey].outputs[0];\n            if (!upstreamOutput) {\n              upstreamOutput = {dependedBy: []};\n              nodeTable[upstreamKey].outputs.push(upstreamOutput);\n            }\n            upstreamOutput.dependedBy.push({\n              solid: {name: key},\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return Object.values(nodeTable);\n};\n\nexport const EXECUTION_PLAN_TO_GRAPH_FRAGMENT = gql`\n  fragment ExecutionPlanToGraphFragment on ExecutionPlan {\n    steps {\n      key\n      kind\n      inputs {\n        dependsOn {\n          key\n          kind\n        }\n      }\n    }\n  }\n`;\n","import animate from 'amator';\nimport * as React from 'react';\n\nimport {GanttViewport} from './Constants';\n\ntype ContainerRef = {\n  element: HTMLDivElement;\n  __sized: boolean;\n};\n\n/**\n * useViewport is a React hook that exposes a viewport (top/left/width/height)\n * representing the currently visible region of a scrolling contaienr <div>.\n * It uses a ResizeObserver and an onScroll handler to monitor the viewport of the\n * container. To use, spread the returned `containerProps` onto the container div.\n */\nexport const useViewport = (\n  options: {\n    initialOffset?: (el: HTMLElement) => {left: number; top: number};\n  } = {},\n) => {\n  const ref = React.useRef<ContainerRef>();\n  const [offset, setOffset] = React.useState<{left: number; top: number}>({\n    left: 0,\n    top: 0,\n  });\n  const [size, setSize] = React.useState<{width: number; height: number}>({\n    width: 0,\n    height: 0,\n  });\n\n  const {initialOffset} = options;\n\n  // Monitor the container for size changes (if possible, otherwise fall back)\n  // to capturing the initial size only. (Only old FF).\n  const measureRef = React.useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const onApplySize = (next: {width: number; height: number}) => {\n      setSize({width: next.width, height: next.height});\n      const container = ref.current;\n      if (container) {\n        const {element, __sized} = container;\n        if (!__sized && next.width !== 0 && initialOffset) {\n          const targetOffset = initialOffset(element);\n          element.scrollTop = targetOffset.top;\n          element.scrollLeft = targetOffset.left;\n          setOffset(targetOffset);\n          container.__sized = true;\n        }\n      }\n    };\n\n    const container = ref.current;\n    const {element} = container;\n\n    let resizeObserver: any;\n    if (element instanceof HTMLElement) {\n      if ('ResizeObserver' in window) {\n        resizeObserver = new window['ResizeObserver']((entries: any) => {\n          if (entries[0].target === element) {\n            onApplySize({width: element.clientWidth, height: element.clientHeight});\n          }\n        });\n        resizeObserver.observe(element);\n      } else {\n        console.warn(`No ResizeObserver support, or useViewport is attached to a non-DOM node?`);\n        onApplySize({width: element.clientWidth, height: element.clientHeight});\n      }\n    }\n    return () => {\n      resizeObserver?.disconnect();\n    };\n  }, [initialOffset]);\n\n  React.useEffect(measureRef, [measureRef]);\n\n  // Monitor the container for scroll offset changes\n  const animation = React.useRef<any>(null);\n\n  const onScroll = (e: React.UIEvent) => {\n    if (\n      Math.floor(offset.left) === e.currentTarget.scrollLeft &&\n      Math.floor(offset.top) === e.currentTarget.scrollTop\n    ) {\n      return;\n    }\n    if (animation.current) {\n      animation.current.cancel();\n    }\n    setOffset({\n      left: e.currentTarget.scrollLeft,\n      top: e.currentTarget.scrollTop,\n    });\n  };\n\n  const onMoveToViewport = (targetOffset: {left: number; top: number}, animated: boolean) => {\n    const element = ref.current?.element;\n\n    if (!element) {\n      return;\n    }\n\n    const width = element.clientWidth;\n    const height = element.clientHeight;\n\n    if (animation.current) {\n      animation.current.cancel();\n      animation.current = null;\n    }\n\n    targetOffset.left = Math.min(element.scrollWidth - width, Math.max(0, targetOffset.left));\n    targetOffset.top = Math.min(element.scrollHeight - height, Math.max(0, targetOffset.top));\n\n    const onDone = () => {\n      element.scrollTop = targetOffset.top;\n      element.scrollLeft = targetOffset.left;\n      setOffset(targetOffset);\n      animation.current = null;\n    };\n    if (animated) {\n      animation.current = animate(offset, targetOffset, {\n        step: (v: any) => {\n          element.scrollTop = v.top;\n          element.scrollLeft = v.left;\n          setOffset({left: v.left, top: v.top});\n        },\n        done: onDone,\n      });\n    } else {\n      onDone();\n    }\n  };\n\n  // There are scenarios where the exported `container ref` isn't attached to a component immediately\n  // (eg the parent is showing a loading state). This means it may be undefined during our initial render\n  // and we need to measure it when it's actually assigned a value.\n  const setRef = React.useCallback(\n    (el: HTMLDivElement) => {\n      if (el === ref.current?.element) {\n        return;\n      }\n\n      ref.current = {\n        element: el,\n        __sized: false,\n      };\n      measureRef();\n    },\n    [measureRef],\n  );\n\n  return {\n    viewport: {...offset, ...size} as GanttViewport,\n    containerProps: {\n      ref: setRef,\n      onScroll,\n    },\n    onMoveToViewport,\n  };\n};\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {DEFAULT_RESULT_NAME, titleOfIO} from '../app/titleOfIO';\n\nimport {Edge, isHighlighted} from './common';\nimport {\n  OpNodeDefinitionFragment,\n  OpNodeDefinitionFragment_SolidDefinition_inputDefinitions,\n  OpNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n} from './types/OpNodeDefinitionFragment';\nimport {OpNodeInvocationFragment} from './types/OpNodeInvocationFragment';\n\nexport const PARENT_IN = 'PARENT_IN';\nexport const PARENT_OUT = 'PARENT_OUT';\n\ninterface OpIORenderMetadata {\n  edges: Edge[];\n  jumpTargetOp: string | null;\n  title: string;\n}\n\ninterface OpIOBoxProps extends OpIORenderMetadata {\n  colorKey: 'input' | 'output';\n  item:\n    | OpNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | OpNodeDefinitionFragment_SolidDefinition_outputDefinitions;\n  style: React.CSSProperties;\n\n  // Passed through from Solid props\n  minified: boolean;\n  highlightedEdges: Edge[];\n  onDoubleClick: (opName: string) => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nexport const OpIOBox: React.FC<OpIOBoxProps> = ({\n  minified,\n  title,\n  jumpTargetOp,\n  edges,\n  highlightedEdges,\n  colorKey,\n  item,\n  onDoubleClick,\n  onHighlightEdges,\n  style,\n}) => {\n  const {name, type} = item;\n  const highlighted = edges.some((e) => isHighlighted(highlightedEdges, e));\n\n  return (\n    <OpIOContainer\n      title={title}\n      style={{...style, width: 'initial'}}\n      onMouseEnter={() => onHighlightEdges(edges)}\n      onMouseLeave={() => onHighlightEdges([])}\n      onClick={(e) => {\n        jumpTargetOp && onDoubleClick(jumpTargetOp);\n        e.stopPropagation();\n      }}\n      onDoubleClick={(e) => e.stopPropagation()}\n      $colorKey={colorKey}\n      $highlighted={highlighted}\n    >\n      <div>\n        <div className=\"circle\" />\n        {!minified && name !== DEFAULT_RESULT_NAME && <div className=\"label\">{name}</div>}\n        {!minified && type.displayName && <div className=\"type\">{type.displayName}</div>}\n      </div>\n    </OpIOContainer>\n  );\n};\n\nconst OpIOContainer = styled.div<{$colorKey: string; $highlighted: boolean}>`\n  display: block;\n  & > div {\n    display: inline-flex;\n    align-items: center;\n    border-top-right-radius: 6px;\n    border-bottom-right-radius: 6px;\n    background: ${(p) => (p.$highlighted ? 'rgba(255, 255, 255, 1)' : 'rgba(255, 255, 255, 0.75)')};\n    font-size: 12px;\n  }\n  .circle {\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    background: ${(p) => (p.$highlighted ? Colors.Blue500 : Colors.Gray500)};\n    display: inline-block;\n    margin: 6px;\n  }\n  .label {\n    line-height: 26px;\n    font-family: ${FontFamily.monospace};\n    font-weight: 500;\n    height: 26px;\n    padding-left: 2px;\n    padding-right: 6px;\n  }\n  .type {\n    padding: 1px 6px;\n    background: #e7e6f0;\n    margin-right: 4px;\n    color: ${Colors.Blue500};\n    font-family: ${FontFamily.monospace};\n    font-weight: 700;\n    border-radius: 4px;\n  }\n`;\n\nexport function metadataForCompositeParentIO(\n  parentDefinition: OpNodeDefinitionFragment,\n  item:\n    | OpNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | OpNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n): OpIORenderMetadata {\n  const edges: Edge[] = [];\n  let title = `${item.name}: ${item.type.displayName}`;\n\n  if (parentDefinition.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('Parent solid is not a composite - how did this happen?');\n  }\n\n  if (item.__typename === 'InputDefinition') {\n    const others = parentDefinition.inputMappings\n      .filter((i) => i.definition.name === item.name)\n      .map((i) => i.mappedInput);\n\n    title += `\\n\\nConnected to: ${others.map(titleOfIO).join('\\n')}`;\n    edges.push(\n      ...others.map((i) => ({\n        a: `${i.solid.name}:${i.definition.name}`,\n        b: PARENT_IN,\n      })),\n    );\n  }\n  if (item.__typename === 'OutputDefinition') {\n    const others = parentDefinition.outputMappings\n      .filter((i) => i.definition.name === item.name)\n      .map((i) => i.mappedOutput);\n\n    title += `\\n\\nConnected to: ${others.map(titleOfIO).join('\\n')}`;\n    edges.push(\n      ...others.map((i) => ({\n        a: `${i.solid.name}:${i.definition.name}`,\n        b: PARENT_OUT,\n      })),\n    );\n  }\n\n  return {\n    edges,\n    title,\n    jumpTargetOp: edges.length === 1 ? edges[0].a : null,\n  };\n}\n\nexport function metadataForIO(\n  item:\n    | OpNodeDefinitionFragment_SolidDefinition_inputDefinitions\n    | OpNodeDefinitionFragment_SolidDefinition_outputDefinitions,\n  invocation?: OpNodeInvocationFragment,\n): OpIORenderMetadata {\n  const edges: Edge[] = [];\n\n  let title = `${item.name}: ${item.type.displayName}`;\n  let jumpTargetOp: string | null = null;\n\n  if (invocation && item.__typename === 'InputDefinition') {\n    const others = invocation.inputs.find((i) => i.definition.name === item.name)!.dependsOn;\n    if (others.length) {\n      title += `\\n\\nFrom:\\n` + others.map(titleOfIO).join('\\n');\n      jumpTargetOp = others.length === 1 ? others[0].solid.name : null;\n      edges.push(...others.map((o) => ({a: o.solid.name, b: invocation.name})));\n    }\n    edges.push({a: `${invocation.name}:${item.name}`, b: PARENT_IN});\n  }\n  if (invocation && item.__typename === 'OutputDefinition') {\n    const output = invocation.outputs.find((i) => i.definition.name === item.name);\n    if (!output) {\n      throw new Error(\n        `Invocation ${invocation.name} has no output with a definition named \"${item.name}\"`,\n      );\n    }\n\n    const others = output.dependedBy;\n    if (others.length) {\n      title += '\\n\\nUsed By:\\n' + others.map((o) => titleOfIO(o)).join('\\n');\n      jumpTargetOp = others.length === 1 ? others[0].solid.name : null;\n      edges.push(...others.map((o) => ({a: o.solid.name, b: invocation.name})));\n    }\n    edges.push({a: `${invocation.name}:${item.name}`, b: PARENT_OUT});\n  }\n\n  return {edges, title, jumpTargetOp};\n}\n","import {gql} from '@apollo/client';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {withMiddleTruncation} from '../app/Util';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {AssetKey} from '../assets/types';\n\nimport {OpIOBox, metadataForIO} from './OpIOBox';\nimport {OpTags, IOpTag} from './OpTags';\nimport {OpLayout} from './asyncGraphLayout';\nimport {Edge, IBounds} from './common';\nimport {OpNodeDefinitionFragment} from './types/OpNodeDefinitionFragment';\nimport {OpNodeInvocationFragment} from './types/OpNodeInvocationFragment';\n\ninterface IOpNodeProps {\n  layout: OpLayout;\n  invocation?: OpNodeInvocationFragment;\n  definition: OpNodeDefinitionFragment;\n  highlightedEdges: Edge[];\n  minified: boolean;\n  selected: boolean;\n  focused: boolean;\n  dim: boolean;\n  onClick: () => void;\n  onDoubleClick: () => void;\n  onEnterComposite: () => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nconst TOOLTIP_STYLE = JSON.stringify({\n  top: -20,\n  left: 5,\n});\n\nexport class OpNode extends React.Component<IOpNodeProps> {\n  shouldComponentUpdate(prevProps: IOpNodeProps) {\n    if (prevProps.dim !== this.props.dim) {\n      return true;\n    }\n    if (prevProps.selected !== this.props.selected) {\n      return true;\n    }\n    if (prevProps.focused !== this.props.focused) {\n      return true;\n    }\n    if (prevProps.minified !== this.props.minified) {\n      return true;\n    }\n    if (prevProps.highlightedEdges !== this.props.highlightedEdges) {\n      return true;\n    }\n    if (prevProps.layout !== this.props.layout) {\n      return true;\n    }\n    if (\n      (prevProps.invocation && prevProps.invocation.name) !==\n      (this.props.invocation && this.props.invocation.name)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onClick();\n  };\n\n  handleDoubleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onDoubleClick();\n  };\n\n  handleEnterComposite = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onEnterComposite();\n  };\n\n  handleKindClicked = (e: React.MouseEvent) => {\n    this.handleClick(e);\n    window.requestAnimationFrame(() => document.dispatchEvent(new Event('show-kind-info')));\n  };\n\n  public render() {\n    const {definition, invocation, layout, dim, focused, selected, minified} = this.props;\n    const {metadata} = definition;\n    if (!layout) {\n      throw new Error(`Layout is missing for ${definition.name}`);\n    }\n\n    let configField = null;\n    if (definition.__typename === 'SolidDefinition') {\n      configField = definition.configField;\n    }\n\n    const tags: IOpTag[] = [];\n\n    const kind = metadata.find((m) => m.key === 'kind');\n    const composite = definition.__typename === 'CompositeSolidDefinition';\n\n    if (kind) {\n      tags.push({label: kind.value, onClick: this.handleKindClicked});\n    }\n    if (composite) {\n      tags.push({label: 'Expand', onClick: this.handleEnterComposite});\n    }\n\n    const label = invocation ? invocation.name : definition.name;\n\n    return (\n      <NodeContainer\n        $minified={minified}\n        $selected={selected}\n        $secondaryHighlight={focused}\n        $dim={dim}\n        onClick={this.handleClick}\n        onDoubleClick={this.handleDoubleClick}\n      >\n        <div className=\"highlight-box\" style={{...position(layout.bounds)}} />\n        {composite && <div className=\"composite-marker\" style={{...position(layout.op)}} />}\n\n        {invocation?.isDynamicMapped && (\n          <div className=\"dynamic-marker\" style={{...position(layout.op)}} />\n        )}\n\n        {configField && configField.configType.key !== 'Any' && (\n          <div\n            className=\"config-marker\"\n            style={{left: layout.op.x + layout.op.width, top: layout.op.y}}\n          >\n            {minified ? 'C' : 'Config'}\n          </div>\n        )}\n\n        {definition.inputDefinitions.map((item, idx) => (\n          <OpIOBox\n            {...this.props}\n            {...metadataForIO(item, invocation)}\n            key={idx}\n            item={item}\n            style={{...position(layout.inputs[item.name].layout)}}\n            colorKey=\"input\"\n          />\n        ))}\n\n        {definition.outputDefinitions.map((item, idx) => (\n          <OpIOBox\n            {...this.props}\n            {...metadataForIO(item, invocation)}\n            key={idx}\n            item={item}\n            style={{...position(layout.outputs[item.name].layout)}}\n            colorKey=\"output\"\n          />\n        ))}\n\n        <div className=\"node-box\" style={{...position(layout.op)}}>\n          <div className=\"name\">\n            {!minified && <Icon name=\"op\" size={16} />}\n            <div className=\"label\" data-tooltip={label} data-tooltip-style={TOOLTIP_STYLE}>\n              {withMiddleTruncation(label, {maxLength: 48})}\n            </div>\n          </div>\n          {!minified && (definition.description || definition.assetNodes.length === 0) && (\n            <div className=\"description\">{(definition.description || '').split('\\n')[0]}</div>\n          )}\n          {!minified && definition.assetNodes.length > 0 && (\n            <OpNodeAssociatedAssets nodes={definition.assetNodes} />\n          )}\n        </div>\n\n        {tags.length > 0 && (\n          <OpTags\n            style={{\n              left: layout.op.x + layout.op.width,\n              top: layout.op.y + layout.op.height,\n              transform: 'translate(-100%, 3px)',\n            }}\n            minified={minified}\n            tags={tags}\n          />\n        )}\n      </NodeContainer>\n    );\n  }\n}\n\nconst OpNodeAssociatedAssets: React.FC<{nodes: {assetKey: AssetKey}[]}> = ({nodes}) => {\n  const more = nodes.length > 1 ? ` + ${nodes.length - 1} more` : '';\n  return (\n    <div className=\"assets\">\n      <Icon name=\"asset\" size={16} />\n      {withMiddleTruncation(displayNameForAssetKey(nodes[0].assetKey), {\n        maxLength: 48 - more.length,\n      })}\n      {more}\n    </div>\n  );\n};\n\nexport const OP_NODE_INVOCATION_FRAGMENT = gql`\n  fragment OpNodeInvocationFragment on Solid {\n    name\n    isDynamicMapped\n    inputs {\n      definition {\n        name\n      }\n      isDynamicCollect\n      dependsOn {\n        definition {\n          name\n          type {\n            displayName\n          }\n        }\n        solid {\n          name\n        }\n      }\n    }\n    outputs {\n      definition {\n        name\n      }\n      dependedBy {\n        solid {\n          name\n        }\n        definition {\n          name\n          type {\n            displayName\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const OP_NODE_DEFINITION_FRAGMENT = gql`\n  fragment OpNodeDefinitionFragment on ISolidDefinition {\n    __typename\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    assetNodes {\n      id\n      assetKey {\n        path\n      }\n    }\n    inputDefinitions {\n      name\n      type {\n        displayName\n      }\n    }\n    outputDefinitions {\n      name\n      isDynamic\n      type {\n        displayName\n      }\n    }\n    ... on SolidDefinition {\n      configField {\n        configType {\n          key\n          description\n        }\n      }\n    }\n    ... on CompositeSolidDefinition {\n      id\n      inputMappings {\n        definition {\n          name\n        }\n        mappedInput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n      outputMappings {\n        definition {\n          name\n        }\n        mappedOutput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const NodeHighlightColors = {\n  Border: Colors.Blue500,\n  Background: Colors.Blue50,\n};\n\nconst NodeContainer = styled.div<{\n  $minified: boolean;\n  $selected: boolean;\n  $secondaryHighlight: boolean;\n  $dim: boolean;\n}>`\n  opacity: ${({$dim}) => ($dim ? 0.3 : 1)};\n  pointer-events: auto;\n\n  .highlight-box {\n    border-radius: 6px;\n    background: ${(p) => (p.$selected ? NodeHighlightColors.Background : 'transparent')};\n  }\n  .node-box {\n    border: ${(p) =>\n      p.$selected\n        ? `2px dashed ${NodeHighlightColors.Border}`\n        : p.$secondaryHighlight\n        ? `2px solid ${Colors.Blue500}55`\n        : '2px solid #dcd5ca'};\n\n    border-width: ${(p) => (p.$minified ? '3px' : '2px')};\n    border-radius: 5px;\n    background: ${(p) => (p.$minified ? Colors.Gray50 : Colors.White)};\n  }\n  .composite-marker {\n    outline: ${(p) => (p.$minified ? '3px' : '2px')} solid\n      ${(p) => (p.$selected ? 'transparent' : Colors.Yellow200)};\n    outline-offset: ${(p) => (p.$minified ? '5px' : '3px')};\n    border-radius: 3px;\n  }\n  .dynamic-marker {\n    transform: translate(-5px, -5px);\n    border: ${(p) => (p.$minified ? '3px' : '2px')} solid #dcd5ca;\n    border-radius: 3px;\n  }\n  .config-marker {\n    position: absolute;\n    transform: ${(p) => (p.$minified ? ' translate(-100%, -28px)' : ' translate(-100%, -21px)')};\n    font-size: ${(p) => (p.$minified ? '24px' : '12px')};\n    font-family: ${FontFamily.monospace};\n    font-weight: 700;\n    opacity: 0.5;\n  }\n  .name {\n    display: flex;\n    gap: 5px;\n    padding: 4px ${(p) => (p.$minified ? '8px' : '3px')};\n    font-size: ${(p) => (p.$minified ? '32px' : '14px')};\n    font-family: ${FontFamily.monospace};\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    align-items: center;\n    font-weight: 600;\n    .label {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n  .assets {\n    padding: 0 4px;\n    white-space: nowrap;\n    line-height: 22px;\n    height: 22px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: #f5f3ef;\n    font-size: 12px;\n    display: flex;\n    gap: 4px;\n    align-items: center;\n  }\n  .description {\n    padding: 0 8px;\n    white-space: nowrap;\n    line-height: 22px;\n    height: 22px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    background: #f5f3ef;\n    border-top: 1px solid #e6e1d8;\n    border-bottom-left-radius: 5px;\n    border-bottom-right-radius: 5px;\n    font-size: 12px;\n  }\n`;\n\nexport const position = ({x, y, width, height}: IBounds) => ({\n  left: x,\n  top: y,\n  width,\n  height,\n  position: 'absolute' as const,\n});\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport interface IOpTag {\n  label: string;\n  onClick: (e: React.MouseEvent) => void;\n}\n\ninterface IOpTagsProps {\n  style: React.CSSProperties;\n  minified: boolean;\n  tags: IOpTag[];\n}\n\nfunction hueForTag(text = '') {\n  if (text === 'ipynb') {\n    return 25;\n  }\n  if (text === 'dbt') {\n    return 250;\n  }\n  if (text === 'snowflake') {\n    return 197;\n  }\n  if (text === 'pyspark' || text === 'spark') {\n    return 30;\n  }\n  if (text === 'Expand') {\n    return 40;\n  }\n  return (\n    text\n      .split('')\n      .map((c) => c.charCodeAt(0))\n      .reduce((n, a) => n + a) % 360\n  );\n}\n\nexport const OpTags = React.memo(({tags, style, minified}: IOpTagsProps) => {\n  return (\n    <OpTagsContainer style={style} $minified={minified}>\n      {tags.map((tag) => (\n        <div\n          key={tag.label}\n          style={{background: `hsl(${hueForTag(tag.label)}, 75%, 50%)`}}\n          onClick={tag.onClick}\n        >\n          {tag.label}\n        </div>\n      ))}\n    </OpTagsContainer>\n  );\n});\n\nconst OpTagsContainer = styled.div<{$minified: boolean}>`\n  gap: 6px;\n  position: absolute;\n  display: flex;\n\n  & > div {\n    padding: 0 ${(p) => (p.$minified ? 10 : 5)}px;\n    line-height: ${(p) => (p.$minified ? 32 : 20)}px;\n    color: ${Colors.White};\n    font-family: ${FontFamily.monospace};\n    font-size: ${(p) => (p.$minified ? 24 : 14)}px;\n    font-weight: 700;\n    border-radius: 3px;\n  }\n`;\n","import {Box, Colors, Icon, IconWrapper, Slider} from '@dagster-io/ui';\nimport animate from 'amator';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {IBounds} from './common';\n\nexport interface SVGViewportInteractor {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>): void;\n  onWheel(viewport: SVGViewport, event: WheelEvent): void;\n  render?(viewport: SVGViewport): React.ReactElement<any> | null;\n}\n\ninterface SVGViewportProps {\n  graphWidth: number;\n  graphHeight: number;\n  interactor: SVGViewportInteractor;\n  maxZoom: number;\n  maxAutocenterZoom: number;\n  onClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onDoubleClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n  onArrowKeyDown?: (\n    event: React.KeyboardEvent<HTMLDivElement>,\n    dir: 'left' | 'up' | 'right' | 'down',\n  ) => void;\n  children: (\n    state: SVGViewportState,\n    bounds: {top: number; left: number; bottom: number; right: number},\n  ) => React.ReactNode;\n}\n\ninterface SVGViewportState {\n  x: number;\n  y: number;\n  scale: number;\n  minScale: number;\n}\n\ninterface Point {\n  x: number;\n  y: number;\n}\n\nexport const DETAIL_ZOOM = 0.75;\nconst DEFAULT_ZOOM = 0.75;\nconst DEFAULT_MAX_AUTOCENTER_ZOOM = 1;\n\nconst MIN_AUTOCENTER_ZOOM = 0.17;\nconst MIN_ZOOM = 0.17;\nconst BUTTON_INCREMENT = 0.05;\n\nconst PanAndZoomInteractor: SVGViewportInteractor = {\n  onMouseDown(viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>) {\n    if (viewport._animation) {\n      viewport._animation.cancel();\n    }\n\n    if (!viewport.element.current) {\n      return;\n    }\n\n    if (event.target instanceof HTMLElement && event.target.closest('#zoom-slider-container')) {\n      return;\n    }\n\n    const start = viewport.getOffsetXY(event);\n    if (!start) {\n      return;\n    }\n\n    let lastX: number = start.x;\n    let lastY: number = start.y;\n\n    const onMove = (e: MouseEvent) => {\n      const offset = viewport.getOffsetXY(e);\n      if (!offset) {\n        return;\n      }\n\n      const delta = {x: offset.x - lastX, y: offset.y - lastY};\n      viewport.setState({\n        x: viewport.state.x + delta.x,\n        y: viewport.state.y + delta.y,\n      });\n      lastX = offset.x;\n      lastY = offset.y;\n    };\n\n    const onUp = () => {\n      document.removeEventListener('mousemove', onMove);\n      document.removeEventListener('mouseup', onUp);\n    };\n    document.addEventListener('mousemove', onMove);\n    document.addEventListener('mouseup', onUp);\n    event.stopPropagation();\n  },\n\n  onWheel(viewport: SVGViewport, event: WheelEvent) {\n    const cursorPosition = viewport.getOffsetXY(event);\n    if (!cursorPosition) {\n      return;\n    }\n\n    if (event.altKey || event.shiftKey) {\n      viewport.shiftXY(-event.deltaX, -event.deltaY);\n    } else {\n      const targetScale = viewport.state.scale * (1 - event.deltaY * 0.0025);\n      const scale = Math.max(MIN_ZOOM, Math.min(viewport.getMaxZoom(), targetScale));\n      viewport.adjustZoomRelativeToScreenPoint(scale, cursorPosition);\n    }\n  },\n\n  render(viewport: SVGViewport) {\n    return (\n      <ZoomSliderContainer id=\"zoom-slider-container\">\n        <Box margin={{bottom: 8}}>\n          <IconButton\n            onClick={() => {\n              const x = viewport.element.current!.clientWidth / 2;\n              const y = viewport.element.current!.clientHeight / 2;\n              const scale = Math.min(\n                viewport.getMaxZoom(),\n                viewport.state.scale + BUTTON_INCREMENT,\n              );\n              const adjusted = Math.round((scale + Number.EPSILON) * 100) / 100;\n              viewport.adjustZoomRelativeToScreenPoint(adjusted, {x, y});\n            }}\n          >\n            <Icon size={24} name=\"zoom_in\" color={Colors.Gray300} />\n          </IconButton>\n        </Box>\n        <Slider\n          vertical\n          min={MIN_ZOOM}\n          max={viewport.getMaxZoom()}\n          stepSize={0.001}\n          value={viewport.state.scale}\n          labelRenderer={false}\n          onChange={(scale: number) => {\n            const x = viewport.element.current!.clientWidth / 2;\n            const y = viewport.element.current!.clientHeight / 2;\n            viewport.adjustZoomRelativeToScreenPoint(scale, {x, y});\n          }}\n        />\n        <Box margin={{top: 8}}>\n          <IconButton\n            onClick={() => {\n              const x = viewport.element.current!.clientWidth / 2;\n              const y = viewport.element.current!.clientHeight / 2;\n              const scale = Math.max(MIN_ZOOM, viewport.state.scale - BUTTON_INCREMENT);\n              viewport.adjustZoomRelativeToScreenPoint(scale, {x, y});\n            }}\n          >\n            <Icon size={24} name=\"zoom_out\" color={Colors.Gray300} />\n          </IconButton>\n        </Box>\n      </ZoomSliderContainer>\n    );\n  },\n};\n\nconst IconButton = styled.button`\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  position: relative;\n  left: -4px;\n\n  :focus {\n    outline: none;\n  }\n\n  ${IconWrapper} {\n    transition: background 100ms;\n  }\n\n  :focus ${IconWrapper}, :hover ${IconWrapper}, :active ${IconWrapper} {\n    background-color: ${Colors.Blue500};\n  }\n`;\n\nconst NoneInteractor: SVGViewportInteractor = {\n  onMouseDown(_viewport: SVGViewport, event: React.MouseEvent<HTMLDivElement>) {\n    event.preventDefault();\n    event.stopPropagation();\n  },\n\n  onWheel() {\n    return;\n  },\n\n  render() {\n    return <span />;\n  },\n};\n\nexport class SVGViewport extends React.Component<SVGViewportProps, SVGViewportState> {\n  static Interactors = {\n    PanAndZoom: PanAndZoomInteractor,\n    None: NoneInteractor,\n  };\n\n  static defaultProps = {\n    maxZoom: DEFAULT_ZOOM,\n    maxAutocenterZoom: DEFAULT_MAX_AUTOCENTER_ZOOM,\n  };\n\n  element: React.RefObject<HTMLDivElement> = React.createRef();\n  panzoom: any;\n\n  _animation: any = null;\n  _lastWheelTime = 0;\n  _lastWheelDir = 0;\n\n  state = {\n    x: 0,\n    y: 0,\n    scale: DETAIL_ZOOM,\n    minScale: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.autocenter();\n\n    // The wheel event cannot be prevented via the `onWheel` handler.\n    document.addEventListener('wheel', this.onWheel, {passive: false});\n\n    // The op/asset graphs clip rendered nodes to the visible region, so changes to the\n    // size of the viewport need to cause re-renders. Otherwise you expand the window\n    // and see nothing in the newly visible areas.\n    if (\n      this.element.current &&\n      this.element.current instanceof HTMLElement &&\n      'ResizeObserver' in window\n    ) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO(() => {\n        window.requestAnimationFrame(() => {\n          this.forceUpdate();\n        });\n      });\n      this.resizeObserver.observe(this.element.current);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('wheel', this.onWheel);\n    this.resizeObserver?.disconnect();\n  }\n\n  onWheel = (e: WheelEvent) => {\n    const container = this.element.current;\n    // If the wheel event occurs within our SVG container, prevent it from zooming\n    // the document, and handle it with the interactor.\n    if (container && e.target instanceof Node && container.contains(e.target)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.interactor.onWheel(this, e);\n    }\n  };\n\n  cancelAnimations() {\n    if (this._animation) {\n      this._animation.cancel();\n    }\n  }\n\n  focus() {\n    this.element.current?.focus();\n  }\n\n  autocenter(animate = false, scale?: number) {\n    const el = this.element.current!;\n    const ownerRect = {width: el.clientWidth, height: el.clientHeight};\n\n    const dw = ownerRect.width / this.props.graphWidth;\n    const dh = ownerRect.height / this.props.graphHeight;\n    const desiredScale = Math.min(dw, dh);\n    const boundedScale =\n      scale || Math.max(Math.min(desiredScale, this.props.maxAutocenterZoom), MIN_AUTOCENTER_ZOOM);\n\n    if (\n      this.state.scale < boundedScale &&\n      desiredScale !== boundedScale &&\n      boundedScale === MIN_AUTOCENTER_ZOOM\n    ) {\n      // If the user is zoomed out past where they're going to land, AND where they're going to land\n      // is not a view of the entire DAG but instead a view of some zoomed section, autocentering is\n      // undesirable and should do nothing.\n      return;\n    }\n    const target = {\n      x: -(this.props.graphWidth / 2) * boundedScale + ownerRect.width / 2,\n      y: -(this.props.graphHeight / 2) * boundedScale + ownerRect.height / 2,\n      scale: boundedScale,\n    };\n\n    if (animate) {\n      this.smoothZoom(target);\n    } else {\n      this.setState(Object.assign(target, {minScale: boundedScale}));\n    }\n  }\n\n  screenToSVGCoords({x, y}: Point): Point {\n    const el = this.element.current!;\n    const {width, height} = el.getBoundingClientRect();\n    return {\n      x: (-(this.state.x - width / 2) + x - width / 2) / this.state.scale,\n      y: (-(this.state.y - height / 2) + y - height / 2) / this.state.scale,\n    };\n  }\n\n  getOffsetXY(e: MouseEvent | React.MouseEvent): Point | null {\n    const el = this.element.current;\n    if (!el) {\n      return null;\n    }\n    const ownerRect = el.getBoundingClientRect();\n    return {x: e.clientX - ownerRect.left, y: e.clientY - ownerRect.top};\n  }\n\n  public shiftXY(dx: number, dy: number) {\n    const {x, y, scale} = this.state;\n    this.setState({x: x + dx, y: y + dy, scale});\n  }\n\n  public adjustZoomRelativeToScreenPoint(nextScale: number, point: Point) {\n    const centerSVGCoord = this.screenToSVGCoords(point);\n    const {scale} = this.state;\n    let {x, y} = this.state;\n    x = x + (centerSVGCoord.x * scale - centerSVGCoord.x * nextScale);\n    y = y + (centerSVGCoord.y * scale - centerSVGCoord.y * nextScale);\n    this.setState({x, y, scale: nextScale});\n  }\n\n  public zoomToSVGBox(box: IBounds, animate: boolean, newScale = this.state.scale) {\n    this.zoomToSVGCoords(box.x + box.width / 2, box.y + box.height / 2, animate, newScale);\n  }\n\n  public zoomToSVGCoords(x: number, y: number, animate: boolean, scale = this.state.scale) {\n    const el = this.element.current!;\n    const ownerRect = el.getBoundingClientRect();\n    x = -x * scale + ownerRect.width / 2;\n    y = -y * scale + ownerRect.height / 2;\n\n    if (animate) {\n      this.smoothZoom({x, y, scale});\n    } else {\n      this.setState({x, y, scale});\n    }\n  }\n\n  public smoothZoom(to: {x: number; y: number; scale: number}) {\n    const from = {scale: this.state.scale, x: this.state.x, y: this.state.y};\n\n    if (this._animation) {\n      this._animation.cancel();\n    }\n\n    this._animation = animate(from, to, {\n      step: (v: any) => {\n        this.setState({\n          x: v.x,\n          y: v.y,\n          scale: v.scale,\n        });\n      },\n      done: () => {\n        this.setState(to);\n        this._animation = null;\n      },\n    });\n  }\n\n  public getMaxZoom() {\n    return this.props.maxZoom;\n  }\n\n  public getViewport() {\n    let viewport = {top: 0, left: 0, right: 0, bottom: 0};\n    if (this.element.current) {\n      const el = this.element.current!;\n      const {width, height} = el.getBoundingClientRect();\n      viewport = {\n        left: -this.state.x / this.state.scale,\n        top: -this.state.y / this.state.scale,\n        right: (-this.state.x + width) / this.state.scale,\n        bottom: (-this.state.y + height) / this.state.scale,\n      };\n    }\n    return viewport;\n  }\n\n  onZoomAndCenter = (event: React.MouseEvent<HTMLDivElement>) => {\n    const offsetXY = this.getOffsetXY(event);\n    if (!offsetXY) {\n      return;\n    }\n    const offset = this.screenToSVGCoords(offsetXY);\n    const maxZoom = this.props.maxZoom || DEFAULT_ZOOM;\n\n    if (Math.abs(maxZoom - this.state.scale) < 0.01) {\n      this.zoomToSVGCoords(offset.x, offset.y, true, this.state.minScale);\n    } else {\n      this.zoomToSVGCoords(offset.x, offset.y, true, maxZoom);\n    }\n  };\n\n  onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.target && (e.target as HTMLElement).nodeName === 'INPUT') {\n      return;\n    }\n\n    const dir = ({\n      ArrowLeft: 'left',\n      ArrowUp: 'up',\n      ArrowRight: 'right',\n      ArrowDown: 'down',\n    } as const)[e.code];\n    if (!dir) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onArrowKeyDown?.(e, dir);\n  };\n\n  onDoubleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    // Don't allow double-click events on the zoom slider to trigger this.\n    if (event.target instanceof HTMLElement && event.target.closest('#zoom-slider-container')) {\n      return;\n    }\n    this.props.onDoubleClick && this.props.onDoubleClick(event);\n  };\n\n  render() {\n    const {children, onClick, interactor} = this.props;\n    const {x, y, scale} = this.state;\n    const dotsize = Math.max(14, 30 * scale);\n\n    return (\n      <div\n        ref={this.element}\n        style={Object.assign({}, SVGViewportStyles, {\n          backgroundPosition: `${x}px ${y}px`,\n          backgroundSize: `${dotsize}px`,\n        })}\n        onMouseDown={(e) => interactor.onMouseDown(this, e)}\n        onDoubleClick={this.onDoubleClick}\n        onKeyDown={this.onKeyDown}\n        onClick={onClick}\n        tabIndex={-1}\n      >\n        <div\n          style={{\n            transformOrigin: `top left`,\n            transform: `matrix(${scale}, 0, 0, ${scale}, ${x}, ${y})`,\n          }}\n        >\n          {children(this.state, this.getViewport())}\n        </div>\n        {interactor.render && interactor.render(this)}\n      </div>\n    );\n  }\n}\n\n/*\nBG: Not using styled-components here because I need a `ref` to an actual DOM element.\nStyled-component with a ref returns a React component we need to findDOMNode to use.\n*/\nconst SVGViewportStyles: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n  overflow: 'hidden',\n  userSelect: 'none',\n  outline: 'none',\n  background: `url(\"data:image/svg+xml;utf8,<svg width='30px' height='30px' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'><circle fill='rgba(236, 236, 236, 1)' cx='5' cy='5' r='5' /></svg>\") repeat`,\n};\n\nconst ZoomSliderContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  width: 30px;\n  padding: 10px 8px;\n  background: rgba(245, 248, 250, 0.4);\n`;\n","import * as dagre from 'dagre';\n\nimport {titleOfIO} from '../app/titleOfIO';\n\nimport {IBounds, IPoint} from './common';\n\ntype OpLayoutEdgeSide = {\n  point: IPoint;\n  opName: string;\n  edgeName: string;\n};\n\nexport type OpLayoutEdge = {\n  from: OpLayoutEdgeSide;\n  to: OpLayoutEdgeSide;\n};\n\nexport interface OpLayout {\n  // Overall frame of the box relative to 0,0 on the graph\n  bounds: IBounds;\n\n  // Frames of specific components - These need to be computed during layout\n  // (rather than at render time) to position edges into inputs/outputs.\n  op: IBounds;\n  inputs: {\n    [inputName: string]: {\n      layout: IBounds;\n      port: IPoint;\n    };\n  };\n  outputs: {\n    [outputName: string]: {\n      layout: IBounds;\n      port: IPoint;\n    };\n  };\n}\n\nexport type OpGraphLayout = {\n  width: number;\n  height: number;\n  parent: ParentOpLayout | null;\n  edges: OpLayoutEdge[];\n  nodes: {[opName: string]: OpLayout};\n};\n\ninterface ParentOpLayout extends Omit<OpLayout, 'op'> {\n  mappingLeftEdge: number;\n  mappingLeftSpacing: number;\n  dependsOn: {[opName: string]: IPoint};\n  dependedBy: {[opName: string]: IPoint};\n  invocationBoundingBox: IBounds;\n}\n\nexport interface ILayoutOp {\n  name: string;\n  inputs: {\n    definition: {\n      name: string;\n    };\n    dependsOn: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n  definition: {\n    description: string | null;\n    assetNodes: {\n      assetKey: {\n        path: string[];\n      };\n    }[];\n  };\n  outputs: {\n    definition: {\n      name: string;\n    };\n    dependedBy: {\n      definition: {\n        name: string;\n      };\n      solid: {\n        name: string;\n      };\n    }[];\n  }[];\n}\n\nconst OP_WIDTH = 370;\nconst OP_BASE_HEIGHT = 52;\nconst OP_ASSETS_ROW_HEIGHT = 22;\nconst IO_HEIGHT = 26;\nconst IO_INSET = 0;\nconst IO_MINI_WIDTH = 35;\nconst IO_THRESHOLD_FOR_MINI = 4;\nconst PORT_INSET_X = 13;\nconst PORT_INSET_Y = IO_HEIGHT / 2;\nconst PARENT_DEFINITION_PADDING = 70;\nconst PARENT_INVOCATION_PADDING = 70;\nconst EXTERNAL_DEPENDENCY_PADDING = 50;\n\nconst MARGIN_BASE = 100;\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nfunction flattenIO(arrays: OpLinkInfo[][]) {\n  const map: {[key: string]: OpLinkInfo} = {};\n  arrays.forEach((array) => array.forEach((item) => (map[titleOfIO(item)] = item)));\n  return Object.values(map);\n}\n\nexport function layoutOpGraph(pipelineOps: ILayoutOp[], parentOp?: ILayoutOp): OpGraphLayout {\n  const g = new dagre.graphlib.Graph();\n\n  // First, identify how much space we need to pad the DAG by in order to show the\n  // parent op AROUND it. We pass this padding in to dagre, and then we have enough\n  // room to add our parent layout around the result.\n  let parentIOPadding = 0;\n  let marginy = MARGIN_BASE;\n  let marginx = MARGIN_BASE;\n  if (parentOp) {\n    parentIOPadding = Math.max(parentOp.inputs.length, parentOp.outputs.length) * IO_HEIGHT;\n    marginx = PARENT_DEFINITION_PADDING + PARENT_INVOCATION_PADDING;\n    marginy = marginx + parentIOPadding;\n  }\n\n  // Define a new top-down, left to right graph layout\n  g.setGraph({rankdir: 'TB', marginx, marginy});\n  g.setDefaultEdgeLabel(() => ({}));\n\n  const edges: OpLayoutEdge[] = [];\n  const opNamesPresent: {[name: string]: boolean} = {};\n\n  pipelineOps.forEach((op) => {\n    opNamesPresent[op.name] = true;\n  });\n  pipelineOps.forEach((op) => {\n    // Lay out each op individually to get it's width and height based on it's\n    // inputs and outputs, and then attach it to the graph. Dagre will give us it's\n    // x,y position.\n    const layout = layoutOp(op, {x: 0, y: 0});\n    g.setNode(op.name, {\n      width: layout.bounds.width,\n      height: layout.bounds.height,\n    });\n\n    // Give Dagre the dependency edges and build a flat set of them so we\n    // can reference them in a single pass later\n    op.inputs.forEach((input) => {\n      input.dependsOn.forEach((dep) => {\n        if (opNamesPresent[dep.solid.name] && opNamesPresent[op.name]) {\n          g.setEdge({v: dep.solid.name, w: op.name}, {weight: 1});\n\n          edges.push({\n            from: {\n              point: {x: 0, y: 0},\n              opName: dep.solid.name,\n              edgeName: dep.definition.name,\n            },\n            to: {\n              point: {x: 0, y: 0},\n              opName: op.name,\n              edgeName: input.definition.name,\n            },\n          });\n        }\n      });\n    });\n  });\n\n  dagre.layout(g);\n\n  const ops: {[opName: string]: OpLayout} = {};\n  const dagreNodes: {[opName: string]: dagre.Node} = {};\n  g.nodes().forEach(function (opName) {\n    const node = g.node(opName);\n    if (!node) {\n      return;\n    }\n    dagreNodes[opName] = node;\n  });\n\n  // Due to a bug in Dagre when run without an \"align\" value, we need to calculate\n  // the total width of the graph coordinate space ourselves. We need the height\n  // because we've shifted long single rows into multiple rows.\n  let maxWidth = 0;\n  let maxHeight = 0;\n\n  // Read the Dagre layout and map \"nodes\" back to our solids, but with\n  // X,Y coordinates this time.\n  Object.keys(dagreNodes).forEach((opName) => {\n    const node = dagreNodes[opName];\n    const op = pipelineOps.find(({name}) => name === opName);\n    if (!op) {\n      return;\n    }\n\n    const x = node.x - node.width / 2; // Dagre's x/y is the center, we want top left\n    const y = node.y - node.height / 2;\n    ops[opName] = layoutOp(op, {x, y});\n    maxWidth = Math.max(maxWidth, x + node.width);\n    maxHeight = Math.max(maxHeight, y + node.height);\n  });\n\n  // Read the Dagre layout and map \"edges\" back to our data model. We don't\n  // currently use the \"closest points on the node\" Dagre suggests (but we could).\n  g.edges().forEach(function (e) {\n    const conn = edges.find((c) => c.from.opName === e.v && c.to.opName === e.w);\n    const points = g.edge(e).points;\n    if (conn) {\n      conn.from.point = points[0];\n      conn.to.point = points[points.length - 1];\n    }\n  });\n\n  const result: OpGraphLayout = {\n    edges,\n    nodes: ops,\n    width: maxWidth + marginx,\n    height: maxHeight + marginy,\n    parent: null,\n  };\n\n  if (parentOp) {\n    // Now that we've computed the pipeline layout fully, lay out the\n    // composite op around the completed DAG.\n    result.parent = layoutParentGraphOp(result, parentOp, parentIOPadding);\n  }\n\n  return result;\n}\n\nfunction layoutParentGraphOp(layout: OpGraphLayout, op: ILayoutOp, parentIOPadding: number) {\n  const result: ParentOpLayout = {\n    invocationBoundingBox: {\n      x: 1,\n      y: 1,\n      width: layout.width - 1,\n      height: layout.height - 1,\n    },\n    bounds: {\n      x: PARENT_INVOCATION_PADDING,\n      y: PARENT_INVOCATION_PADDING + parentIOPadding,\n      width: layout.width - PARENT_INVOCATION_PADDING * 2,\n      height: layout.height - (PARENT_INVOCATION_PADDING + parentIOPadding) * 2,\n    },\n    mappingLeftEdge: PARENT_INVOCATION_PADDING - 20,\n    mappingLeftSpacing: 10,\n    inputs: {},\n    outputs: {},\n    dependsOn: layoutExternalConnections(\n      flattenIO(op.inputs.map((d) => d.dependsOn)),\n      -EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n    dependedBy: layoutExternalConnections(\n      flattenIO(op.outputs.map((d) => d.dependedBy)),\n      layout.height + EXTERNAL_DEPENDENCY_PADDING,\n      layout.width,\n    ),\n  };\n\n  const boundingBottom = result.bounds.y + result.bounds.height;\n\n  op.inputs.forEach((input, idx) => {\n    result.inputs[input.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: result.bounds.y - idx * IO_HEIGHT - IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  op.outputs.forEach((output, idx) => {\n    result.outputs[output.definition.name] = {\n      layout: {\n        x: result.bounds.x,\n        y: boundingBottom + idx * IO_HEIGHT,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n      port: {\n        x: result.bounds.x + PORT_INSET_X,\n        y: boundingBottom + idx * IO_HEIGHT + IO_HEIGHT / 2,\n      },\n    };\n  });\n\n  return result;\n}\n\nfunction layoutExternalConnections(links: OpLinkInfo[], y: number, layoutWidth: number) {\n  // fill evenly from 0 to layoutWidth from left to right, then center them if there's overflow.\n  const inset = PARENT_INVOCATION_PADDING + PORT_INSET_X;\n  const insetWidth = layoutWidth - inset * 2;\n  const spacing = Math.max(200, insetWidth / links.length);\n  const baseX = inset + Math.min(0, (insetWidth - links.length * spacing) / 2);\n  const yShift = spacing < 300 ? 20 : 0;\n\n  const result: {[opName: string]: IPoint} = {};\n  links.forEach((link, idx) => {\n    const shiftDirection = 1 - (idx % 2) * 2; // 1 or -1, alternating\n    result[titleOfIO(link)] = {\n      x: baseX + idx * spacing,\n      y: y + yShift * shiftDirection,\n    };\n  });\n  return result;\n}\n\nexport function layoutOp(op: ILayoutOp, root: IPoint): OpLayout {\n  // Starting at the root (top left) X,Y, return the layout information for a solid with\n  // input blocks, then the main block, then output blocks (arranged vertically)\n  let accY = root.y;\n\n  const inputsLayouts: {\n    [inputName: string]: {layout: IBounds; port: IPoint};\n  } = {};\n\n  const buildIOSmallLayout = (idx: number, count: number) => {\n    const centeringOffsetX = (OP_WIDTH - IO_MINI_WIDTH * count) / 2;\n    const x = root.x + IO_MINI_WIDTH * idx + centeringOffsetX;\n    return {\n      port: {\n        x: x + PORT_INSET_X,\n        y: accY + PORT_INSET_Y,\n      },\n      layout: {\n        x,\n        y: accY,\n        width: IO_MINI_WIDTH,\n        height: IO_HEIGHT,\n      },\n    };\n  };\n\n  const buildIOLayout = () => {\n    const layout: {layout: IBounds; port: IPoint} = {\n      port: {x: root.x + PORT_INSET_X, y: accY + PORT_INSET_Y},\n      layout: {\n        x: root.x,\n        y: accY,\n        width: 0,\n        height: IO_HEIGHT,\n      },\n    };\n    accY += IO_HEIGHT;\n    return layout;\n  };\n\n  op.inputs.forEach((input, idx) => {\n    inputsLayouts[input.definition.name] =\n      op.inputs.length > IO_THRESHOLD_FOR_MINI\n        ? buildIOSmallLayout(idx, op.inputs.length)\n        : buildIOLayout();\n  });\n  if (op.inputs.length > IO_THRESHOLD_FOR_MINI) {\n    accY += IO_HEIGHT;\n  }\n\n  const opLayout: IBounds = {\n    x: root.x,\n    y: Math.max(root.y, accY - IO_INSET),\n    width: OP_WIDTH,\n    height: OP_BASE_HEIGHT + IO_INSET * 2,\n  };\n\n  accY += OP_BASE_HEIGHT;\n\n  if (op.definition.assetNodes.length && op.definition.description) {\n    opLayout.height += OP_ASSETS_ROW_HEIGHT;\n    accY += OP_ASSETS_ROW_HEIGHT;\n  }\n\n  const outputLayouts: {\n    [outputName: string]: {\n      layout: IBounds;\n      port: IPoint;\n    };\n  } = {};\n\n  op.outputs.forEach((output, idx) => {\n    outputLayouts[output.definition.name] =\n      op.outputs.length > IO_THRESHOLD_FOR_MINI\n        ? buildIOSmallLayout(idx, op.outputs.length)\n        : buildIOLayout();\n  });\n  if (op.outputs.length > IO_THRESHOLD_FOR_MINI) {\n    accY += IO_HEIGHT;\n  }\n\n  return {\n    bounds: {\n      x: root.x - 5,\n      y: root.y - 5,\n      width: OP_WIDTH + 10,\n      height: accY - root.y + 10,\n    },\n    op: opLayout,\n    inputs: inputsLayouts,\n    outputs: outputLayouts,\n  };\n}\n","import memoize from 'lodash/memoize';\nimport React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {asyncMemoize} from '../app/Util';\nimport {GraphData} from '../asset-graph/Utils';\nimport {AssetGraphLayout, layoutAssetGraph} from '../asset-graph/layout';\n\nimport {ILayoutOp, layoutOpGraph, OpGraphLayout} from './layout';\n\nconst ASYNC_LAYOUT_SOLID_COUNT = 50;\n\n// Op Graph\n\nconst _opLayoutCacheKey = (ops: ILayoutOp[], parentOp?: ILayoutOp) => {\n  const solidKey = ops.map((x) => x.name).join('|');\n  const parentKey = parentOp?.name;\n  return `${solidKey}:${parentKey}`;\n};\n\nexport const getFullOpLayout = memoize(layoutOpGraph, _opLayoutCacheKey);\n\nexport const asyncGetFullOpLayout = asyncMemoize(\n  (ops: ILayoutOp[], parentOp?: ILayoutOp, staticPathRoot?: string) => {\n    return new Promise<OpGraphLayout>((resolve) => {\n      const worker = new Worker(new URL('../workers/dagre_layout.worker', import.meta.url));\n      worker.addEventListener('message', (event) => {\n        resolve(event.data);\n        worker.terminate();\n      });\n      worker.postMessage({type: 'layoutOpGraph', ops, parentOp, staticPathRoot});\n    });\n  },\n  _opLayoutCacheKey,\n);\n\n// Asset Graph\n\nconst _assetLayoutCacheKey = (graphData: GraphData) => {\n  // Note: The \"show secondary edges\" toggle means that we need a cache key that incorporates\n  // both the displayed nodes and the displayed edges.\n  return JSON.stringify(graphData);\n};\n\nexport const getFullAssetLayout = memoize(layoutAssetGraph, _assetLayoutCacheKey);\n\nexport const asyncGetFullAssetLayout = asyncMemoize(\n  (graphData: GraphData, staticPathRoot?: string) => {\n    return new Promise<AssetGraphLayout>((resolve) => {\n      const worker = new Worker(new URL('../workers/dagre_layout.worker', import.meta.url));\n      worker.addEventListener('message', (event) => {\n        resolve(event.data);\n        worker.terminate();\n      });\n      worker.postMessage({type: 'layoutAssetGraph', graphData, staticPathRoot});\n    });\n  },\n  _assetLayoutCacheKey,\n);\n\n// Helper Hooks:\n// - Automatically switch between sync and async loading strategies\n// - Re-layout when the cache key function returns a different value\n\ntype State = {\n  loading: boolean;\n  layout: OpGraphLayout | AssetGraphLayout | null;\n  cacheKey: string;\n};\n\ntype Action =\n  | {type: 'loading'}\n  | {type: 'layout'; payload: {layout: OpGraphLayout | AssetGraphLayout; cacheKey: string}};\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'loading':\n      return {loading: true, layout: null, cacheKey: ''};\n    case 'layout':\n      return {\n        loading: false,\n        layout: action.payload.layout,\n        cacheKey: action.payload.cacheKey,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState: State = {\n  loading: false,\n  layout: null,\n  cacheKey: '',\n};\n\n/**\n * Todo: It would be nice to merge these hooks into one, passing the sync + async layout methods in as args.\n * I tried but felt like the complexity wasn't worth the code savings. The key problem is that the layout\n * functions take different args and a generic solution loses the types.\n */\n\nexport function useOpLayout(ops: ILayoutOp[], parentOp?: ILayoutOp) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {staticPathRoot} = React.useContext(AppContext);\n\n  const cacheKey = _opLayoutCacheKey(ops, parentOp);\n  const runAsync = ops.length >= ASYNC_LAYOUT_SOLID_COUNT;\n\n  React.useEffect(() => {\n    async function runAsyncLayout() {\n      dispatch({type: 'loading'});\n      const layout = await asyncGetFullOpLayout(ops, parentOp, staticPathRoot);\n      dispatch({\n        type: 'layout',\n        payload: {layout, cacheKey},\n      });\n    }\n\n    if (!runAsync) {\n      const layout = getFullOpLayout(ops, parentOp);\n      dispatch({type: 'layout', payload: {layout, cacheKey}});\n    } else {\n      void runAsyncLayout();\n    }\n  }, [cacheKey, ops, parentOp, runAsync, staticPathRoot]);\n\n  return {\n    loading: state.loading || !state.layout || state.cacheKey !== cacheKey,\n    async: runAsync,\n    layout: state.layout as OpGraphLayout | null,\n  };\n}\n\nexport function useAssetLayout(graphData: GraphData) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const {staticPathRoot} = React.useContext(AppContext);\n\n  const cacheKey = _assetLayoutCacheKey(graphData);\n  const nodeCount = Object.keys(graphData.nodes).length;\n  const runAsync = nodeCount >= ASYNC_LAYOUT_SOLID_COUNT;\n\n  React.useEffect(() => {\n    async function runAsyncLayout() {\n      dispatch({type: 'loading'});\n      const layout = await asyncGetFullAssetLayout(graphData, staticPathRoot);\n      dispatch({\n        type: 'layout',\n        payload: {layout, cacheKey},\n      });\n    }\n\n    if (!runAsync) {\n      const layout = getFullAssetLayout(graphData);\n      dispatch({type: 'layout', payload: {layout, cacheKey}});\n    } else {\n      void runAsyncLayout();\n    }\n  }, [cacheKey, graphData, runAsync, staticPathRoot]);\n\n  return {\n    loading: state.loading || !state.layout || state.cacheKey !== cacheKey,\n    async: runAsync,\n    layout: state.layout as AssetGraphLayout | null,\n  };\n}\n\nexport {layoutOp} from './layout';\nexport type {OpGraphLayout, OpLayout, OpLayoutEdge} from './layout';\n","import {AssetGraphLayout, AssetLayout} from '../asset-graph/layout';\n\nimport {OpGraphLayout, OpLayout} from './layout';\n\nexport type Edge = {a: string; b: string};\n\nexport type IBounds = {\n  x: number;\n  y: number;\n  height: number;\n  width: number;\n};\n\nexport type IPoint = {\n  x: number;\n  y: number;\n};\n\nexport const isHighlighted = (edges: Edge[], {a, b}: Edge) =>\n  edges.some((h) => (h.a === a && h.b === b) || (h.b === a && h.a === b));\n\nexport const isOpHighlighted = (edges: Edge[], name: string) =>\n  edges.some((h) => h.a.split(':')[0] === name || h.b.split(':')[0] === name);\n\nexport const isNodeOffscreen = (\n  layoutNode: {x: number; y: number; width: number; height: number},\n  viewportRect: {top: number; left: number; right: number; bottom: number},\n) => {\n  return (\n    layoutNode.x + layoutNode.width < viewportRect.left ||\n    layoutNode.y + layoutNode.height < viewportRect.top ||\n    layoutNode.x > viewportRect.right ||\n    layoutNode.y > viewportRect.bottom\n  );\n};\n\nexport const closestNodeInDirection = (\n  layout: OpGraphLayout | AssetGraphLayout,\n  selectedNodeKey: string | undefined,\n  dir: string,\n): string | undefined => {\n  if (!selectedNodeKey) {\n    return;\n  }\n\n  const current = layout.nodes[selectedNodeKey];\n  const center = (op: OpLayout | AssetLayout): {x: number; y: number} => ({\n    x: op.bounds.x + op.bounds.width / 2,\n    y: op.bounds.y + op.bounds.height / 2,\n  });\n\n  /* Sort all the ops in the graph based on their attractiveness\n    as a jump target. We want the nearest node in the exact same row for left/right,\n    and the visually \"closest\" node above/below for up/down. */\n  const score = (op: OpLayout | AssetLayout): number => {\n    const dx = center(op).x - center(current).x;\n    const dy = center(op).y - center(current).y;\n\n    if (dir === 'left' && dy === 0 && dx < 0) {\n      return -dx;\n    }\n    if (dir === 'right' && dy === 0 && dx > 0) {\n      return dx;\n    }\n    if (dir === 'up' && dy < 0) {\n      return -dy + Math.abs(dx) / 5;\n    }\n    if (dir === 'down' && dy > 0) {\n      return dy + Math.abs(dx) / 5;\n    }\n    return Number.NaN;\n  };\n\n  const closest = Object.keys(layout.nodes)\n    .map((name) => ({name, score: score(layout.nodes[name])}))\n    .filter((e) => e.name !== selectedNodeKey && !Number.isNaN(e.score))\n    .sort((a, b) => b.score - a.score)\n    .pop();\n\n  return closest ? closest.name : undefined;\n};\n\n/**\n * Identifies groups of ops that share a similar `prefix.` and returns\n * an array of bounding boxes and common prefixes. Used to render lightweight\n * outlines around flattened composites.\n */\nexport function computeNodeKeyPrefixBoundingBoxes(layout: OpGraphLayout) {\n  const groups: {[base: string]: IBounds[]} = {};\n  let maxDepth = 0;\n\n  for (const key of Object.keys(layout.nodes)) {\n    const parts = key.split('.');\n    if (parts.length === 1) {\n      continue;\n    }\n    for (let ii = 1; ii < parts.length; ii++) {\n      const base = parts.slice(0, ii).join('.');\n      groups[base] = groups[base] || [];\n      groups[base].push(layout.nodes[key].bounds);\n      maxDepth = Math.max(maxDepth, ii);\n    }\n  }\n\n  const boxes: (IBounds & {name: string})[] = [];\n  for (const base of Object.keys(groups)) {\n    const group = groups[base];\n    const depth = base.split('.').length;\n    const margin = 5 + (maxDepth - depth) * 5;\n\n    if (group.length === 1) {\n      continue;\n    }\n    const x1 = Math.min(...group.map((l) => l.x)) - margin;\n    const x2 = Math.max(...group.map((l) => l.x + l.width)) + margin;\n    const y1 = Math.min(...group.map((l) => l.y)) - margin;\n    const y2 = Math.max(...group.map((l) => l.y + l.height)) + margin;\n    boxes.push({name: base, x: x1, y: y1, width: x2 - x1, height: y2 - y1});\n  }\n\n  return boxes;\n}\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n","import isEqual from 'lodash/isEqual';\nimport qs from 'qs';\nimport React from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\n\ntype QueryPersistedDataType =\n  | {[key: string]: any}\n  | Array<any>\n  | (string | undefined | number)\n  | (boolean | undefined)\n  | null;\n\nlet currentQueryString: {[key: string]: any} = {};\n\nexport type QueryPersistedStateConfig<T extends QueryPersistedDataType> = {\n  queryKey?: string;\n  defaults?: {[key: string]: any};\n  decode?: (raw: {[key: string]: any}) => T;\n  encode?: (raw: T) => {[key: string]: any};\n};\n\n/**\n * This goal of this hook is to make it easy to replace `React.useState` with a version\n * that persists the value to the page querystring so it is saved across page reload, etc.\n * Hopefully by making it easy, we'll do this often and improve overall UX.\n *\n * Examples:\n *\n * // Single (string | undefined) key saved to querystring with default value applied inline\n *\n * const [search = '', setSearch] = useQueryPersistedState({queryKey: 'q'})\n *\n * // Object saved to querystring with default values pre-filled\n * // Note: String and boolean values are automatically encoded / decoded, see below for others\n *\n * const [query, setQuery] = useQueryPersistedState<{cursor: string, filter: string}>({\n *   defaults: {cursor: '', filter: ''},\n * })\n *\n * // Custom transformer mapping to / from querystring representation (for our filter tokens)\n * // Note: `setIdeas` will be a different function on every render unless you memoize the options\n * // passed to the hook! Pull the encode/decode functions out into a file constant or use React.useRef\n *\n * const [ideas, setIdeas] = useQueryPersistedState<string[]>({\n *   encode: (ideas) => ({q: ideas.join(',')}),\n *   decode: ({q}) => (q || '').split(','),\n * })\n *\n * Note: if you combine encode/decode with defaults, the defaults are applied to the query\n * string BEFORE decoding.\n */\nexport function useQueryPersistedState<T extends QueryPersistedDataType>(\n  options: QueryPersistedStateConfig<T>,\n): [T, (updates: T) => void] {\n  const {queryKey, defaults} = options;\n  let {encode, decode} = options;\n\n  if (queryKey) {\n    // Just a short-hand way of providing encode/decode that go from qs object => string\n    if (!encode) {\n      encode = (raw: T) => ({[queryKey]: raw});\n    }\n    if (!decode) {\n      decode = (qs: {[key: string]: any}) => inferTypeOfQueryParam<T>(qs[queryKey]);\n    }\n  }\n\n  const location = useLocation();\n  const history = useHistory();\n\n  // We stash the query string into a ref so that the setter can operate on the /current/\n  // location even if the user retains it and calls it after other query string changes.\n  currentQueryString = qs.parse(location.search, {ignoreQueryPrefix: true});\n\n  const qsWithDefaults = {...(defaults || {}), ...currentQueryString};\n\n  // Note: If you have provided defaults and no encoder/decoder, the `value` exposed by\n  // useQueryPersistedState only includes those keys so other params don't leak into your value.\n  const qsDecoded = decode ? decode(qsWithDefaults) : inferTypeOfQueryParams<T>(qsWithDefaults);\n\n  // If `decode` yields a non-primitive type (eg: object or array), by default we yield\n  // an object with a new identity on every render. To prevent possible render loops caused by\n  // our value as a useEffect dependency, etc., we re-use the last yielded object if it isEqual.\n  const valueRef = React.useRef<T>(qsDecoded);\n  const onChangeRef = React.useCallback<(updated: T) => void>(\n    (updated: T) => {\n      const next = {\n        ...currentQueryString,\n        ...(encode ? encode(updated) : (updated as {[key: string]: any})),\n      };\n\n      // omit any keys that are equal to the defaults to keep URLs minimal\n      for (const [key, value] of Object.entries(next)) {\n        if (options.defaults && options.defaults[key] === value) {\n          delete next[key];\n        }\n      }\n\n      currentQueryString = next;\n      history.replace(`${location.pathname}?${qs.stringify(next, {arrayFormat: 'brackets'})}`);\n    },\n    [history, encode, location.pathname, options],\n  );\n\n  if (!isEqual(valueRef.current, qsDecoded)) {\n    valueRef.current = qsDecoded;\n  }\n  return [valueRef.current, onChangeRef];\n}\n\nfunction inferTypeOfQueryParam<T>(q: any): T {\n  return q === 'false' ? false : q === 'true' ? true : q;\n}\n\nfunction inferTypeOfQueryParams<T>(qs: {[key: string]: any}) {\n  const result: {[key: string]: any} = {};\n  for (const key of Object.keys(qs)) {\n    result[key] = inferTypeOfQueryParam<any>(qs[key]);\n  }\n  return result as T;\n}\n","import React from 'react';\n\ntype State = {\n  checkedIds: Set<string>;\n  lastCheckedId: string | null;\n};\n\ntype Action =\n  | {type: 'toggle-one'; payload: {checked: boolean; id: string}}\n  | {\n      type: 'toggle-slice';\n      payload: {checked: boolean; id: string; allIds: string[]};\n    }\n  | {type: 'toggle-all'; payload: {checked: boolean; allIds: string[]}};\n\nconst reducer = (state: State, action: Action): State => {\n  const copy = new Set(Array.from(state.checkedIds));\n  switch (action.type) {\n    case 'toggle-one': {\n      const {checked, id} = action.payload;\n      checked ? copy.add(id) : copy.delete(id);\n      return {lastCheckedId: id, checkedIds: copy};\n    }\n\n    case 'toggle-slice': {\n      const {checked, id, allIds} = action.payload;\n      const {lastCheckedId} = state;\n\n      const indexOfLast = lastCheckedId ? allIds.indexOf(lastCheckedId) : -1;\n      const indexOfChecked = allIds.indexOf(id);\n      if (indexOfLast === -1 || indexOfChecked === -1) {\n        return state;\n      }\n\n      const [start, end] = [indexOfLast, indexOfChecked].sort();\n      for (let ii = start; ii <= end; ii++) {\n        checked ? copy.add(allIds[ii]) : copy.delete(allIds[ii]);\n      }\n\n      return {\n        lastCheckedId: id,\n        checkedIds: copy,\n      };\n    }\n\n    case 'toggle-all': {\n      const {checked, allIds} = action.payload;\n      return {\n        lastCheckedId: null,\n        checkedIds: checked ? new Set(allIds) : new Set(),\n      };\n    }\n  }\n};\n\nconst initialState: State = {\n  checkedIds: new Set(),\n  lastCheckedId: null,\n};\n\nexport function useSelectionReducer(allIds: string[]) {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const onToggleFactory = (id: string) => (values: {checked: boolean; shiftKey: boolean}) => {\n    const {checked, shiftKey} = values;\n    if (shiftKey && state.lastCheckedId) {\n      dispatch({type: 'toggle-slice', payload: {checked, id, allIds}});\n    } else {\n      dispatch({type: 'toggle-one', payload: {checked, id}});\n    }\n  };\n\n  const onToggleAll = (checked: boolean) => {\n    dispatch({type: 'toggle-all', payload: {checked, allIds}});\n  };\n\n  return [state, {onToggleFactory, onToggleAll}] as const;\n}\n","import {Button, DialogBody, DialogFooter, Dialog} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {BackfillTableFragment} from './types/BackfillTableFragment';\n\ninterface Props {\n  backfill?: BackfillTableFragment;\n  onClose: () => void;\n}\nexport const BackfillPartitionsRequestedDialog = ({backfill, onClose}: Props) => {\n  if (!backfill) {\n    return null;\n  }\n  if (!backfill.partitionSet) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      isOpen={!!backfill}\n      title={\n        <span>\n          Partitions requested for backfill:{' '}\n          <span style={{fontFamily: 'monospace'}}>{backfill.backfillId}</span>\n        </span>\n      }\n      onClose={onClose}\n    >\n      <DialogBody>\n        <div style={{maxHeight: '80vh', overflowY: 'auto'}}>\n          {backfill.partitionNames.map((partitionName: string) => (\n            <div key={partitionName}>{partitionName}</div>\n          ))}\n        </div>\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"none\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n","import {Button, DialogBody, DialogFooter, Dialog} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PartitionStepStatus} from '../partitions/PartitionStepStatus';\nimport {usePartitionStepQuery} from '../partitions/usePartitionStepQuery';\nimport {RunFilterToken} from '../runs/RunsFilterInput';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {RepoAddress} from '../workspace/types';\n\nimport {\n  BackfillTableFragment,\n  BackfillTableFragment_partitionSet,\n} from './types/BackfillTableFragment';\n\ninterface Props {\n  backfill?: BackfillTableFragment;\n  onClose: () => void;\n}\nexport const BackfillStepStatusDialog = ({backfill, onClose}: Props) => {\n  if (!backfill) {\n    return null;\n  }\n  if (!backfill.partitionSet) {\n    return null;\n  }\n  const repoAddress = buildRepoAddress(\n    backfill.partitionSet.repositoryOrigin.repositoryName,\n    backfill.partitionSet.repositoryOrigin.repositoryLocationName,\n  );\n  return (\n    <BackfillStepStatusDialogContent\n      backfill={backfill}\n      partitionSet={backfill.partitionSet}\n      repoAddress={repoAddress}\n      onClose={onClose}\n    />\n  );\n};\n\ninterface ContentProps {\n  backfill: BackfillTableFragment;\n  partitionSet: BackfillTableFragment_partitionSet;\n  repoAddress: RepoAddress;\n  onClose: () => void;\n}\n\nexport const BackfillStepStatusDialogContent = ({\n  backfill,\n  partitionSet,\n  repoAddress,\n  onClose,\n}: ContentProps) => {\n  const [pageSize, setPageSize] = React.useState(60);\n  const [offset, setOffset] = React.useState<number>(0);\n  const runsFilter = React.useMemo(() => {\n    const token: RunFilterToken = {token: 'tag', value: `dagster/backfill=${backfill.backfillId}`};\n    return [token];\n  }, [backfill.backfillId]);\n  const partitions = usePartitionStepQuery(\n    partitionSet.name,\n    backfill.partitionNames,\n    pageSize,\n    runsFilter,\n    partitionSet.pipelineName,\n    offset,\n    !backfill,\n  );\n\n  if (!backfill) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      isOpen={!!backfill}\n      title={\n        <span>\n          Step status for backfill:{' '}\n          <span style={{fontFamily: 'monospace'}}>{backfill.backfillId}</span>\n        </span>\n      }\n      onClose={onClose}\n      style={{width: '80vw'}}\n    >\n      <DialogBody>\n        <PartitionStepStatus\n          partitionNames={backfill.partitionNames}\n          partitions={partitions}\n          pipelineName={partitionSet?.pipelineName}\n          repoAddress={repoAddress}\n          setPageSize={setPageSize}\n          offset={offset}\n          setOffset={setOffset}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button intent=\"none\" onClick={onClose}>\n          Close\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useMutation} from '@apollo/client';\nimport {Button, DialogBody, DialogFooter, Dialog} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {TerminationDialog} from '../runs/TerminationDialog';\nimport {BulkActionStatus} from '../types/globalTypes';\n\nimport {CancelBackfill, CancelBackfillVariables} from './types/CancelBackfill';\nimport {InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results} from './types/InstanceBackfillsQuery';\n\ntype Backfill = InstanceBackfillsQuery_partitionBackfillsOrError_PartitionBackfills_results;\n\ninterface Props {\n  backfill?: Backfill;\n  onClose: () => void;\n  onComplete: () => void;\n}\nexport const BackfillTerminationDialog = ({backfill, onClose, onComplete}: Props) => {\n  const [cancelBackfill] = useMutation<CancelBackfill, CancelBackfillVariables>(\n    CANCEL_BACKFILL_MUTATION,\n  );\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  if (!backfill) {\n    return null;\n  }\n  const numUnscheduled = (backfill.numPartitions || 0) - (backfill.numRequested || 0);\n  const unfinishedRuns = backfill.unfinishedRuns;\n\n  const unfinishedMap = unfinishedRuns?.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const cancel = async () => {\n    setIsSubmitting(true);\n    await cancelBackfill({variables: {backfillId: backfill.backfillId}});\n    onComplete();\n    setIsSubmitting(false);\n  };\n\n  return (\n    <>\n      <Dialog\n        isOpen={!!backfill && backfill.status !== BulkActionStatus.CANCELED && !!numUnscheduled}\n        title=\"Cancel backfill\"\n        onClose={onClose}\n      >\n        <DialogBody>\n          There {numUnscheduled === 1 ? 'is 1 partition ' : `are ${numUnscheduled} partitions `}\n          yet to be queued or launched.\n        </DialogBody>\n        <DialogFooter>\n          <Button intent=\"none\" onClick={onClose}>\n            Close\n          </Button>\n          {isSubmitting ? (\n            <Button intent=\"danger\" disabled>\n              Canceling...\n            </Button>\n          ) : (\n            <Button intent=\"danger\" onClick={cancel}>\n              Cancel backfill\n            </Button>\n          )}\n        </DialogFooter>\n      </Dialog>\n      <TerminationDialog\n        isOpen={\n          !!backfill &&\n          (!numUnscheduled || backfill.status !== 'REQUESTED') &&\n          !!unfinishedRuns.length\n        }\n        onClose={onClose}\n        onComplete={onComplete}\n        selectedRuns={unfinishedMap}\n      />\n    </>\n  );\n};\n\nconst CANCEL_BACKFILL_MUTATION = gql`\n  mutation CancelBackfill($backfillId: String!) {\n    cancelPartitionBackfill(backfillId: $backfillId) {\n      __typename\n      ... on CancelBackfillSuccess {\n        backfillId\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, useMutation} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  Table,\n  Tag,\n  Mono,\n  stringFromValue,\n} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {useHistory, Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {SharedToaster} from '../app/DomUtils';\nimport {usePermissions} from '../app/Permissions';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {PartitionStatus} from '../partitions/PartitionStatus';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {\n  doneStatuses,\n  failedStatuses,\n  inProgressStatuses,\n  queuedStatuses,\n  successStatuses,\n} from '../runs/RunStatuses';\nimport {DagsterTag} from '../runs/RunTag';\nimport {runsPathWithFilters} from '../runs/RunsFilterInput';\nimport {TerminationDialog} from '../runs/TerminationDialog';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {BulkActionStatus, RunStatus} from '../types/globalTypes';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {repoAddressAsString} from '../workspace/repoAddressAsString';\nimport {workspacePathFromAddress, workspacePipelinePath} from '../workspace/workspacePath';\n\nimport {BackfillPartitionsRequestedDialog} from './BackfillPartitionsRequestedDialog';\nimport {BackfillStepStatusDialog} from './BackfillStepStatusDialog';\nimport {BackfillTerminationDialog} from './BackfillTerminationDialog';\nimport {RESUME_BACKFILL_MUTATION} from './BackfillUtils';\nimport {\n  BackfillTableFragment,\n  BackfillTableFragment_runs,\n  BackfillTableFragment_partitionSet,\n} from './types/BackfillTableFragment';\nimport {resumeBackfill, resumeBackfillVariables} from './types/resumeBackfill';\n\ntype BackfillRun = BackfillTableFragment_runs;\n\nexport const BackfillTable = ({\n  showPartitionSet = true,\n  allPartitions,\n  backfills,\n  refetch,\n}: {\n  allPartitions?: string[];\n  backfills: BackfillTableFragment[];\n  refetch: () => void;\n  showPartitionSet?: boolean;\n}) => {\n  const [terminationBackfill, setTerminationBackfill] = React.useState<BackfillTableFragment>();\n  const [stepStatusBackfill, setStepStatusBackfill] = React.useState<BackfillTableFragment>();\n  const [\n    partitionsRequestedBackfill,\n    setPartitionsRequestedBackfill,\n  ] = React.useState<BackfillTableFragment>();\n  const [resumeBackfill] = useMutation<resumeBackfill, resumeBackfillVariables>(\n    RESUME_BACKFILL_MUTATION,\n  );\n  const [cancelRunBackfill, setCancelRunBackfill] = React.useState<BackfillTableFragment>();\n  const {canCancelPartitionBackfill} = usePermissions();\n\n  const candidateId = terminationBackfill?.backfillId;\n\n  React.useEffect(() => {\n    if (canCancelPartitionBackfill && candidateId) {\n      const [backfill] = backfills.filter((backfill) => backfill.backfillId === candidateId);\n      setTerminationBackfill(backfill);\n    }\n  }, [backfills, candidateId, canCancelPartitionBackfill]);\n\n  const resume = async (backfill: BackfillTableFragment) => {\n    const {data} = await resumeBackfill({variables: {backfillId: backfill.backfillId}});\n    if (data && data.resumePartitionBackfill.__typename === 'ResumeBackfillSuccess') {\n      refetch();\n    } else if (data && data.resumePartitionBackfill.__typename === 'UnauthorizedError') {\n      SharedToaster.show({\n        message: (\n          <Group direction=\"column\" spacing={4}>\n            <div>\n              Attempted to retry the backfill in read-only mode. This backfill was not retried.\n            </div>\n          </Group>\n        ),\n        icon: 'error',\n        intent: 'danger',\n      });\n    } else if (data && data.resumePartitionBackfill.__typename === 'PythonError') {\n      const error = data.resumePartitionBackfill;\n      SharedToaster.show({\n        message: <div>An unexpected error occurred. This backfill was not retried.</div>,\n        icon: 'error',\n        intent: 'danger',\n        action: {\n          text: 'View error',\n          onClick: () =>\n            showCustomAlert({\n              body: <PythonErrorInfo error={error} />,\n            }),\n        },\n      });\n    }\n  };\n\n  const unfinishedRuns = cancelRunBackfill?.unfinishedRuns;\n  const unfinishedMap =\n    unfinishedRuns?.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {}) || {};\n\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th style={{width: 120}}>Backfill Id</th>\n            <th style={{width: 200}}>Created</th>\n            {showPartitionSet ? <th>Partition Set</th> : null}\n            {allPartitions ? <th>Requested</th> : null}\n            <th style={{textAlign: 'right', width: 200}}>Backfill Status</th>\n            <th>Run Status</th>\n            <th style={{width: 80}} />\n          </tr>\n        </thead>\n        <tbody>\n          {backfills.map((backfill: BackfillTableFragment) => (\n            <BackfillRow\n              key={backfill.backfillId}\n              showPartitionSet={showPartitionSet}\n              backfill={backfill}\n              allPartitions={allPartitions}\n              onTerminateBackfill={setTerminationBackfill}\n              onResumeBackfill={resume}\n              onShowStepStatus={setStepStatusBackfill}\n              onShowPartitionsRequested={setPartitionsRequestedBackfill}\n            />\n          ))}\n        </tbody>\n      </Table>\n      <BackfillStepStatusDialog\n        backfill={stepStatusBackfill}\n        onClose={() => setStepStatusBackfill(undefined)}\n      />\n      <BackfillPartitionsRequestedDialog\n        backfill={partitionsRequestedBackfill}\n        onClose={() => setPartitionsRequestedBackfill(undefined)}\n      />\n      <BackfillTerminationDialog\n        backfill={terminationBackfill}\n        onClose={() => setTerminationBackfill(undefined)}\n        onComplete={() => refetch()}\n      />\n      <TerminationDialog\n        isOpen={!!unfinishedRuns?.length}\n        onClose={() => setCancelRunBackfill(undefined)}\n        onComplete={() => refetch()}\n        selectedRuns={unfinishedMap}\n      />\n    </>\n  );\n};\n\nconst BackfillRow = ({\n  backfill,\n  allPartitions,\n  showPartitionSet,\n  onTerminateBackfill,\n  onResumeBackfill,\n  onShowStepStatus,\n  onShowPartitionsRequested,\n}: {\n  backfill: BackfillTableFragment;\n  allPartitions?: string[];\n  onTerminateBackfill: (backfill: BackfillTableFragment) => void;\n  onResumeBackfill: (backfill: BackfillTableFragment) => void;\n  showPartitionSet: boolean;\n  onShowStepStatus: (backfill: BackfillTableFragment) => void;\n  onShowPartitionsRequested: (backfill: BackfillTableFragment) => void;\n}) => {\n  const history = useHistory();\n  const {canCancelPartitionBackfill, canLaunchPartitionBackfill} = usePermissions();\n  const counts = React.useMemo(() => getProgressCounts(backfill), [backfill]);\n  const runsUrl = runsPathWithFilters([\n    {\n      token: 'tag',\n      value: `dagster/backfill=${backfill.backfillId}`,\n    },\n  ]);\n\n  const repoAddress = backfill.partitionSet\n    ? buildRepoAddress(\n        backfill.partitionSet.repositoryOrigin.repositoryName,\n        backfill.partitionSet.repositoryOrigin.repositoryLocationName,\n      )\n    : null;\n  const repo = useRepository(repoAddress);\n  const isJob = !!(\n    repo &&\n    backfill.partitionSet &&\n    isThisThingAJob(repo, backfill.partitionSet.pipelineName)\n  );\n\n  const partitionSetBackfillUrl = backfill.partitionSet\n    ? workspacePipelinePath({\n        repoName: backfill.partitionSet.repositoryOrigin.repositoryName,\n        repoLocation: backfill.partitionSet.repositoryOrigin.repositoryLocationName,\n        pipelineName: backfill.partitionSet.pipelineName,\n        path: `/partitions?${qs.stringify({\n          partitionSet: backfill.partitionSet.name,\n          q: [stringFromValue([{token: 'tag', value: `dagster/backfill=${backfill.backfillId}`}])],\n        })}`,\n        isJob,\n      })\n    : null;\n\n  const canCancel = backfill.runs.some((run) => run.canTerminate);\n\n  return (\n    <tr>\n      <td style={{width: 120}}>\n        <Mono>\n          {partitionSetBackfillUrl ? (\n            <Link to={partitionSetBackfillUrl}>{backfill.backfillId}</Link>\n          ) : (\n            backfill.backfillId\n          )}\n        </Mono>\n      </td>\n      <td style={{width: 240}}>\n        {backfill.timestamp ? <TimestampDisplay timestamp={backfill.timestamp} /> : '-'}\n      </td>\n      {showPartitionSet ? (\n        <td>\n          {backfill.partitionSet ? (\n            <PartitionSetReference partitionSet={backfill.partitionSet} />\n          ) : (\n            backfill.partitionSetName\n          )}\n        </td>\n      ) : null}\n      {allPartitions ? (\n        <td style={{width: 300}}>\n          <BackfillRequested\n            allPartitions={allPartitions}\n            backfill={backfill}\n            onExpand={() => onShowPartitionsRequested(backfill)}\n          />\n        </td>\n      ) : null}\n      <td style={{textAlign: 'right', width: 200}}>\n        <BackfillStatus backfill={backfill} />\n      </td>\n      <td>\n        <BackfillRunStatus backfill={backfill} history={history} />\n      </td>\n      <td>\n        <Popover\n          content={\n            <Menu>\n              {canCancelPartitionBackfill ? (\n                <>\n                  {counts.numUnscheduled && backfill.status === BulkActionStatus.REQUESTED ? (\n                    <MenuItem\n                      text=\"Cancel backfill submission\"\n                      icon=\"cancel\"\n                      intent=\"danger\"\n                      onClick={() => onTerminateBackfill(backfill)}\n                    />\n                  ) : null}\n                  {canCancel ? (\n                    <MenuItem\n                      text=\"Terminate unfinished runs\"\n                      icon=\"cancel\"\n                      intent=\"danger\"\n                      onClick={() => onTerminateBackfill(backfill)}\n                    />\n                  ) : null}\n                </>\n              ) : null}\n              {canLaunchPartitionBackfill &&\n              backfill.status === BulkActionStatus.FAILED &&\n              backfill.partitionSet ? (\n                <MenuItem\n                  text=\"Resume failed backfill\"\n                  title=\"Submits runs for all partitions in the backfill that do not have a corresponding run. Does not retry failed runs.\"\n                  icon=\"refresh\"\n                  onClick={() => onResumeBackfill(backfill)}\n                />\n              ) : null}\n              <MenuItem\n                text=\"View Backfill Runs\"\n                icon=\"settings_backup_restore\"\n                onClick={() => history.push(runsUrl)}\n              />\n              <MenuItem\n                text=\"View Step Status\"\n                icon=\"view_list\"\n                onClick={() => {\n                  onShowStepStatus(backfill);\n                }}\n              />\n            </Menu>\n          }\n          position=\"bottom-right\"\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </td>\n    </tr>\n  );\n};\n\nconst BackfillRequested = ({\n  allPartitions,\n  backfill,\n  onExpand,\n}: {\n  allPartitions: string[];\n  backfill: BackfillTableFragment;\n  onExpand: () => void;\n}) => {\n  const partitionData = {};\n  backfill.partitionNames.forEach((partitionName) => {\n    // kind of a hack, but set status here to get the coloring we want\n    partitionData[partitionName] = RunStatus.QUEUED;\n  });\n  return (\n    <Box flex={{direction: 'column', gap: 8}}>\n      <div>\n        <TagButton onClick={onExpand}>\n          <Tag intent=\"primary\" interactive>\n            {backfill.partitionNames.length} partitions\n          </Tag>\n        </TagButton>\n      </div>\n      <PartitionStatus\n        partitionNames={allPartitions}\n        partitionData={partitionData}\n        small\n        hideStatusTooltip\n      />\n    </Box>\n  );\n};\n\nconst BackfillStatus = ({backfill}: {backfill: BackfillTableFragment}) => {\n  switch (backfill.status) {\n    case BulkActionStatus.REQUESTED:\n      return <Tag>Requested</Tag>;\n    case BulkActionStatus.CANCELED:\n    case BulkActionStatus.FAILED:\n      return (\n        <Box margin={{bottom: 12}}>\n          <TagButton\n            onClick={() =>\n              backfill.error &&\n              showCustomAlert({title: 'Error', body: <PythonErrorInfo error={backfill.error} />})\n            }\n          >\n            <Tag intent=\"danger\">{backfill.status === 'FAILED' ? 'Failed' : 'Canceled'}</Tag>\n          </TagButton>\n        </Box>\n      );\n    case BulkActionStatus.COMPLETED:\n      const runStatuses = backfill.runs.map((run) => run.status);\n      const isDone = runStatuses.every((status) => doneStatuses.has(status));\n      if (!isDone) {\n        return <Tag intent=\"primary\">In progress</Tag>;\n      }\n      if (\n        runStatuses.filter((status) => successStatuses.has(status)).length ===\n        backfill.partitionNames.length\n      ) {\n        return <Tag intent=\"success\">Completed</Tag>;\n      }\n      return <Tag intent=\"warning\">Incomplete</Tag>;\n  }\n};\n\nconst BackfillRunStatus = ({\n  backfill,\n  history,\n}: {\n  backfill: BackfillTableFragment;\n  history: any;\n}) => {\n  const partitionData = {};\n  const partitionRun = {};\n  backfill.runs.forEach((run) => {\n    run.tags.forEach((tag) => {\n      if (tag.key === DagsterTag.Partition) {\n        partitionData[tag.value] = run.status;\n        partitionRun[tag.value] = run;\n      }\n    });\n  });\n\n  return (\n    <PartitionStatus\n      partitionNames={backfill.partitionNames}\n      partitionData={partitionData}\n      splitPartitions={true}\n      onClick={(partitionName) => {\n        if (partitionRun[partitionName]) {\n          history.push(`/instance/runs/${partitionRun[partitionName].id}`);\n        }\n      }}\n    />\n  );\n};\n\nconst PartitionSetReference: React.FC<{\n  partitionSet: BackfillTableFragment_partitionSet;\n}> = ({partitionSet}) => {\n  const repoAddress = buildRepoAddress(\n    partitionSet.repositoryOrigin.repositoryName,\n    partitionSet.repositoryOrigin.repositoryLocationName,\n  );\n  const repo = useRepository(repoAddress);\n  const isJob = !!(repo && isThisThingAJob(repo, partitionSet.pipelineName));\n\n  return (\n    <Box flex={{direction: 'column', gap: 8}}>\n      <Link\n        to={workspacePipelinePath({\n          repoName: partitionSet.repositoryOrigin.repositoryName,\n          repoLocation: partitionSet.repositoryOrigin.repositoryLocationName,\n          pipelineName: partitionSet.pipelineName,\n          isJob,\n          path: `/partitions?partitionSet=${encodeURIComponent(partitionSet.name)}`,\n        })}\n      >\n        {partitionSet.name}\n      </Link>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        <Icon name=\"repo\" color={Colors.Gray400} />\n        <Link to={workspacePathFromAddress(repoAddress)}>{repoAddressAsString(repoAddress)}</Link>\n      </Box>\n      <PipelineReference\n        showIcon\n        size=\"small\"\n        pipelineName={partitionSet.pipelineName}\n        pipelineHrefContext={{\n          name: partitionSet.repositoryOrigin.repositoryName,\n          location: partitionSet.repositoryOrigin.repositoryLocationName,\n        }}\n        isJob={isJob}\n      />\n    </Box>\n  );\n};\n\nconst getProgressCounts = (backfill: BackfillTableFragment) => {\n  const byPartitionRuns: {[key: string]: BackfillRun} = {};\n  backfill.runs.forEach((run) => {\n    const [runPartitionName] = run.tags\n      .filter((tag) => tag.key === DagsterTag.Partition)\n      .map((tag) => tag.value);\n\n    if (runPartitionName && !byPartitionRuns[runPartitionName]) {\n      byPartitionRuns[runPartitionName] = run;\n    }\n  });\n\n  const latestPartitionRuns = Object.values(byPartitionRuns);\n  const {numQueued, numInProgress, numSucceeded, numFailed} = latestPartitionRuns.reduce(\n    (accum: any, {status}: {status: RunStatus}) => {\n      return {\n        numQueued: accum.numQueued + (queuedStatuses.has(status) ? 1 : 0),\n        numInProgress: accum.numInProgress + (inProgressStatuses.has(status) ? 1 : 0),\n        numSucceeded: accum.numSucceeded + (successStatuses.has(status) ? 1 : 0),\n        numFailed: accum.numFailed + (failedStatuses.has(status) ? 1 : 0),\n      };\n    },\n    {numQueued: 0, numInProgress: 0, numSucceeded: 0, numFailed: 0},\n  );\n\n  const numTotal = backfill.partitionNames.length;\n\n  return {\n    numQueued,\n    numInProgress,\n    numSucceeded,\n    numFailed,\n    numUnscheduled: numTotal - backfill.numRequested,\n    numSkipped: backfill.numRequested - latestPartitionRuns.length,\n    numTotal,\n  };\n};\n\nconst TagButton = styled.button`\n  border: none;\n  background: none;\n  cursor: pointer;\n  padding: 0;\n  margin: 0;\n\n  :focus {\n    outline: none;\n  }\n`;\n\nexport const BACKFILL_TABLE_FRAGMENT = gql`\n  fragment BackfillTableFragment on PartitionBackfill {\n    backfillId\n    status\n    backfillStatus\n    numRequested\n    partitionNames\n    numPartitions\n    partitionRunStats {\n      numQueued\n      numInProgress\n      numSucceeded\n      numFailed\n      numPartitionsWithRuns\n      numTotalRuns\n    }\n    runs {\n      id\n      canTerminate\n      status\n      tags {\n        key\n        value\n      }\n    }\n    unfinishedRuns {\n      id\n      canTerminate\n    }\n    timestamp\n    partitionSetName\n    partitionSet {\n      id\n      name\n      mode\n      pipelineName\n      repositoryOrigin {\n        id\n        repositoryName\n        repositoryLocationName\n      }\n    }\n    error {\n      ...PythonErrorFragment\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\n\nexport const RESUME_BACKFILL_MUTATION = gql`\n  mutation resumeBackfill($backfillId: String!) {\n    resumePartitionBackfill(backfillId: $backfillId) {\n      __typename\n      ... on ResumeBackfillSuccess {\n        backfillId\n      }\n      ... on UnauthorizedError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const LAUNCH_PARTITION_BACKFILL_MUTATION = gql`\n  mutation LaunchPartitionBackfill($backfillParams: LaunchBackfillParams!) {\n    launchPartitionBackfill(backfillParams: $backfillParams) {\n      __typename\n      ... on LaunchBackfillSuccess {\n        backfillId\n      }\n      ... on PartitionSetNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n      ... on InvalidStepError {\n        invalidStepKey\n      }\n      ... on InvalidOutputError {\n        stepKey\n        invalidOutputName\n      }\n      ... on UnauthorizedError {\n        message\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on RunConflict {\n        message\n      }\n      ... on ConflictingExecutionParamsError {\n        message\n      }\n      ... on PresetNotFoundError {\n        message\n      }\n      ... on RunConfigValidationInvalid {\n        pipelineName\n        errors {\n          __typename\n          message\n          path\n          reason\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Colors, CaptionMono} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\nimport {StepEventStatus} from '../types/globalTypes';\n\nimport {\n  StepSummaryForRunQuery,\n  StepSummaryForRunQueryVariables,\n} from './types/StepSummaryForRunQuery';\n\ninterface Props {\n  runId: string;\n}\n\nexport const StepSummaryForRun = (props: Props) => {\n  const {runId} = props;\n  const {data} = useQuery<StepSummaryForRunQuery, StepSummaryForRunQueryVariables>(\n    STEP_SUMMARY_FOR_RUN_QUERY,\n    {variables: {runId}},\n  );\n\n  const run = data?.pipelineRunOrError;\n  const status = run?.__typename === 'Run' ? run.status : null;\n\n  const relevantSteps = React.useMemo(() => {\n    if (run?.__typename !== 'Run') {\n      return [];\n    }\n\n    const {status} = run;\n    if (failedStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.FAILURE);\n    }\n\n    if (inProgressStatuses.has(status)) {\n      return run.stepStats.filter((step) => step.status === StepEventStatus.IN_PROGRESS);\n    }\n\n    return [];\n  }, [run]);\n\n  const stepCount = relevantSteps.length;\n\n  if (!stepCount || !status) {\n    return null;\n  }\n\n  if (failedStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0];\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <CaptionMono color={Colors.Gray500}>\n          Failed at <Link to={`/instance/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </CaptionMono>\n      );\n    }\n    return (\n      <CaptionMono color={Colors.Gray500}>\n        Failed at <Link to={`/instance/runs/${runId}`}>{stepCount} steps</Link>\n      </CaptionMono>\n    );\n  }\n\n  if (inProgressStatuses.has(status)) {\n    if (stepCount === 1) {\n      const step = relevantSteps[0];\n      const query = step.endTime\n        ? qs.stringify({focusedTime: Math.floor(step.endTime * 1000)}, {addQueryPrefix: true})\n        : '';\n      return (\n        <CaptionMono color={Colors.Gray500}>\n          In progress at <Link to={`/instance/runs/${runId}${query}`}>{step.stepKey}</Link>\n        </CaptionMono>\n      );\n    }\n    return (\n      <CaptionMono color={Colors.Gray500}>\n        In progress at <Link to={`/instance/runs/${runId}`}>{stepCount} steps</Link>\n      </CaptionMono>\n    );\n  }\n\n  return null;\n};\n\nconst STEP_SUMMARY_FOR_RUN_QUERY = gql`\n  query StepSummaryForRunQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        status\n        stepStats {\n          endTime\n          stepKey\n          status\n        }\n      }\n    }\n  }\n`;\n","import {Box, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {failedStatuses, inProgressStatuses} from '../runs/RunStatuses';\nimport {RunStateSummary, RunTime} from '../runs/RunUtils';\nimport {RunTimeFragment} from '../runs/types/RunTimeFragment';\nimport {RunStatus} from '../types/globalTypes';\nimport {AnchorButton} from '../ui/AnchorButton';\n\nimport {StepSummaryForRun} from './StepSummaryForRun';\n\nexport const LastRunSummary: React.FC<{run: RunTimeFragment}> = React.memo(({run}) => {\n  const {status} = run;\n\n  const intent = React.useMemo(() => {\n    switch (status) {\n      case RunStatus.SUCCESS:\n        return 'success';\n      case RunStatus.CANCELED:\n      case RunStatus.CANCELING:\n      case RunStatus.FAILURE:\n        return 'danger';\n      default:\n        return 'none';\n    }\n  }, [status]);\n\n  return (\n    <Box\n      flex={{\n        direction: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'flex-start',\n        gap: 16,\n      }}\n    >\n      <Box flex={{direction: 'column', alignItems: 'flex-start', gap: 8}}>\n        <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n          <Tag intent={intent}>\n            <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n              <RunStatusIndicator status={run.status} size={10} />\n              <RunTime run={run} />\n            </Box>\n          </Tag>\n          <RunStateSummary run={run} />\n        </Box>\n        {failedStatuses.has(run.status) || inProgressStatuses.has(run.status) ? (\n          <StepSummaryForRun runId={run.id} />\n        ) : undefined}\n      </Box>\n      <AnchorButton to={`/instance/runs/${run.id}`}>View run</AnchorButton>\n    </Box>\n  );\n});\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  NonIdealState,\n  Spinner,\n  Tag,\n  Body,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {assertUnreachable} from '../app/Util';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from '../runs/RunTable';\nimport {InstigationTickStatus, InstigationType} from '../types/globalTypes';\n\nimport {LaunchedRunListQuery, LaunchedRunListQueryVariables} from './types/LaunchedRunListQuery';\nimport {TickTagFragment} from './types/TickTagFragment';\n\nexport const TickTag: React.FC<{\n  tick: TickTagFragment;\n  instigationType?: InstigationType;\n}> = ({tick, instigationType}) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  switch (tick.status) {\n    case InstigationTickStatus.STARTED:\n      return <Tag>Started</Tag>;\n    case InstigationTickStatus.SUCCESS:\n      if (!tick.runIds.length) {\n        return <Tag intent=\"primary\">Requested</Tag>;\n      }\n      const tag = (\n        <>\n          <Tag intent=\"primary\" interactive>\n            <ButtonLink underline=\"never\" onClick={() => setOpen(true)}>\n              {tick.runIds.length} Requested\n            </ButtonLink>\n          </Tag>\n          <Dialog\n            isOpen={open}\n            onClose={() => setOpen(false)}\n            style={{width: '90vw'}}\n            title=\"Launched runs\"\n          >\n            <DialogBody>{open && <RunList runIds={tick.runIds} />}</DialogBody>\n            <DialogFooter>\n              <Button intent=\"primary\" onClick={() => setOpen(false)}>\n                OK\n              </Button>\n            </DialogFooter>\n          </Dialog>\n        </>\n      );\n      if (tick.runKeys.length > tick.runIds.length) {\n        const message = `${tick.runKeys.length} runs requested, but ${\n          tick.runKeys.length - tick.runIds.length\n        } skipped because the runs already exist for those requested keys.`;\n        return (\n          <Tooltip position=\"right\" content={message}>\n            {tag}\n          </Tooltip>\n        );\n      }\n      return tag;\n\n    case InstigationTickStatus.SKIPPED:\n      if (tick.runKeys.length) {\n        const message = `${tick.runKeys.length} runs requested, but skipped because the runs already exist for the requested keys.`;\n        return (\n          <Tooltip position=\"right\" content={message}>\n            <Tag intent=\"warning\">Skipped</Tag>\n          </Tooltip>\n        );\n      }\n      if (tick.skipReason) {\n        return (\n          <Tooltip position=\"right\" content={tick.skipReason} targetTagName=\"div\">\n            <Tag intent=\"warning\">Skipped</Tag>\n          </Tooltip>\n        );\n      }\n      return <Tag intent=\"warning\">Skipped</Tag>;\n    case InstigationTickStatus.FAILURE:\n      if (!tick.error) {\n        return <Tag intent=\"danger\">Failure</Tag>;\n      } else {\n        const error = tick.error;\n        const showError = () =>\n          showCustomAlert({\n            title: instigationType\n              ? instigationType === InstigationType.SCHEDULE\n                ? 'Schedule Response'\n                : 'Sensor Response'\n              : 'Python Error',\n            body: <PythonErrorInfo error={error} />,\n          });\n        return (\n          <>\n            <LinkButton onClick={showError}>\n              <Tag minimal={true} intent=\"danger\">\n                Failure\n              </Tag>\n            </LinkButton>\n            <ButtonLink onClick={showError} style={{marginLeft: 8, fontSize: 14}}>\n              View error\n            </ButtonLink>\n          </>\n        );\n      }\n    default:\n      return assertUnreachable(tick.status);\n  }\n};\n\nexport const RunList: React.FC<{\n  runIds: string[];\n}> = ({runIds}) => {\n  const {data, loading} = useQuery<LaunchedRunListQuery, LaunchedRunListQueryVariables>(\n    LAUNCHED_RUN_LIST_QUERY,\n    {\n      variables: {\n        filter: {\n          runIds,\n        },\n      },\n    },\n  );\n\n  if (loading || !data) {\n    return <Spinner purpose=\"section\" />;\n  }\n\n  if (data.pipelineRunsOrError.__typename !== 'Runs') {\n    return (\n      <NonIdealState\n        icon=\"error\"\n        title=\"Query Error\"\n        description={data.pipelineRunsOrError.message}\n      />\n    );\n  }\n  return (\n    <div>\n      <RunTable runs={data.pipelineRunsOrError.results} />\n    </div>\n  );\n};\n\nexport const FailedRunList: React.FC<{\n  originRunIds?: string[];\n}> = ({originRunIds}) => {\n  if (!originRunIds || !originRunIds.length) {\n    return null;\n  }\n  return (\n    <Group direction=\"column\" spacing={16}>\n      <Box padding={12} border={{side: 'bottom', width: 1, color: Colors.Gray200}}>\n        <Body>\n          Failed Runs\n          <Tooltip content=\"Failed runs this tick reacted on and reported back to.\">\n            <Icon name=\"info\" color={Colors.Gray500} />\n          </Tooltip>\n        </Body>\n\n        <RunList runIds={originRunIds} />\n      </Box>\n      <Box padding={12} margin={{bottom: 8}}>\n        <Body>\n          Requested Runs\n          <Tooltip content=\"Runs launched by the run requests in this tick.\">\n            <Icon name=\"info\" color={Colors.Gray500} />\n          </Tooltip>\n        </Body>\n        <NonIdealState\n          icon=\"sensors\"\n          title=\"No runs to display\"\n          description=\"This sensor does not target a pipeline or job.\"\n        />\n      </Box>\n    </Group>\n  );\n};\nconst LinkButton = styled.button`\n  background: inherit;\n  border: none;\n  cursor: pointer;\n  font-size: inherit;\n  text-decoration: none;\n  padding: 0;\n`;\n\nexport const TICK_TAG_FRAGMENT = gql`\n  fragment TickTagFragment on InstigationTick {\n    id\n    status\n    timestamp\n    skipReason\n    runIds\n    runKeys\n    error {\n      ...PythonErrorFragment\n    }\n  }\n`;\n\nconst LAUNCHED_RUN_LIST_QUERY = gql`\n  query LaunchedRunListQuery($filter: RunsFilter!) {\n    pipelineRunsOrError(filter: $filter, limit: 500) {\n      ... on PipelineRuns {\n        results {\n          ...RunTableRunFragment\n          id\n          runId\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Colors, Group, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {LastRunSummary} from '../instance/LastRunSummary';\nimport {RunStatusIndicator} from '../runs/RunStatusDots';\nimport {RUN_TIME_FRAGMENT, titleForRun} from '../runs/RunUtils';\n\nimport {TICK_TAG_FRAGMENT} from './InstigationTick';\nimport {InstigationStateFragment} from './types/InstigationStateFragment';\nimport {RunStatusFragment} from './types/RunStatusFragment';\n\nexport const InstigatedRunStatus: React.FC<{\n  instigationState: InstigationStateFragment;\n}> = ({instigationState}) => {\n  if (!instigationState.runs.length) {\n    return <span style={{color: Colors.Gray300}}>None</span>;\n  }\n  return <LastRunSummary run={instigationState.runs[0]} />;\n};\n\nexport const RunStatusLink: React.FC<{run: RunStatusFragment}> = ({run}) => (\n  <Group direction=\"row\" spacing={4} alignItems=\"center\">\n    <RunStatusIndicator status={run.status} />\n    <Link to={`/instance/runs/${run.runId}`} target=\"_blank\" rel=\"noreferrer\">\n      <Mono>{titleForRun({runId: run.runId})}</Mono>\n    </Link>\n  </Group>\n);\n\nexport const RUN_STATUS_FRAGMENT = gql`\n  fragment RunStatusFragment on Run {\n    id\n    runId\n    status\n  }\n`;\n\nexport const INSTIGATION_STATE_FRAGMENT = gql`\n  fragment InstigationStateFragment on InstigationState {\n    id\n    selectorId\n    name\n    instigationType\n    status\n    repositoryName\n    repositoryLocationName\n    typeSpecificData {\n      ... on SensorData {\n        lastRunKey\n        lastCursor\n      }\n      ... on ScheduleData {\n        cronSchedule\n      }\n    }\n    runs(limit: 1) {\n      id\n      ...RunStatusFragment\n      ...RunTimeFragment\n    }\n    status\n    ticks(limit: 1) {\n      id\n      cursor\n      ...TickTagFragment\n    }\n    runningCount\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n  ${TICK_TAG_FRAGMENT}\n  ${RUN_STATUS_FRAGMENT}\n  ${RUN_TIME_FRAGMENT}\n`;\n\nexport const StatusTable = styled.table`\n  font-size: 13px;\n  border-spacing: 0;\n\n  &&&&& tr {\n    box-shadow: none;\n  }\n\n  &&&&& tbody > tr > td {\n    background: transparent;\n    box-shadow: none !important;\n    padding: 1px 0;\n  }\n\n  &&&&& tbody > tr > td:first-child {\n    color: ${Colors.Gray500};\n  }\n`;\n","import {useMutation} from '@apollo/client';\nimport {Alert, Box, Checkbox, Colors, Group, Table, Subheading, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useConfirmation} from '../app/CustomConfirmationProvider';\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {\n  displayScheduleMutationErrors,\n  STOP_SCHEDULE_MUTATION,\n} from '../schedules/ScheduleMutations';\nimport {humanCronString} from '../schedules/humanCronString';\nimport {StopSchedule, StopScheduleVariables} from '../schedules/types/StopSchedule';\nimport {displaySensorMutationErrors, STOP_SENSOR_MUTATION} from '../sensors/SensorMutations';\nimport {StopSensor, StopSensorVariables} from '../sensors/types/StopSensor';\nimport {InstigationStatus, InstigationType} from '../types/globalTypes';\nimport {InstigatorSelectorInformation} from '../workspace/RepositoryInformation';\n\nimport {TickTag} from './InstigationTick';\nimport {InstigatedRunStatus} from './InstigationUtils';\nimport {InstigationStateFragment} from './types/InstigationStateFragment';\n\nexport const UnloadableSensors: React.FC<{\n  sensorStates: InstigationStateFragment[];\n}> = ({sensorStates}) => {\n  if (!sensorStates.length) {\n    return null;\n  }\n  return (\n    <>\n      <Box padding={{top: 16, horizontal: 24}}>\n        <Subheading>Unloadable sensors</Subheading>\n        <UnloadableSensorInfo />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th style={{maxWidth: '60px'}}></th>\n            <th>Sensor Name</th>\n            <th style={{width: '100px'}}>Last Tick</th>\n            <th>Last Run</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sensorStates.map((sensorState) => (\n            <SensorStateRow sensorState={sensorState} key={sensorState.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport const UnloadableSchedules: React.FC<{\n  scheduleStates: InstigationStateFragment[];\n}> = ({scheduleStates}) => {\n  if (!scheduleStates.length) {\n    return null;\n  }\n  return (\n    <>\n      <Box padding={{top: 16, horizontal: 24}}>\n        <Subheading>Unloadable schedules</Subheading>\n        <UnloadableScheduleInfo />\n      </Box>\n      <Table>\n        <thead>\n          <tr>\n            <th style={{maxWidth: '60px'}}></th>\n            <th>Schedule Name</th>\n            <th style={{width: '150px'}}>Schedule</th>\n            <th style={{width: '100px'}}>Last Tick</th>\n            <th>Last Run</th>\n            <th>Partition Set Status</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scheduleStates.map((scheduleState) => (\n            <ScheduleStateRow scheduleState={scheduleState} key={scheduleState.id} />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nconst UnloadableSensorInfo = () => (\n  <Box margin={{vertical: 20}}>\n    <Alert\n      intent=\"warning\"\n      title={\n        <div>\n          Note: You can turn off any of the following sensors, but you cannot turn them back on.{' '}\n        </div>\n      }\n      description={\n        <div>\n          The following sensors were previously started but now cannot be loaded. They may be part\n          of a different workspace or from a sensor or repository that no longer exists in code. You\n          can turn them off, but you cannot turn them back on since they can’t be loaded.\n        </div>\n      }\n    />\n  </Box>\n);\n\nconst UnloadableScheduleInfo = () => (\n  <Box margin={{vertical: 20}}>\n    <Alert\n      intent=\"warning\"\n      title={\n        <div>\n          Note: You can turn off any of the following schedules, but you cannot turn them back on.\n        </div>\n      }\n      description={\n        <div>\n          The following schedules were previously started but now cannot be loaded. They may be part\n          of a different workspace or from a schedule or repository that no longer exists in code.\n          You can turn them off, but you cannot turn them back on since they can’t be loaded.\n        </div>\n      }\n    />\n  </Box>\n);\n\nconst SensorStateRow = ({sensorState}: {sensorState: InstigationStateFragment}) => {\n  const {id, selectorId, name, status, ticks} = sensorState;\n  const {canStopSensor} = usePermissions();\n\n  const [stopSensor, {loading: toggleOffInFlight}] = useMutation<StopSensor, StopSensorVariables>(\n    STOP_SENSOR_MUTATION,\n    {\n      onCompleted: displaySensorMutationErrors,\n    },\n  );\n  const confirm = useConfirmation();\n\n  const onChangeSwitch = async () => {\n    if (status === InstigationStatus.RUNNING) {\n      await confirm({\n        title: 'Are you sure you want to turn off this sensor?',\n        description:\n          'The definition for this sensor is not available. ' +\n          'If you turn it off, you will not be able to turn it back on from ' +\n          'the currently loaded workspace.',\n      });\n      stopSensor({variables: {jobOriginId: id, jobSelectorId: selectorId}});\n    }\n  };\n\n  const lacksPermission = status === InstigationStatus.RUNNING && !canStopSensor;\n  const latestTick = ticks.length ? ticks[0] : null;\n\n  const checkbox = () => {\n    const element = (\n      <Checkbox\n        format=\"switch\"\n        disabled={toggleOffInFlight || status === InstigationStatus.STOPPED || lacksPermission}\n        checked={status === InstigationStatus.RUNNING}\n        onChange={onChangeSwitch}\n      />\n    );\n    return lacksPermission ? <Tooltip content={DISABLED_MESSAGE}>{element}</Tooltip> : element;\n  };\n\n  return (\n    <tr key={name}>\n      <td style={{width: 60}}>{checkbox()}</td>\n      <td>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          {name}\n        </Group>\n        <InstigatorSelectorInformation instigatorState={sensorState} />\n      </td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SENSOR} />\n        ) : (\n          <span style={{color: Colors.Gray300}}>None</span>\n        )}\n      </td>\n      <td>\n        <div style={{display: 'flex'}}>\n          <InstigatedRunStatus instigationState={sensorState} />\n        </div>\n      </td>\n    </tr>\n  );\n};\n\nconst ScheduleStateRow: React.FC<{\n  scheduleState: InstigationStateFragment;\n}> = ({scheduleState}) => {\n  const {canStopRunningSchedule} = usePermissions();\n  const [stopSchedule, {loading: toggleOffInFlight}] = useMutation<\n    StopSchedule,\n    StopScheduleVariables\n  >(STOP_SCHEDULE_MUTATION, {\n    onCompleted: displayScheduleMutationErrors,\n  });\n  const confirm = useConfirmation();\n  const {id, selectorId, name, ticks, status, typeSpecificData} = scheduleState;\n  const latestTick = ticks.length > 0 ? ticks[0] : null;\n  const cronSchedule =\n    typeSpecificData && typeSpecificData.__typename === 'ScheduleData'\n      ? typeSpecificData.cronSchedule\n      : null;\n  const onChangeSwitch = async () => {\n    if (status === InstigationStatus.RUNNING) {\n      await confirm({\n        title: 'Are you sure you want to stop this schedule?',\n        description:\n          'The definition for this schedule is not available. ' +\n          'If you turn it off, you will not be able to turn it back on from ' +\n          'the currently loaded workspace.',\n      });\n      stopSchedule({variables: {scheduleOriginId: id, scheduleSelectorId: selectorId}});\n    }\n  };\n\n  const lacksPermission = status === InstigationStatus.RUNNING && !canStopRunningSchedule;\n  const checkbox = () => {\n    const element = (\n      <Checkbox\n        format=\"switch\"\n        checked={status === InstigationStatus.RUNNING}\n        disabled={status !== InstigationStatus.RUNNING || toggleOffInFlight || lacksPermission}\n        onChange={onChangeSwitch}\n      />\n    );\n\n    return lacksPermission ? <Tooltip content={DISABLED_MESSAGE}>{element}</Tooltip> : element;\n  };\n\n  return (\n    <tr key={name}>\n      <td style={{width: 60}}>{checkbox()}</td>\n      <td>\n        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n          <div>{name}</div>\n        </Group>\n        <InstigatorSelectorInformation instigatorState={scheduleState} />\n      </td>\n      <td style={{maxWidth: 150}}>\n        <div\n          style={{\n            position: 'relative',\n            width: '100%',\n            whiteSpace: 'pre-wrap',\n            display: 'block',\n          }}\n        >\n          {cronSchedule ? (\n            <Tooltip position=\"bottom\" content={cronSchedule}>\n              {humanCronString(cronSchedule)}\n            </Tooltip>\n          ) : (\n            <div>&mdash;</div>\n          )}\n        </div>\n      </td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SCHEDULE} />\n        ) : null}\n      </td>\n      <td>\n        <InstigatedRunStatus instigationState={scheduleState} />\n      </td>\n      <td>\n        <div style={{display: 'flex'}}>&mdash;</div>\n      </td>\n    </tr>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {HTMLInputProps, InputGroupProps2, Intent} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Colors,\n  Icon,\n  IconWrapper,\n  MenuDivider,\n  MenuItem,\n  Menu,\n  Select,\n  Spinner,\n  Suggest,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {AppContext} from '../app/AppContext';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {IExecutionSession} from '../app/ExecutionSessionStorage';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\nimport {RepositorySelector} from '../types/globalTypes';\nimport {repoAddressAsString} from '../workspace/repoAddressAsString';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nimport {ConfigEditorGeneratorPartitionSetsFragment_results} from './types/ConfigEditorGeneratorPartitionSetsFragment';\nimport {\n  ConfigEditorGeneratorPipelineFragment,\n  ConfigEditorGeneratorPipelineFragment_presets,\n} from './types/ConfigEditorGeneratorPipelineFragment';\nimport {\n  ConfigPartitionsQuery,\n  ConfigPartitionsQueryVariables,\n  ConfigPartitionsQuery_partitionSetOrError_PartitionSet_partitionsOrError_Partitions_results,\n} from './types/ConfigPartitionsQuery';\n\ntype Pipeline = ConfigEditorGeneratorPipelineFragment;\ntype Preset = ConfigEditorGeneratorPipelineFragment_presets;\ntype PartitionSet = ConfigEditorGeneratorPartitionSetsFragment_results;\ntype Partition = ConfigPartitionsQuery_partitionSetOrError_PartitionSet_partitionsOrError_Partitions_results;\ntype ConfigGenerator = Preset | PartitionSet;\n\ninterface ConfigEditorConfigPickerProps {\n  base: IExecutionSession['base'];\n  pipeline: Pipeline;\n  pipelineMode?: string;\n  partitionSets: PartitionSet[];\n  onSaveSession: (updates: Partial<IExecutionSession>) => void;\n  onSelectPreset: (preset: Preset) => Promise<void>;\n  onSelectPartition: (\n    repositorySelector: RepositorySelector,\n    partitionSetName: string,\n    partitionName: string,\n  ) => Promise<void>;\n  repoAddress: RepoAddress;\n}\n\nexport const ConfigEditorConfigPicker: React.FC<ConfigEditorConfigPickerProps> = (props) => {\n  const {\n    pipeline,\n    base,\n    onSaveSession,\n    onSelectPreset,\n    onSelectPartition,\n    partitionSets,\n    repoAddress,\n  } = props;\n\n  const {isJob, presets} = pipeline;\n\n  const configGenerators: ConfigGenerator[] = React.useMemo(() => {\n    const byName = (a: {name: string}, b: {name: string}) => a.name.localeCompare(b.name);\n    return [...presets, ...partitionSets].sort(byName);\n  }, [presets, partitionSets]);\n\n  const label = () => {\n    if (!base) {\n      if (presets.length && !partitionSets.length) {\n        return 'Preset';\n      }\n      if (!presets.length && partitionSets.length) {\n        return 'Partition Set';\n      }\n      return 'Preset / Partition Set';\n    }\n\n    if ('presetName' in base) {\n      return `Preset: ${base.presetName}`;\n    }\n\n    return `Partition Set: ${base.partitionsSetName}`;\n  };\n\n  const onSelect = (item: ConfigGenerator) => {\n    if (item.__typename === 'PartitionSet') {\n      onSaveSession({\n        mode: item.mode,\n        base: {\n          partitionsSetName: item.name,\n          partitionName: null,\n          tags: base ? base.tags : null,\n        },\n      });\n    } else {\n      onSelectPreset(item);\n    }\n  };\n\n  return (\n    <PickerContainer>\n      {isJob || configGenerators.length < 1 ? null : (\n        <ConfigEditorConfigGeneratorPicker\n          label={label()}\n          configGenerators={configGenerators}\n          onSelect={onSelect}\n        />\n      )}\n      {base && 'partitionsSetName' in base ? (\n        <ConfigEditorPartitionPicker\n          pipeline={pipeline}\n          partitionSetName={base.partitionsSetName}\n          value={base.partitionName}\n          onSelect={onSelectPartition}\n          repoAddress={repoAddress}\n        />\n      ) : null}\n    </PickerContainer>\n  );\n};\n\ninterface ConfigEditorPartitionPickerProps {\n  pipeline: Pipeline;\n  partitionSetName: string;\n  value: string | null;\n  onSelect: (\n    repositorySelector: RepositorySelector,\n    partitionSetName: string,\n    partitionName: string,\n  ) => void;\n  repoAddress: RepoAddress;\n}\n\nconst SORT_ORDER_KEY_BASE = 'dagit.partition-sort-order';\ntype SortOrder = 'asc' | 'desc';\n\nconst ConfigEditorPartitionPicker: React.FC<ConfigEditorPartitionPickerProps> = React.memo(\n  (props) => {\n    const {partitionSetName, value, onSelect, repoAddress} = props;\n    const {basePath} = React.useContext(AppContext);\n    const repositorySelector = repoAddressToSelector(repoAddress);\n    const {data, loading} = useQuery<ConfigPartitionsQuery, ConfigPartitionsQueryVariables>(\n      CONFIG_PARTITIONS_QUERY,\n      {\n        variables: {repositorySelector, partitionSetName},\n        fetchPolicy: 'network-only',\n      },\n    );\n\n    const sortOrderKey = `${SORT_ORDER_KEY_BASE}-${basePath}-${repoAddressAsString(\n      repoAddress,\n    )}-${partitionSetName}`;\n\n    const [sortOrder, setSortOrder] = useStateWithStorage<SortOrder>(sortOrderKey, (value: any) =>\n      value === undefined ? 'asc' : value,\n    );\n\n    const partitions: Partition[] = React.useMemo(() => {\n      const retrieved =\n        data?.partitionSetOrError.__typename === 'PartitionSet' &&\n        data?.partitionSetOrError.partitionsOrError.__typename === 'Partitions'\n          ? data.partitionSetOrError.partitionsOrError.results\n          : [];\n      return sortOrder === 'asc' ? retrieved : [...retrieved].reverse();\n    }, [data, sortOrder]);\n\n    const error: PythonErrorFragment | null =\n      data?.partitionSetOrError.__typename === 'PartitionSet' &&\n      data?.partitionSetOrError.partitionsOrError.__typename !== 'Partitions'\n        ? data.partitionSetOrError.partitionsOrError\n        : null;\n\n    const selected = partitions.find((p) => p.name === value);\n\n    const onClickSort = React.useCallback(\n      (event) => {\n        event.preventDefault();\n        setSortOrder((order) => (order === 'asc' ? 'desc' : 'asc'));\n      },\n      [setSortOrder],\n    );\n\n    const rightElement = partitions.length ? (\n      <SortButton onMouseDown={onClickSort}>\n        <Icon name=\"sort_by_alpha\" color={Colors.Gray400} />\n      </SortButton>\n    ) : undefined;\n\n    const inputProps: InputGroupProps2 & HTMLInputProps = {\n      placeholder: 'Partition',\n      style: {width: 180},\n      intent: (loading ? !!value : !!selected) ? Intent.NONE : Intent.DANGER,\n      rightElement,\n    };\n\n    // If we are loading the partitions and do NOT have any cached data to display,\n    // show the component in a loading state with a spinner and fill it with the\n    // current partition's name so it doesn't flicker (if one is set already.)\n    if (loading && partitions.length === 0) {\n      return (\n        <Suggest<string>\n          key=\"loading\"\n          inputProps={{\n            ...inputProps,\n            rightElement: !value ? (\n              <Box\n                flex={{direction: 'column', justifyContent: 'center'}}\n                padding={{right: 4}}\n                style={{height: '30px'}}\n              >\n                <Spinner purpose=\"body-text\" />\n              </Box>\n            ) : undefined,\n          }}\n          items={[]}\n          itemRenderer={() => null}\n          noResults={<MenuItem disabled={true} text=\"Loading...\" />}\n          inputValueRenderer={(str) => str}\n          selectedItem={value}\n          onItemSelect={() => {}}\n        />\n      );\n    }\n\n    if (error) {\n      showCustomAlert({\n        body: <PythonErrorInfo error={error} />,\n      });\n    }\n\n    // Note: We don't want this Suggest to be a fully \"controlled\" React component.\n    // Keeping it's state is annoyign and we only want to update our data model on\n    // selection change. However, we need to set an initial value (defaultSelectedItem)\n    // and ensure it is re-applied to the internal state when it changes (via `key` below).\n    return (\n      <Suggest<Partition>\n        key={selected ? selected.name : 'none'}\n        defaultSelectedItem={selected}\n        items={partitions}\n        inputProps={inputProps}\n        inputValueRenderer={(partition) => partition.name}\n        itemPredicate={(query, partition) => query.length === 0 || partition.name.includes(query)}\n        itemRenderer={(partition, props) => (\n          <MenuItem\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            key={partition.name}\n            text={partition.name}\n          />\n        )}\n        noResults={<MenuItem disabled={true} text=\"No presets.\" />}\n        onItemSelect={(item) => {\n          onSelect(repositorySelector, partitionSetName, item.name);\n        }}\n      />\n    );\n  },\n);\n\ninterface ConfigEditorConfigGeneratorPickerProps {\n  label: string;\n  configGenerators: ConfigGenerator[];\n  onSelect: (configGenerator: ConfigGenerator) => void;\n}\n\nconst ConfigEditorConfigGeneratorPicker: React.FC<ConfigEditorConfigGeneratorPickerProps> = React.memo(\n  (props) => {\n    const {configGenerators, label, onSelect} = props;\n    const button = React.useRef<HTMLButtonElement>(null);\n\n    return (\n      <div>\n        <ShortcutHandler\n          shortcutLabel=\"⌥E\"\n          shortcutFilter={(e) => e.code === 'KeyE' && e.altKey}\n          onShortcut={() => button.current?.click()}\n        >\n          <Select<ConfigGenerator>\n            items={configGenerators}\n            itemPredicate={(query, configGenerator) =>\n              query.length === 0 || configGenerator.name.includes(query)\n            }\n            itemListRenderer={({itemsParentRef, renderItem, filteredItems}) => {\n              const renderedPresetItems = filteredItems\n                .filter((item) => item.__typename === 'PipelinePreset')\n                .map(renderItem)\n                .filter(Boolean);\n\n              const renderedPartitionSetItems = filteredItems\n                .filter((item) => item.__typename === 'PartitionSet')\n                .map(renderItem)\n                .filter(Boolean);\n\n              const bothTypesPresent =\n                renderedPresetItems.length > 0 && renderedPartitionSetItems.length > 0;\n\n              return (\n                <Menu ulRef={itemsParentRef}>\n                  {bothTypesPresent && <MenuItem disabled={true} text=\"Presets\" />}\n                  {renderedPresetItems}\n                  {bothTypesPresent && <MenuDivider />}\n                  {bothTypesPresent && <MenuItem disabled={true} text=\"Partition Sets\" />}\n                  {renderedPartitionSetItems}\n                </Menu>\n              );\n            }}\n            itemRenderer={(item, props) => (\n              <MenuItem\n                active={props.modifiers.active}\n                onClick={props.handleClick}\n                key={item.name}\n                text={\n                  <div>\n                    {item.name}\n                    <div style={{opacity: 0.4, fontSize: '0.75rem'}}>\n                      {[\n                        item.solidSelection\n                          ? item.solidSelection.length === 1\n                            ? `Ops: ${item.solidSelection[0]}`\n                            : `Ops: ${item.solidSelection.length}`\n                          : `Ops: All`,\n                        `Mode: ${item.mode}`,\n                      ].join(' - ')}\n                    </div>\n                  </div>\n                }\n              />\n            )}\n            noResults={<MenuItem disabled={true} text=\"No presets.\" />}\n            onItemSelect={onSelect}\n          >\n            <Button\n              ref={button}\n              data-test-id=\"preset-selector-button\"\n              rightIcon={<Icon name=\"expand_more\" />}\n            >\n              {label}\n            </Button>\n          </Select>\n        </ShortcutHandler>\n      </div>\n    );\n  },\n);\n\nconst SortButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  padding: 4px;\n  margin: 3px 3px 0 0;\n  background-color: ${Colors.White};\n  border-radius: 4px;\n  transition: background-color 100ms;\n\n  :hover,\n  :focus {\n    background-color: ${Colors.Gray100};\n    outline: none;\n\n    ${IconWrapper} {\n      background-color: ${Colors.Gray700};\n    }\n  }\n`;\n\nconst PickerContainer = styled.div`\n  display: flex;\n  justify: space-between;\n  align-items: center;\n  gap: 6px;\n`;\n\nexport const CONFIG_EDITOR_GENERATOR_PIPELINE_FRAGMENT = gql`\n  fragment ConfigEditorGeneratorPipelineFragment on Pipeline {\n    id\n    isJob\n    name\n    presets {\n      __typename\n      name\n      mode\n      solidSelection\n      runConfigYaml\n      tags {\n        key\n        value\n      }\n    }\n    tags {\n      key\n      value\n    }\n  }\n`;\n\nexport const CONFIG_EDITOR_GENERATOR_PARTITION_SETS_FRAGMENT = gql`\n  fragment ConfigEditorGeneratorPartitionSetsFragment on PartitionSets {\n    results {\n      id\n      name\n      mode\n      solidSelection\n    }\n  }\n`;\n\nconst CONFIG_PARTITIONS_QUERY = gql`\n  query ConfigPartitionsQuery(\n    $repositorySelector: RepositorySelector!\n    $partitionSetName: String!\n  ) {\n    partitionSetOrError(\n      repositorySelector: $repositorySelector\n      partitionSetName: $partitionSetName\n    ) {\n      __typename\n      ... on PartitionSet {\n        id\n        partitionsOrError {\n          ... on Partitions {\n            results {\n              name\n            }\n          }\n          ...PythonErrorFragment\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const CONFIG_PARTITION_SELECTION_QUERY = gql`\n  query ConfigPartitionSelectionQuery(\n    $repositorySelector: RepositorySelector!\n    $partitionSetName: String!\n    $partitionName: String!\n  ) {\n    partitionSetOrError(\n      repositorySelector: $repositorySelector\n      partitionSetName: $partitionSetName\n    ) {\n      __typename\n      ... on PartitionSet {\n        id\n        partition(partitionName: $partitionName) {\n          name\n          solidSelection\n          runConfigOrError {\n            ... on PartitionRunConfig {\n              yaml\n            }\n            ...PythonErrorFragment\n          }\n          mode\n          tagsOrError {\n            ... on PartitionTags {\n              results {\n                key\n                value\n              }\n            }\n            ...PythonErrorFragment\n          }\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {\n  Button,\n  Colors,\n  Icon,\n  IconName,\n  Menu,\n  MenuItem,\n  Popover,\n  Spinner,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {ShortcutHandler} from '../app/ShortcutHandler';\n\nexport interface LaunchButtonConfiguration {\n  title: string;\n  disabled: boolean;\n  scope?: string;\n  onClick: () => Promise<any>;\n  icon?: IconName | JSX.Element | 'dagster-spinner';\n  tooltip?: string | JSX.Element;\n}\n\nenum LaunchButtonStatus {\n  Ready = 'ready',\n  Starting = 'starting',\n  Disabled = 'disabled',\n}\n\nfunction useLaunchButtonCommonState({runCount, disabled}: {runCount: number; disabled: boolean}) {\n  const [starting, setStarting] = React.useState(false);\n\n  const onConfigSelected = async (option: LaunchButtonConfiguration) => {\n    setStarting(true);\n    await option.onClick();\n    setStarting(false);\n  };\n\n  let forced: Partial<LaunchButtonConfiguration> = {};\n  let status = disabled ? LaunchButtonStatus.Disabled : LaunchButtonStatus.Ready;\n\n  if (starting) {\n    status = LaunchButtonStatus.Starting;\n    forced = {\n      title: runCount === 1 ? 'Submitting run…' : `Submitting ${runCount} runs…`,\n      disabled: true,\n      icon: 'dagster-spinner',\n    };\n  }\n\n  return {\n    forced,\n    status,\n    onConfigSelected,\n  };\n}\n\ninterface LaunchButtonProps {\n  config: LaunchButtonConfiguration;\n  runCount: number;\n}\n\nexport const LaunchButton = ({config, runCount}: LaunchButtonProps) => {\n  const {forced, status, onConfigSelected} = useLaunchButtonCommonState({\n    runCount,\n    disabled: config.disabled,\n  });\n  const onClick = () => {\n    status === LaunchButtonStatus.Ready && onConfigSelected(config);\n  };\n  return (\n    <ShortcutHandler\n      onShortcut={onClick}\n      shortcutLabel=\"⌥L\"\n      shortcutFilter={(e) => e.code === 'KeyL' && e.altKey}\n    >\n      <ButtonWithConfiguration\n        status={status}\n        {...config}\n        {...forced}\n        onClick={onClick}\n        disabled={status === 'disabled'}\n      />\n    </ShortcutHandler>\n  );\n};\n\ninterface LaunchButtonDropdownProps {\n  title: string;\n  primary: LaunchButtonConfiguration;\n  options: LaunchButtonConfiguration[];\n  disabled?: boolean;\n  tooltip?: string | JSX.Element;\n  icon?: IconName | undefined;\n  runCount: number;\n}\n\nexport const LaunchButtonDropdown = ({\n  title,\n  primary,\n  options,\n  disabled,\n  icon,\n  tooltip,\n  runCount,\n}: LaunchButtonDropdownProps) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const allOptionsDisabled = options.every((d) => d.disabled);\n  const {forced, status, onConfigSelected} = useLaunchButtonCommonState({\n    runCount,\n    disabled: disabled || allOptionsDisabled,\n  });\n  const popoverDisabled = status === LaunchButtonStatus.Disabled;\n\n  return (\n    <ShortcutHandler\n      onShortcut={() => onConfigSelected(primary)}\n      shortcutLabel=\"⌥L\"\n      shortcutFilter={(e) => e.code === 'KeyL' && e.altKey}\n    >\n      <ButtonWithConfiguration\n        status={status}\n        title={title}\n        joined=\"right\"\n        icon={icon}\n        tooltip={tooltip}\n        onClick={() => onConfigSelected(primary)}\n        disabled={!!disabled}\n        {...forced}\n      />\n      <Popover\n        isOpen={isOpen}\n        onInteraction={(nextOpen) => setIsOpen(nextOpen)}\n        disabled={popoverDisabled}\n        position=\"bottom-right\"\n        content={\n          <Menu>\n            {options.map((option, idx) => (\n              <Tooltip\n                key={idx}\n                hoverOpenDelay={300}\n                position=\"left\"\n                openOnTargetFocus={false}\n                targetTagName=\"div\"\n                content={option.tooltip || ''}\n              >\n                <LaunchMenuItem\n                  text={option.title}\n                  disabled={option.disabled}\n                  onClick={() => onConfigSelected(option)}\n                  icon={option.icon !== 'dagster-spinner' ? option.icon : undefined}\n                />\n              </Tooltip>\n            ))}\n          </Menu>\n        }\n      >\n        <ButtonContainer\n          role=\"button\"\n          status={status}\n          style={{minWidth: 'initial'}}\n          icon={<Icon name=\"arrow_drop_down\" />}\n          intent=\"primary\"\n          joined=\"left\"\n          disabled={popoverDisabled}\n        />\n      </Popover>\n    </ShortcutHandler>\n  );\n};\n\ninterface ButtonWithConfigurationProps {\n  title: string;\n  status: LaunchButtonStatus;\n  style?: React.CSSProperties;\n  icon?: IconName | JSX.Element | 'dagster-spinner';\n  joined?: 'left' | 'right';\n  tooltip?: string | JSX.Element;\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\n// Basic helper components\n\nconst ButtonWithConfiguration: React.FC<ButtonWithConfigurationProps> = ({\n  tooltip,\n  icon,\n  title,\n  status,\n  style,\n  onClick,\n  joined,\n  disabled,\n}) => {\n  return (\n    <Tooltip position=\"left\" openOnTargetFocus={false} targetTagName=\"div\" content={tooltip || ''}>\n      <ButtonContainer\n        role=\"button\"\n        intent=\"primary\"\n        style={{...style}}\n        status={status}\n        onClick={onClick}\n        joined={joined}\n        disabled={disabled}\n        icon={\n          icon === 'dagster-spinner' ? (\n            <Spinner purpose=\"body-text\" fillColor={Colors.White} />\n          ) : typeof icon === 'string' ? (\n            <Icon name={icon} size={16} style={{textAlign: 'center', marginRight: 5}} />\n          ) : (\n            icon\n          )\n        }\n      >\n        <MaxwidthText>{title}</MaxwidthText>\n      </ButtonContainer>\n    </Tooltip>\n  );\n};\n\nconst ButtonContainer = styled(Button)<{\n  status: LaunchButtonStatus;\n  joined?: 'right' | 'left';\n}>`\n  border-top-${({joined}) => joined}-radius: 0;\n  border-bottom-${({joined}) => joined}-radius: 0;\n  border-left: ${({joined}) =>\n    joined === 'left' ? `1px solid rgba(255,255,255,0.2)` : 'transparent'};\n  cursor: ${({status}) => (status !== 'ready' ? 'normal' : 'pointer')};\n  margin-left: ${({joined}) => (joined ? '0' : '6px')};\n  ${({joined}) => (joined === 'right' ? 'padding-right: 8px;' : null)}\n`;\n\nconst MaxwidthText = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 350px;\n`;\n\nconst LaunchMenuItem = styled(MenuItem)`\n  max-width: 200px;\n`;\n","import {useMutation} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory} from 'react-router';\n\nimport {IconName} from '../../../ui/src';\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {TelemetryAction, useTelemetryAction} from '../app/Telemetry';\nimport {\n  LAUNCH_PIPELINE_EXECUTION_MUTATION,\n  handleLaunchResult,\n  LaunchBehavior,\n} from '../runs/RunUtils';\nimport {\n  LaunchPipelineExecution,\n  LaunchPipelineExecutionVariables,\n} from '../runs/types/LaunchPipelineExecution';\n\nimport {LaunchButton} from './LaunchButton';\nimport {showLaunchError} from './showLaunchError';\n\ninterface LaunchRootExecutionButtonProps {\n  disabled: boolean;\n  getVariables: () => undefined | LaunchPipelineExecutionVariables;\n  behavior: LaunchBehavior;\n  pipelineName: string;\n  title?: string;\n  icon?: IconName;\n}\n\nexport function useLaunchWithTelemetry() {\n  const {canLaunchPipelineExecution} = usePermissions();\n  const [launchPipelineExecution] = useMutation<\n    LaunchPipelineExecution,\n    LaunchPipelineExecutionVariables\n  >(LAUNCH_PIPELINE_EXECUTION_MUTATION);\n  const logTelemetry = useTelemetryAction();\n  const history = useHistory();\n\n  return React.useCallback(\n    async (variables: LaunchPipelineExecutionVariables, behavior: LaunchBehavior) => {\n      const jobName =\n        variables.executionParams.selector.jobName ||\n        variables.executionParams.selector.pipelineName;\n\n      if (!canLaunchPipelineExecution || !jobName) {\n        return;\n      }\n      const metadata: {[key: string]: string | null | undefined} = {\n        jobName,\n        opSelection: variables.executionParams.selector.solidSelection ? 'provided' : undefined,\n      };\n\n      const result = await launchPipelineExecution({variables});\n      logTelemetry(TelemetryAction.LAUNCH_RUN, metadata);\n      try {\n        handleLaunchResult(jobName, result, history, {behavior});\n      } catch (error) {\n        showLaunchError(error as Error);\n      }\n\n      return result.data;\n    },\n    [canLaunchPipelineExecution, history, launchPipelineExecution, logTelemetry],\n  );\n}\n\nexport const LaunchRootExecutionButton: React.FC<LaunchRootExecutionButtonProps> = (props) => {\n  const launchWithTelemetry = useLaunchWithTelemetry();\n  const {canLaunchPipelineExecution} = usePermissions();\n\n  const onLaunch = async () => {\n    const variables = props.getVariables();\n    if (variables == null) {\n      return;\n    }\n    await launchWithTelemetry(variables, props.behavior);\n  };\n\n  return (\n    <LaunchButton\n      runCount={1}\n      config={{\n        onClick: onLaunch,\n        icon: props.icon || 'open_in_new',\n        title: props.title || 'Launch Run',\n        disabled: props.disabled || !canLaunchPipelineExecution,\n        tooltip: !canLaunchPipelineExecution ? DISABLED_MESSAGE : undefined,\n      }}\n    />\n  );\n};\n","import * as React from 'react';\n\nimport {\n  createSingleSession,\n  IExecutionSession,\n  IExecutionSessionChanges,\n} from '../app/ExecutionSessionStorage';\nimport {RepoAddress} from '../workspace/types';\n\nimport {LaunchpadType} from './LaunchpadRoot';\nimport LaunchpadSession from './LaunchpadSession';\nimport {LaunchpadSessionPartitionSetsFragment} from './types/LaunchpadSessionPartitionSetsFragment';\nimport {LaunchpadSessionPipelineFragment} from './types/LaunchpadSessionPipelineFragment';\n\ninterface Props {\n  launchpadType: LaunchpadType;\n  pipeline: LaunchpadSessionPipelineFragment;\n  partitionSets: LaunchpadSessionPartitionSetsFragment;\n  repoAddress: RepoAddress;\n  sessionPresets: Partial<IExecutionSession>;\n}\n\nexport const LaunchpadTransientSessionContainer = (props: Props) => {\n  const {launchpadType, pipeline, partitionSets, repoAddress, sessionPresets} = props;\n\n  const initialSessionComplete = createSingleSession(sessionPresets);\n  const [session, setSession] = React.useState<IExecutionSession>(initialSessionComplete);\n\n  const onSaveSession = (changes: IExecutionSessionChanges) => {\n    const newSession = {...session, ...changes};\n    setSession(newSession);\n  };\n\n  return (\n    <LaunchpadSession\n      launchpadType={launchpadType}\n      session={session}\n      onSave={onSaveSession}\n      pipeline={pipeline}\n      partitionSets={partitionSets}\n      repoAddress={repoAddress}\n    />\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Dialog, DialogHeader} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Redirect, useParams} from 'react-router-dom';\n\nimport {IExecutionSession} from '../app/ExecutionSessionStorage';\nimport {usePermissions} from '../app/Permissions';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {explorerPathFromString, useStripSnapshotFromPath} from '../pipelines/PipelinePathUtils';\nimport {useJobTitle} from '../pipelines/useJobTitle';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {\n  CONFIG_EDITOR_GENERATOR_PARTITION_SETS_FRAGMENT,\n  CONFIG_EDITOR_GENERATOR_PIPELINE_FRAGMENT,\n} from './ConfigEditorConfigPicker';\nimport {LaunchpadSessionError} from './LaunchpadSessionError';\nimport {LaunchpadSessionLoading} from './LaunchpadSessionLoading';\nimport {LaunchpadTransientSessionContainer} from './LaunchpadTransientSessionContainer';\nimport {LaunchpadRootQuery, LaunchpadRootQueryVariables} from './types/LaunchpadRootQuery';\n\nconst LaunchpadStoredSessionsContainer = React.lazy(\n  () => import('./LaunchpadStoredSessionsContainer'),\n);\n\nexport type LaunchpadType = 'asset' | 'job';\n\n// ########################\n// ##### LAUNCHPAD ROOTS\n// ########################\n\nexport const AssetLaunchpad: React.FC<{\n  repoAddress: RepoAddress;\n  sessionPresets?: Partial<IExecutionSession>;\n  assetJobName: string;\n  open: boolean;\n  setOpen: (open: boolean) => void;\n}> = ({repoAddress, sessionPresets, assetJobName, open, setOpen}) => {\n  const title = 'Launchpad (configure assets)';\n\n  return (\n    <Dialog\n      style={{height: '90vh', width: '80%'}}\n      isOpen={open}\n      canEscapeKeyClose={true}\n      canOutsideClickClose={true}\n      onClose={() => setOpen(false)}\n    >\n      <DialogHeader icon=\"layers\" label={title} />\n      <LaunchpadAllowedRoot\n        launchpadType=\"asset\"\n        pipelinePath={assetJobName}\n        repoAddress={repoAddress}\n        sessionPresets={sessionPresets}\n      />\n    </Dialog>\n  );\n};\n\nexport const JobLaunchpad: React.FC<{repoAddress: RepoAddress}> = (props) => {\n  const {repoAddress} = props;\n  const {pipelinePath, repoPath} = useParams<{repoPath: string; pipelinePath: string}>();\n  const {canLaunchPipelineExecution} = usePermissions();\n\n  if (!canLaunchPipelineExecution) {\n    return <Redirect to={`/workspace/${repoPath}/pipeline_or_job/${pipelinePath}`} />;\n  }\n\n  return (\n    <LaunchpadAllowedRoot\n      launchpadType=\"job\"\n      pipelinePath={pipelinePath}\n      repoAddress={repoAddress}\n    />\n  );\n};\n\n// ########################\n// ##### LAUNCHPAD ALLOWED ROOT\n// ########################\n\ninterface Props {\n  launchpadType: LaunchpadType;\n  pipelinePath: string;\n  repoAddress: RepoAddress;\n  sessionPresets?: Partial<IExecutionSession>;\n}\n\nconst LaunchpadAllowedRoot: React.FC<Props> = (props) => {\n  const {pipelinePath, repoAddress, launchpadType, sessionPresets} = props;\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n  useStripSnapshotFromPath(props);\n\n  const {name: repositoryName, location: repositoryLocationName} = repoAddress;\n\n  const result = useQuery<LaunchpadRootQuery, LaunchpadRootQueryVariables>(\n    PIPELINE_EXECUTION_ROOT_QUERY,\n    {\n      variables: {repositoryName, repositoryLocationName, pipelineName},\n      fetchPolicy: 'cache-and-network',\n      partialRefetch: true,\n    },\n  );\n\n  const pipelineOrError = result?.data?.pipelineOrError;\n  const partitionSetsOrError = result?.data?.partitionSetsOrError;\n\n  if (!pipelineOrError || !partitionSetsOrError) {\n    return <LaunchpadSessionLoading />;\n  }\n\n  if (\n    partitionSetsOrError.__typename === 'PipelineNotFoundError' ||\n    pipelineOrError.__typename === 'PipelineNotFoundError'\n  ) {\n    const message =\n      pipelineOrError.__typename === 'PipelineNotFoundError'\n        ? pipelineOrError.message\n        : 'No data returned from GraphQL';\n\n    return pipelineName !== '' ? (\n      <LaunchpadSessionError\n        icon=\"error\"\n        title={isJob ? 'Job not found' : 'Pipeline not found'}\n        description={message}\n      />\n    ) : (\n      <LaunchpadSessionError\n        icon=\"no-results\"\n        title={isJob ? 'Select a job' : 'Select a pipeline'}\n        description={message}\n      />\n    );\n  }\n\n  if (pipelineOrError.__typename === 'InvalidSubsetError') {\n    throw new Error(`Should never happen because we do not request a subset`);\n  }\n\n  if (pipelineOrError.__typename === 'PythonError') {\n    return (\n      <LaunchpadSessionError\n        icon=\"error\"\n        title=\"Python Error\"\n        description={pipelineOrError.message}\n      />\n    );\n  }\n  if (partitionSetsOrError && partitionSetsOrError.__typename === 'PythonError') {\n    return (\n      <LaunchpadSessionError\n        icon=\"error\"\n        title=\"Python Error\"\n        description={partitionSetsOrError.message}\n      />\n    );\n  }\n\n  if (launchpadType === 'asset') {\n    return (\n      <LaunchpadTransientSessionContainer\n        launchpadType={launchpadType}\n        pipeline={pipelineOrError}\n        partitionSets={partitionSetsOrError}\n        repoAddress={repoAddress}\n        sessionPresets={sessionPresets || {}}\n      />\n    );\n  } else {\n    // job\n    return (\n      <React.Suspense fallback={<div />}>\n        <LaunchpadStoredSessionsContainer\n          launchpadType={launchpadType}\n          pipeline={pipelineOrError}\n          partitionSets={partitionSetsOrError}\n          repoAddress={repoAddress}\n        />\n      </React.Suspense>\n    );\n  }\n};\n\nconst EXECUTION_SESSION_CONTAINER_PIPELINE_FRAGMENT = gql`\n  fragment LaunchpadSessionPipelineFragment on Pipeline {\n    id\n    isJob\n    ...ConfigEditorGeneratorPipelineFragment\n    modes {\n      id\n      name\n      description\n    }\n  }\n  ${CONFIG_EDITOR_GENERATOR_PIPELINE_FRAGMENT}\n`;\n\nconst EXECUTION_SESSION_CONTAINER_PARTITION_SETS_FRAGMENT = gql`\n  fragment LaunchpadSessionPartitionSetsFragment on PartitionSets {\n    ...ConfigEditorGeneratorPartitionSetsFragment\n  }\n  ${CONFIG_EDITOR_GENERATOR_PARTITION_SETS_FRAGMENT}\n`;\n\nconst PIPELINE_EXECUTION_ROOT_QUERY = gql`\n  query LaunchpadRootQuery(\n    $pipelineName: String!\n    $repositoryName: String!\n    $repositoryLocationName: String!\n  ) {\n    pipelineOrError(\n      params: {\n        pipelineName: $pipelineName\n        repositoryName: $repositoryName\n        repositoryLocationName: $repositoryLocationName\n      }\n    ) {\n      ... on PipelineNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n      ... on Pipeline {\n        id\n        ...LaunchpadSessionPipelineFragment\n      }\n    }\n    partitionSetsOrError(\n      pipelineName: $pipelineName\n      repositorySelector: {\n        repositoryName: $repositoryName\n        repositoryLocationName: $repositoryLocationName\n      }\n    ) {\n      __typename\n      ...LaunchpadSessionPartitionSetsFragment\n      ... on PipelineNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${EXECUTION_SESSION_CONTAINER_PIPELINE_FRAGMENT}\n  ${EXECUTION_SESSION_CONTAINER_PARTITION_SETS_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","// Patched lint mode that won't constantly lint\nimport CodeMirror from 'codemirror';\n\nconst GUTTER_ID = 'CodeMirror-lint-markers';\n\nfunction showTooltip(e, content, node) {\n  const tt = document.createElement('div');\n  const nodeRect = node.getBoundingClientRect();\n\n  tt.className = 'CodeMirror-lint-tooltip';\n  tt.appendChild(content.cloneNode(true));\n  document.body.appendChild(tt);\n  if (nodeRect.top > tt.clientHeight) {\n    // position on the top\n    tt.style.top = nodeRect.top - tt.clientHeight - 5 + 'px';\n    tt.style.left = nodeRect.left + 5 + 'px';\n  } else {\n    // positon on the right if top would be off-screen\n    tt.style.top = nodeRect.top + 5 + 'px';\n    tt.style.left = nodeRect.right + 10 + 'px';\n  }\n  if (tt.style.opacity != null) {\n    tt.style.opacity = 1;\n  }\n  return tt;\n}\nfunction rm(elt) {\n  if (elt.parentNode) {\n    elt.parentNode.removeChild(elt);\n  }\n}\nfunction hideTooltip(tt) {\n  if (!tt.parentNode) {\n    return;\n  }\n  if (tt.style.opacity == null) {\n    rm(tt);\n  }\n  tt.style.opacity = 0;\n  setTimeout(function () {\n    rm(tt);\n  }, 600);\n}\n\nfunction showTooltipFor(e, content, node) {\n  let tooltip = showTooltip(e, content, node);\n  function hide() {\n    CodeMirror.off(node, 'mouseout', hide);\n    if (tooltip) {\n      hideTooltip(tooltip);\n      tooltip = null;\n    }\n  }\n  const poll = setInterval(function () {\n    if (tooltip) {\n      for (let n = node; ; n = n.parentNode) {\n        if (n && n.nodeType === 11) {\n          n = n.host;\n        }\n        if (n === document.body) {\n          return;\n        }\n        if (!n) {\n          hide();\n          break;\n        }\n      }\n    }\n    if (!tooltip) {\n      return clearInterval(poll);\n    }\n  }, 400);\n  CodeMirror.on(node, 'mouseout', hide);\n}\n\nfunction parseOptions(_cm, options) {\n  if (options instanceof Function) {\n    return {getAnnotations: options};\n  }\n  if (!options || options === true) {\n    options = {};\n  }\n  return options;\n}\n\nfunction clearMarks(cm) {\n  const state = cm.state.lint;\n  if (state.hasGutter) {\n    cm.clearGutter(GUTTER_ID);\n  }\n  for (let i = 0; i < state.marked.length; ++i) {\n    state.marked[i].clear();\n  }\n  state.marked.length = 0;\n}\n\nfunction makeMarker(labels, severity, multiple, tooltips) {\n  const marker = document.createElement('div');\n  let inner = marker;\n  marker.className = 'CodeMirror-lint-marker CodeMirror-lint-marker-' + severity;\n  if (multiple) {\n    inner = marker.appendChild(document.createElement('div'));\n    inner.className = 'CodeMirror-lint-marker CodeMirror-lint-marker-multiple';\n  }\n\n  if (tooltips !== false) {\n    CodeMirror.on(inner, 'mouseover', function (e) {\n      showTooltipFor(e, labels, inner);\n    });\n  }\n  return marker;\n}\n\nfunction getMaxSeverity(a, b) {\n  if (a === 'error') {\n    return a;\n  } else {\n    return b;\n  }\n}\n\nfunction groupByLine(annotations) {\n  const lines = [];\n  for (let i = 0; i < annotations.length; ++i) {\n    const ann = annotations[i],\n      line = ann.from.line;\n    (lines[line] || (lines[line] = [])).push(ann);\n  }\n  return lines;\n}\n\nfunction annotationTooltip(ann) {\n  let severity = ann.severity;\n  if (!severity) {\n    severity = 'error';\n  }\n  const tip = document.createElement('div');\n  tip.className = 'CodeMirror-lint-message CodeMirror-lint-message-' + severity;\n  if (typeof ann.messageHTML !== 'undefined') {\n    tip.innerHTML = ann.messageHTML;\n  } else {\n    tip.appendChild(document.createTextNode(ann.message));\n  }\n  return tip;\n}\n\nfunction updateLinting(cm, annotationsNotSorted) {\n  clearMarks(cm);\n  const state = cm.state.lint,\n    options = state.options;\n\n  const annotations = groupByLine(annotationsNotSorted);\n\n  for (let line = 0; line < annotations.length; ++line) {\n    const anns = annotations[line];\n    if (!anns) {\n      continue;\n    }\n\n    let maxSeverity = null;\n    const tipLabel = state.hasGutter && document.createDocumentFragment();\n\n    for (let i = 0; i < anns.length; ++i) {\n      let ann = anns[i];\n      let severity = ann.severity;\n      if (!severity) {\n        severity = 'error';\n      }\n      maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n      if (options.formatAnnotation) {\n        ann = options.formatAnnotation(ann);\n      }\n      if (state.hasGutter) {\n        tipLabel.appendChild(annotationTooltip(ann));\n      }\n\n      if (ann.to) {\n        state.marked.push(\n          cm.markText(ann.from, ann.to, {\n            className: 'CodeMirror-lint-mark CodeMirror-lint-mark-' + severity,\n            __annotation: ann,\n          }),\n        );\n      }\n    }\n\n    if (state.hasGutter) {\n      cm.setGutterMarker(\n        line,\n        GUTTER_ID,\n        makeMarker(tipLabel, maxSeverity, anns.length > 1, state.options.tooltips),\n      );\n    }\n  }\n  if (options.onUpdateLinting) {\n    options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n}\n\nfunction lintAsync(cm, getAnnotations, passOptions) {\n  const state = cm.state.lint;\n  let id = ++state.waitingFor;\n  function abort() {\n    id = -1;\n    cm.off('change', abort);\n  }\n  cm.on('change', abort);\n  getAnnotations(\n    cm.getValue(),\n    function (annotations, arg2) {\n      cm.off('change', abort);\n      if (state.waitingFor !== id) {\n        return;\n      }\n      if (arg2 && annotations instanceof CodeMirror) {\n        annotations = arg2;\n      }\n      cm.operation(function () {\n        updateLinting(cm, annotations);\n      });\n    },\n    passOptions,\n    cm,\n  );\n}\n\nfunction startLinting(cm) {\n  const state = cm.state.lint,\n    options = state.options;\n  /*\n   * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n   * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n   */\n  const passOptions = options.options || options;\n  const getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), 'lint');\n  if (!getAnnotations) {\n    return;\n  }\n  if (options.async || getAnnotations.async) {\n    lintAsync(cm, getAnnotations, passOptions);\n  } else {\n    const annotations = getAnnotations(cm.getValue(), passOptions, cm);\n    if (!annotations) {\n      return;\n    }\n    if (annotations.then) {\n      annotations.then(function (issues) {\n        cm.operation(function () {\n          updateLinting(cm, issues);\n        });\n      });\n    } else {\n      cm.operation(function () {\n        updateLinting(cm, annotations);\n      });\n    }\n  }\n}\n\nfunction onChange(cm) {\n  const state = cm.state.lint;\n  if (!state) {\n    return;\n  }\n  clearTimeout(state.timeout);\n  state.timeout = setTimeout(function () {\n    startLinting(cm);\n  }, state.options.delay || 500);\n}\n\nfunction popupTooltip(docs, annotations, e) {\n  const target = e.target || e.srcElement;\n\n  const tooltip = document.createDocumentFragment();\n\n  if (docs) {\n    const docsEl = document.createElement('div');\n    docsEl.textContent = docs;\n    tooltip.appendChild(docsEl);\n    if (annotations.length) {\n      docsEl.style.paddingBottom = '4px';\n      docsEl.style.marginBottom = '4px';\n      docsEl.style.borderBottom = '1px solid rgba(0,0,0,0.25)';\n    }\n  }\n\n  for (let i = 0; i < annotations.length; i++) {\n    const ann = annotations[i];\n    tooltip.appendChild(annotationTooltip(ann));\n  }\n  showTooltipFor(e, tooltip, target);\n}\n\nfunction onMouseOver(cm, e) {\n  const target = e.target || e.srcElement;\n  const box = target.getBoundingClientRect(),\n    x = (box.left + box.right) / 2,\n    y = (box.top + box.bottom) / 2;\n  const pos = cm.coordsChar({left: x, top: y}, 'client');\n  const spans = cm.findMarksAt(pos);\n\n  const getDocs = cm.getHelper(CodeMirror.Pos(0, 0), 'dagster-docs');\n  const docs = getDocs(cm, pos);\n\n  const annotations = [];\n  for (let i = 0; i < spans.length; ++i) {\n    const ann = spans[i].__annotation;\n    if (ann) {\n      annotations.push(ann);\n    }\n  }\n\n  if (docs || annotations.length) {\n    popupTooltip(docs, annotations, e);\n  }\n}\n\nfunction LintState(cm, options, hasGutter) {\n  this.marked = [];\n  this.options = options;\n  this.timeout = null;\n  this.hasGutter = hasGutter;\n  this.onMouseOver = function (e) {\n    onMouseOver(cm, e);\n  };\n  this.waitingFor = 0;\n}\n\nexport const patchLint = () => {\n  CodeMirror.defineOption('lint', false, function (cm, val, old) {\n    if (old && old !== CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false) {\n        cm.off('change', onChange);\n      }\n      CodeMirror.off(cm.getWrapperElement(), 'mouseover', cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      const gutters = cm.getOption('gutters');\n      let hasLintGutter = false;\n      for (let i = 0; i < gutters.length; ++i) {\n        if (gutters[i] === GUTTER_ID) {\n          hasLintGutter = true;\n        }\n      }\n      const state = (cm.state.lint = new LintState(cm, parseOptions(cm, val), hasLintGutter));\n      if (state.options.lintOnChange !== false) {\n        cm.on('change', onChange);\n      }\n      if (state.options.tooltips !== false && state.options.tooltips !== 'gutter') {\n        CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n      }\n    }\n  });\n\n  CodeMirror.defineExtension('performLint', function () {\n    if (this.state.lint) {\n      startLinting(this);\n    }\n  });\n};\n","import * as CodeMirror from 'codemirror';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/search/search';\nimport 'codemirror/addon/search/searchcursor';\nimport 'codemirror/addon/dialog/dialog';\nimport 'codemirror/addon/dialog/dialog.css';\nimport * as yaml from 'yaml';\n\nimport {\n  ConfigSchema,\n  ConfigSchema_allConfigTypes_CompositeConfigType as CompositeConfigType,\n  ConfigSchema_allConfigTypes_MapConfigType as MapConfigType,\n} from '../types/ConfigSchema';\n\n// Example YAML for testing this parser:\n// https://gist.github.com/bengotow/0b700e7d0367750cb31eaf697f865d70\n\ninterface IParseStateParent {\n  key: string;\n  indent: number;\n  childKeys: string[];\n}\n\nenum ContainerType {\n  Dict = 'dict',\n  List = 'list',\n}\n\ninterface IParseState {\n  trailingSpace: boolean;\n  inlineContainers: ContainerType[];\n  escaped: boolean;\n  inValue: boolean;\n  inBlockLiteral: boolean;\n  inBlockLiteralIndentation: number;\n  parents: IParseStateParent[];\n}\n\n// Helper methods that mutate parser state. These must return new JavaScript objects.\n//\nfunction parentsPoppingItemsDeeperThan(parents: IParseStateParent[], indent: number) {\n  while (parents.length > 0 && parents[parents.length - 1]!.indent >= indent) {\n    parents = parents.slice(0, parents.length - 1);\n  }\n  return parents;\n}\n\nfunction parentsAddingChildKeyToLast(parents: IParseStateParent[], key: string) {\n  if (parents.length === 0) {\n    return [];\n  }\n\n  const immediateParent = parents[parents.length - 1]!;\n  return [\n    ...parents.slice(0, parents.length - 1),\n    {\n      key: immediateParent.key,\n      indent: immediateParent.indent,\n      childKeys: [...immediateParent.childKeys, key],\n    },\n  ];\n}\n\nconst indentMark = (col: number) => {\n  switch (col % 14) {\n    case 0:\n      return 'zero';\n    case 2:\n      return 'one';\n    case 4:\n      return 'two';\n    case 6:\n      return 'three';\n    case 8:\n      return 'four';\n    case 10:\n      return 'five';\n    case 12:\n      return 'six';\n    default:\n      return '';\n  }\n};\n\nfunction parentsAddingChildKeyAtIndent(parents: IParseStateParent[], key: string, indent: number) {\n  parents = parentsPoppingItemsDeeperThan(parents, indent);\n  parents = parentsAddingChildKeyToLast(parents, key);\n  parents = [...parents, {key, indent, childKeys: []}];\n  return parents;\n}\n\nconst Constants = ['true', 'false', 'on', 'off', 'yes', 'no'];\n\nexport const RegExps = {\n  KEYWORD: new RegExp('\\\\b((' + Constants.join(')|(') + '))$', 'i'),\n  DICT_COLON: /^:\\s*/,\n  // eslint-disable-next-line no-useless-escape\n  DICT_KEY: /^\\s*(?:[,\\[\\]{}&*!|>'\"%@`][^\\s'\":]|[^,\\[\\]{}#&*!|>'\"%@`])[^# ,]*?(?=\\s*:)/,\n  // eslint-disable-next-line no-useless-escape\n  QUOTED_STRING: /^('([^']|\\\\.)*'?|\"([^\"\\\\]|\\\\.)*\"?)/,\n  // eslint-disable-next-line no-useless-escape\n  BLOCKSTART_PIPE_OR_ARROW: /^\\s*(\\||\\>)\\s*/,\n  // eslint-disable-next-line no-useless-escape\n  NUMBER: /^\\s*-?[0-9\\.]+(?![0-9\\.]+)$/,\n  // eslint-disable-next-line no-useless-escape\n  VARIABLE: /^\\s*(\\&|\\*)[a-z0-9\\._-]+$/i,\n};\n\nCodeMirror.defineMode('yaml', () => {\n  return {\n    lineComment: '#',\n    flattenSpans: false,\n    fold: 'indent',\n    startState: (): IParseState => {\n      return {\n        trailingSpace: false,\n        escaped: false,\n        inValue: false,\n        inBlockLiteral: false,\n        inBlockLiteralIndentation: 0,\n        inlineContainers: [],\n        parents: [],\n      };\n    },\n    token: (stream, state: IParseState) => {\n      const ch = stream.peek();\n      const col = stream.column();\n\n      // reset escape, indent and trailing\n      const wasEscaped = state.escaped;\n      const wasTrailingSpace = state.trailingSpace;\n      state.escaped = false;\n      state.trailingSpace = false;\n\n      // indent\n      if (col % 2 === 0 && ch === ' ' && stream.match(/  /)) {\n        state.trailingSpace = true;\n        return `indent ${indentMark(col)}`;\n      }\n\n      // whitespace\n      const trailingSpace = stream.eatSpace();\n      if (trailingSpace) {\n        state.trailingSpace = true;\n      }\n\n      // escape\n      if (ch === '\\\\') {\n        state.escaped = true;\n        stream.next();\n        return null;\n      }\n\n      // comments\n      // either beginning of the line or had whitespace before\n      if (ch === '#' && (stream.sol() || wasTrailingSpace)) {\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      if (state.inBlockLiteral) {\n        // continuation of a literal string that was started on a previous line\n        if (stream.indentation() > state.inBlockLiteralIndentation) {\n          stream.skipToEnd();\n          return 'string';\n        }\n        state.inBlockLiteralIndentation = 0;\n        state.inBlockLiteral = false;\n      }\n\n      // array list item, value to follow\n      if (stream.match(/-/)) {\n        state.inValue = true;\n        return 'meta';\n      }\n\n      // doc start / end\n      if (stream.sol()) {\n        state.inValue = false;\n        state.parents = [];\n\n        if (stream.match(/---/) || stream.match(/\\.\\.\\./)) {\n          return 'def';\n        }\n      }\n\n      // Handle inline objects and arrays. These can be nested arbitrarily but we\n      // don't currently support them spanning multiple lines.\n      if (stream.match(/^(\\{|\\}|\\[|\\])/)) {\n        if (ch === '{') {\n          state.inlineContainers = [...state.inlineContainers, ContainerType.Dict];\n          state.inValue = false;\n        } else if (ch === '}') {\n          state.inlineContainers = state.inlineContainers.slice(\n            0,\n            state.inlineContainers.length - 1,\n          );\n          state.parents = state.parents.slice(0, state.parents.length - 1);\n          state.inValue = state.inlineContainers.length > 0;\n        } else if (ch === '[') {\n          state.inlineContainers = [...state.inlineContainers, ContainerType.List];\n          state.inValue = true;\n        } else if (ch === ']') {\n          state.inlineContainers = state.inlineContainers.slice(\n            0,\n            state.inlineContainers.length - 1,\n          );\n          state.inValue = state.inlineContainers.length > 0;\n        }\n        state.trailingSpace = false;\n        return 'meta';\n      }\n\n      // Handle inline separators. For dictionaries, we pop from value parsing state back to\n      // key parsing state after a comma and unwind the parent stack.\n      if (state.inlineContainers && !wasEscaped && ch === ',') {\n        const current = state.inlineContainers[state.inlineContainers.length - 1];\n        if (current === ContainerType.Dict) {\n          state.parents = state.parents.slice(0, state.parents.length - 1);\n          state.inValue = false;\n        }\n        stream.next();\n        return 'meta';\n      }\n\n      // A `:` fragment starts value parsing mode if it is not the last character on the line\n      if (stream.match(RegExps.DICT_COLON)) {\n        state.inValue = !stream.eol();\n        return 'meta';\n      }\n\n      // Handle dict key fragments. May be the first element on a line or nested within an inline\n      // (eg: {a: 1, b: 2}). We add the new key to the current `parent` and push a new parent\n      // in case the dict key has subkeys.\n      if (!state.inValue) {\n        const match = stream.match(RegExps.DICT_KEY);\n        if (match) {\n          const key = match[0]!;\n          const keyIndent = stream.pos - key.length;\n          state.parents = parentsAddingChildKeyAtIndent(state.parents, key, keyIndent);\n          return 'atom';\n        }\n      }\n\n      if (state.inValue) {\n        let result = null;\n\n        // Child dicts can start within a value if the user is creating a list, but we don't want to\n        // clasifiy \"my\" as a sub-dict in \"- my:weird:key\". As a balance we require that the colon\n        // be followed by the end-of-line or whitespace.\n        const match = !stream.string.match(/[^\\s]:[^\\s]/) ? stream.match(RegExps.DICT_KEY) : false;\n        if (match) {\n          const key = match[0]!;\n          const keyIndent = stream.pos - key.length;\n          state.inValue = false;\n          state.parents = parentsAddingChildKeyAtIndent(state.parents, key, keyIndent);\n          result = 'atom';\n        }\n\n        if (stream.match(RegExps.BLOCKSTART_PIPE_OR_ARROW)) {\n          state.inBlockLiteralIndentation = stream.indentation();\n          state.inBlockLiteral = true;\n          result = 'meta';\n        }\n\n        if (!result) {\n          // First, read any value that is a quoted string until we reach the end quote.\n          let match = stream.match(RegExps.QUOTED_STRING);\n          if (!match) {\n            // If the value is not a string in quotes, read until a separator (,) or container closing character,\n            // then we'll decide what to do with it.\n            const parentContainer = state.inlineContainers[state.inlineContainers.length - 1];\n            match =\n              parentContainer === ContainerType.List\n                ? stream.match(/^[^,\\]]+/)\n                : parentContainer === ContainerType.Dict\n                ? stream.match(/^[^,\\}]+/)\n                : stream.match(/^.+$/);\n          }\n          const value = match ? match[0]! : '';\n          if (value.match(RegExps.VARIABLE)) {\n            result = 'variable-2';\n          } else if (value.match(RegExps.NUMBER)) {\n            result = 'number';\n          } else if (value.match(RegExps.KEYWORD)) {\n            result = 'keyword';\n          } else {\n            // \"In YAML, you can write a string without quotes, if it doesn't have a special meaning.\",\n            // so if we can't match the content to any other type and we are inValue, we make it a string.\n            // http://blogs.perl.org/users/tinita/2018/03/strings-in-yaml---to-quote-or-not-to-quote.html\n            result = 'string';\n          }\n        }\n\n        // If after consuming the value and trailing spaces we're at the end of the\n        // line, terminate the value and look for another key on the following line.\n        if (stream.eol() && !state.inBlockLiteral) {\n          state.inValue = false;\n        }\n\n        return result;\n      }\n\n      stream.skipToEnd();\n\n      return null;\n    },\n  };\n});\n\n// TODO\n// Uniquity of keys\n// add colon\n// add colon and return for composites\n\ntype CodemirrorLocation = {\n  line: number;\n  ch: number;\n};\n\ntype CodemirrorHint = {\n  render: (el: Element, self: any, data: any) => void;\n  text: string;\n  from: CodemirrorLocation;\n  to: CodemirrorLocation;\n};\n\ntype CodemirrorToken = CodeMirror.Token & {\n  state: IParseState;\n};\n\nCodeMirror.registerHelper(\n  'hint',\n  'yaml',\n  (\n    editor: any,\n    options: {\n      schema?: ConfigSchema;\n    },\n  ): {list: Array<CodemirrorHint>; from: CodemirrorLocation; to: CodemirrorLocation} => {\n    const {\n      cursor,\n      context,\n      token,\n      start,\n      searchString,\n      prevToken,\n    } = expandAutocompletionContextAtCursor(editor);\n\n    const from = {line: cursor.line, ch: start};\n    const to = {line: cursor.line, ch: token.end};\n\n    if (!options.schema) {\n      return {list: [], from, to};\n    }\n\n    if (!context) {\n      return {list: [], from, to};\n    }\n\n    // Since writing meaningful tests for this functionality is difficult given a) no jsdom\n    // support for APIs that codemirror uses (and so no way to use snapshot tests) and b) no\n    // appetite (yet) for writing Selenium tests, we record here the manual tests used to verify\n    // this logic. In what follows, | represents the position of the cursor and -> the transition\n    // on accepting an autocomplete suggestion for `storage: filesystem:\n\n    // st|\n    // ->\n    // storage:\n    //   |\n\n    // storage:|\n    // ->\n    // storage:\n    //   filesystem:\n    //     |\n\n    // storage: |\n    // ->\n    // storage:\n    //   filesystem:\n    //     |\n\n    // storage:  |\n    // ->\n    // storage:\n    //   filesystem:\n    //     |\n\n    // storage:\n    //   |\n    // ->\n    // storage:\n    //   filesystem:\n    //     |\n\n    const isCompOrList = (key: string): boolean => {\n      if (!options.schema) {\n        return false;\n      }\n      // Using a lookup table here seems like a good idea\n      // https://github.com/dagster-io/dagster/issues/1966\n      let type = options.schema.allConfigTypes.find((t) => t.key === key);\n      if (!type) {\n        return false;\n      }\n\n      // If nullable, extract the inner type.\n      if (type.__typename === 'NullableConfigType') {\n        const innerKey = type.typeParamKeys[0];\n        type = options.schema.allConfigTypes.find((t) => t.key === innerKey);\n        if (!type) {\n          return false;\n        }\n      }\n\n      return (\n        type.__typename === 'ArrayConfigType' ||\n        type.__typename === 'CompositeConfigType' ||\n        type.__typename === 'MapConfigType'\n      );\n    };\n\n    const formatReplacement = (\n      field: any,\n      start: any,\n      token: CodemirrorToken,\n      prevToken: CodemirrorToken,\n      inList: boolean,\n    ) => {\n      let replacement = `${field.name}`;\n      let postReplacementIndentation = start;\n\n      const listMarkerPresent = prevToken.string === ' ' || prevToken.string === '-';\n      if (inList && !listMarkerPresent) {\n        replacement = `- ${replacement}`;\n        postReplacementIndentation += 2;\n      }\n\n      const cursorAtColon = token.string.startsWith(':');\n      if (cursorAtColon) {\n        const nextLineIndent = prevToken.start + 2;\n        replacement = `\\n${' '.repeat(nextLineIndent)}${replacement}`;\n        postReplacementIndentation = nextLineIndent;\n      }\n\n      const completionHasChildren = isCompOrList(field.configTypeKey);\n      if (completionHasChildren) {\n        replacement += `:\\n${' '.repeat(postReplacementIndentation + 2)}`;\n      } else {\n        replacement += ': ';\n      }\n\n      return replacement;\n    };\n\n    const buildSuggestion = (\n      display: string,\n      replacement: string,\n      description: string | null,\n    ): CodemirrorHint => ({\n      text: replacement,\n      render: (el) => {\n        const div = document.createElement('div');\n        div.textContent = display;\n        if (description) {\n          const docs = document.createElement('div');\n          docs.innerText =\n            description.length < 90 ? description : description.substr(0, 87) + '...';\n          docs.style.opacity = '0.5';\n          docs.style.overflow = 'hidden';\n          docs.style.maxHeight = '33px';\n          docs.style.maxWidth = '360px';\n          docs.style.whiteSpace = 'normal';\n          div.appendChild(docs);\n        }\n        el.appendChild(div);\n      },\n      from,\n      to,\n    });\n\n    // Calculate if this is on a new-line child of a scalar union type, as an indication that we\n    // should autocomplete the selector fields of the scalar union\n    const isScalarUnionNewLine =\n      context.type.__typename === 'ScalarUnionConfigType' && !prevToken.end;\n\n    // The context will have available fields if the type is a composite config type OR a scalar\n    // union type\n    if (\n      context.availableFields.length &&\n      (context.type.__typename === 'CompositeConfigType' || isScalarUnionNewLine)\n    ) {\n      return {\n        list: context.availableFields\n          .filter((field) => field.name.startsWith(searchString))\n          .map((field) =>\n            buildSuggestion(\n              field.name,\n              formatReplacement(field, start, token, prevToken, context.inArray),\n              field.description,\n            ),\n          ),\n        from,\n        to,\n      };\n    }\n\n    // Completion of enum field values\n    if (context.type.__typename === 'EnumConfigType') {\n      const searchWithoutQuotes = searchString.startsWith('\"')\n        ? searchString.substr(1)\n        : searchString;\n      return {\n        list: context.type.values\n          .filter((val) => val.value.startsWith(searchWithoutQuotes))\n          .map((val) => buildSuggestion(val.value, `\"${val.value}\"`, null)),\n        from,\n        to,\n      };\n    }\n\n    // Completion of boolean field values\n    if (context.type.__typename === 'RegularConfigType' && context.type.givenName === 'Bool') {\n      return {\n        list: ['True', 'False']\n          .filter((val) => val.startsWith(searchString))\n          .map((val) => buildSuggestion(val, val, null)),\n        from,\n        to,\n      };\n    }\n\n    // Completion of Scalar Union field values, the union of the scalar suggestions and the\n    // non-scalar suggestions\n    const type = context.type;\n    if (type.__typename === 'ScalarUnionConfigType') {\n      const scalarType = options.schema.allConfigTypes.find((x) => x.key === type.scalarTypeKey);\n      const nonScalarType = options.schema.allConfigTypes.find(\n        (x) => x.key === type.nonScalarTypeKey,\n      );\n      let scalarSuggestions: CodemirrorHint[] = [];\n      if (\n        scalarType &&\n        scalarType.__typename === 'RegularConfigType' &&\n        scalarType.givenName === 'Bool'\n      ) {\n        scalarSuggestions = ['True', 'False']\n          .filter((val) => val.startsWith(searchString))\n          .map((val) => buildSuggestion(val, val, null));\n      }\n      let nonScalarSuggestions: CodemirrorHint[] = [];\n      if (nonScalarType && nonScalarType.__typename === 'CompositeConfigType') {\n        nonScalarSuggestions = nonScalarType.fields\n          .filter((field) => field.name.startsWith(searchString))\n          .map((field) =>\n            buildSuggestion(\n              field.name,\n              formatReplacement(field, start, token, prevToken, false),\n              field.description,\n            ),\n          );\n      }\n\n      return {list: [...scalarSuggestions, ...nonScalarSuggestions], from, to};\n    }\n\n    return {list: [], from, to};\n  },\n);\n\n/** Takes the pipeline schema and the YAML tokenizer state and returns the\n * type in scope and available (yet-to-be-used) fields\n * if it is a composite type.\n */\nfunction findAutocompletionContext(\n  schema: ConfigSchema | null,\n  parents: IParseStateParent[],\n  currentIndent: number,\n) {\n  parents = parents.filter(({indent}) => currentIndent > indent);\n  const immediateParent = parents[parents.length - 1];\n\n  if (!schema) {\n    // Schema may still be loading\n    return;\n  }\n\n  // We only provide autocompletion if the root type is a Map or a composite (Shape)\n  let type = schema.allConfigTypes.find((t) => t.key === schema.rootConfigType.key);\n  if (!type || (type.__typename !== 'CompositeConfigType' && type.__typename !== 'MapConfigType')) {\n    return null;\n  }\n\n  let available = type.__typename === 'CompositeConfigType' ? type.fields : [];\n\n  // Tracks the nearest mapping type (Shape, Map, etc.) in the hierarchy to the cursor\n  // This is what's rendered in the schema sidebar\n  let closestMappingType: MapConfigType | CompositeConfigType = type;\n  let inArray = false;\n\n  // Tracks the type key to be used for the next depth level\n  // Used for Map config types, which specify the type key for their values, otherwise is null\n  let nextTypeKey: string | null =\n    type.__typename === 'MapConfigType' ? type.typeParamKeys[1]! : null;\n\n  if ((available || type.__typename === 'MapConfigType') && parents.length > 0) {\n    for (const parent of parents) {\n      // In order to provide completion, we must either have type information on hand (parentTypeDef)\n      // for the current key that we are in, or we must have the type info provided by an enclosing Map (nextTypeKey)\n      const parentTypeDef = available.find(({name}) => parent.key === name);\n      if (!parentTypeDef && !nextTypeKey) {\n        return null;\n      }\n\n      // The current composite type's available \"fields\" each only have a configType key.\n      // The rest of the configType's information is in the top level schema.allConfigTypes\n      // to avoid superlinear GraphQL response size.\n      const typeKey = nextTypeKey ? nextTypeKey : parentTypeDef?.configTypeKey;\n      nextTypeKey = null;\n\n      let parentConfigType = schema.allConfigTypes.find((t) => t.key === typeKey)!;\n\n      // If nullable, extract the inner type.\n      if (parentConfigType.__typename === 'NullableConfigType') {\n        const innerType = parentConfigType.typeParamKeys[0];\n        parentConfigType = schema.allConfigTypes.find((t) => t.key === innerType)!;\n      }\n\n      let childTypeKey = parentConfigType.key;\n      let childEntriesUnique = true;\n\n      inArray = parentConfigType.__typename === 'ArrayConfigType';\n      if (inArray) {\n        childTypeKey = parentConfigType.typeParamKeys[0]!;\n        childEntriesUnique = false;\n      }\n\n      // Maps provide no direct autocompletions, but they do act as the closestMappingType,\n      // meaning they show up in the schema sidebar\n      if (parentConfigType.__typename === 'MapConfigType') {\n        nextTypeKey = parentConfigType.typeParamKeys[1]!;\n        closestMappingType = parentConfigType;\n        available = [];\n        continue;\n      }\n\n      type = schema.allConfigTypes.find((t) => t.key === childTypeKey);\n      if (!type) {\n        return null;\n      }\n\n      if (type.__typename === 'ScalarUnionConfigType') {\n        available = [];\n        const nonScalarTypeKey = type.nonScalarTypeKey;\n        const nonScalarType = schema.allConfigTypes.find((x) => x.key === nonScalarTypeKey);\n        if (nonScalarType && nonScalarType.__typename === 'CompositeConfigType') {\n          available = nonScalarType.fields;\n        }\n      } else if (type.__typename === 'CompositeConfigType') {\n        closestMappingType = type;\n        available = type.fields;\n\n        if (parent === immediateParent && childEntriesUnique) {\n          available = available.filter(\n            (item) => immediateParent.childKeys.indexOf(item.name) === -1,\n          );\n        }\n      } else {\n        available = [];\n      }\n    }\n  }\n\n  return {type, closestMappingType, availableFields: available, inArray};\n}\n\n// Find context for a fully- or partially- typed key or value in the YAML document\nexport function expandAutocompletionContextAtCursor(editor: any) {\n  const schema: ConfigSchema = editor.options.hintOptions.schema;\n\n  const cursor = editor.getCursor();\n  const token: CodemirrorToken = editor.getTokenAt(cursor);\n  const prevToken: CodemirrorToken = editor.getTokenAt({\n    line: cursor.line,\n    ch: token.start,\n  });\n\n  let searchString: string;\n  let start: number;\n  if (token.type === 'whitespace' || token.string.startsWith(':')) {\n    searchString = '';\n    start = token.end;\n  } else {\n    searchString = token.string;\n    start = token.start;\n  }\n\n  // Takes the schema and the YAML tokenizer state and returns the\n  // type in scope and available (yet-to-be-used) fields\n  // if it is a composite type.\n  return {\n    start,\n    cursor,\n    searchString,\n    token,\n    prevToken,\n    context: findAutocompletionContext(schema, token.state.parents, start),\n  };\n}\n\ntype CodemirrorLintError = {\n  message: string;\n  severity: 'error' | 'warning' | 'information' | 'hint';\n  type: 'validation' | 'syntax' | 'deprecation';\n  from: CodemirrorLocation;\n  to: CodemirrorLocation;\n};\n\nexport type YamlModeValidationResult =\n  | {\n      isValid: true;\n    }\n  | {\n      isValid: false;\n      errors: YamlModeValidationError[];\n    };\n\nexport type YamlModeValidateFunction = (configYaml: string) => Promise<YamlModeValidationResult>;\n\nexport type YamlModeValidationError = {\n  message: string;\n  path: string[];\n  reason: string;\n};\n\nCodeMirror.registerHelper('dagster-docs', 'yaml', (editor: any, pos: CodeMirror.Position) => {\n  const token = editor.getTokenAt(pos);\n\n  const schema: ConfigSchema = editor.options.hintOptions.schema;\n\n  if (token.type !== 'atom') {\n    return null;\n  }\n\n  const context = findAutocompletionContext(schema, token.state.parents, token.start);\n  const match =\n    context &&\n    context.type.__typename === 'CompositeConfigType' &&\n    context.type.fields.find((f) => f.name === token.string);\n\n  if (match && match.description) {\n    return match.description;\n  }\n\n  return null;\n});\n\nCodeMirror.registerHelper(\n  'lint',\n  'yaml',\n  async (\n    text: string,\n    {checkConfig}: {checkConfig: YamlModeValidateFunction},\n    editor: any,\n  ): Promise<Array<CodemirrorLintError>> => {\n    const codeMirrorDoc = editor.getDoc();\n\n    // TODO: In some scenarios where every line yields an error `parseDocument` can take 1s+\n    // and returns 20,000+ errors. The library does not have a \"bail out\" option but we need one.\n    // However we can't switch libraries because we need the structured document model this returns.\n    // (It's not just text parsed to plain JS objects.)\n    const yamlDoc = yaml.parseDocument(text);\n    const lints: Array<CodemirrorLintError> = [];\n    const lintingTruncated = yamlDoc.errors.length > 10;\n    let lastMarkLocation: CodeMirror.Position | undefined;\n\n    yamlDoc.errors.slice(0, 10).forEach((error) => {\n      const [fromPos, toPos] = error.pos;\n      const from = codeMirrorDoc.posFromIndex(fromPos) as CodeMirror.Position;\n      const to = codeMirrorDoc.posFromIndex(toPos) as CodeMirror.Position;\n\n      if (!lastMarkLocation || lastMarkLocation.line < from.line) {\n        lastMarkLocation = from;\n      }\n\n      lints.push({\n        message: error.message,\n        severity: 'error',\n        type: 'syntax',\n        from,\n        to,\n      });\n    });\n\n    if (lintingTruncated && lastMarkLocation) {\n      const nextLineLocation: CodeMirror.Position = {\n        line: lastMarkLocation.line + 1,\n        ch: 0,\n      };\n      lints.push({\n        message: `${yamlDoc.errors.length - lints.length} more errors - bailed out.`,\n        severity: 'warning',\n        type: 'syntax',\n        from: nextLineLocation,\n        to: nextLineLocation,\n      });\n    }\n\n    if (yamlDoc.errors.length === 0) {\n      const validationResult = await checkConfig(text);\n      if (!validationResult.isValid) {\n        validationResult.errors.forEach((error) => {\n          const lint = validationErrorToCodemirrorError(error, yamlDoc, codeMirrorDoc);\n          if (lint) {\n            lints.push(lint);\n          }\n        });\n      }\n    }\n\n    return lints;\n  },\n);\n\nexport function validationErrorToCodemirrorError(\n  error: YamlModeValidationError,\n  yamlDoc: yaml.Document,\n  codeMirrorDoc: any,\n): CodemirrorLintError | null {\n  const part = error.reason === 'RUNTIME_TYPE_MISMATCH' ? 'value' : 'key';\n  const range = findRangeInDocumentFromPath(yamlDoc, error.path, part);\n  if (range === null) {\n    return null;\n  }\n  return {\n    message: error.message,\n    severity: 'error',\n    type: 'syntax',\n    from: codeMirrorDoc.posFromIndex(range ? range.start : 0) as CodeMirror.Position,\n    to: codeMirrorDoc.posFromIndex(\n      range ? range.end : Number.MAX_SAFE_INTEGER,\n    ) as CodeMirror.Position,\n  };\n}\n\nexport function findRangeInDocumentFromPath(\n  doc: yaml.Document,\n  path: Array<string>,\n  pathPart: 'key' | 'value',\n): {start: number; end: number} | null {\n  let node = nodeAtPath(doc, path);\n  if (!node || !('type' in node)) {\n    return null;\n  }\n\n  if (node.type === 'PAIR') {\n    if (pathPart === 'value' && node.value) {\n      node = node.value;\n    } else {\n      node = node.key;\n    }\n  }\n\n  if (node && node.range) {\n    return {\n      start: node.range[0],\n      end: node.range[1],\n    };\n  } else {\n    return null;\n  }\n}\n\nfunction nodeAtPath(doc: yaml.Document, path: Array<string>) {\n  let node: any = doc.contents;\n  for (let i = 0; i < path.length; i++) {\n    const part = path[i]!;\n    if (node && node.type && node.type === 'PAIR') {\n      node = node.value;\n    }\n\n    if (node && node.type && (node.type === 'SEQ' || node.type === 'FLOW_SEQ')) {\n      const index = Number.parseInt(part);\n      if (!Number.isNaN(index)) {\n        node = node.items[index];\n      } else {\n        return null;\n      }\n    } else if (node && node.type && (node.type === 'FLOW_MAP' || node.type === 'MAP')) {\n      const item = node.items.find(({key}: {key: any}) => key.value === part);\n      if (item && item.type && item.type === 'PAIR') {\n        node = item;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  return node;\n}\n","import 'codemirror/addon/comment/comment';\nimport 'codemirror/addon/dialog/dialog';\nimport 'codemirror/addon/fold/foldgutter';\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/indent-fold';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/search/jump-to-line';\nimport 'codemirror/addon/search/search';\nimport 'codemirror/addon/search/searchcursor';\nimport 'codemirror/keymap/sublime';\n\nimport {Editor} from 'codemirror';\nimport debounce from 'lodash/debounce';\nimport * as React from 'react';\nimport {createGlobalStyle} from 'styled-components/macro';\nimport * as yaml from 'yaml';\n\nimport {StyledCodeMirror} from './CodeMirror';\nimport {patchLint} from './configeditor/codemirror-yaml/lint';\nimport {\n  YamlModeValidateFunction,\n  expandAutocompletionContextAtCursor,\n  findRangeInDocumentFromPath,\n  YamlModeValidationResult,\n} from './configeditor/codemirror-yaml/mode'; // eslint-disable-line import/no-duplicates\nimport {ConfigEditorHelpContext} from './configeditor/types/ConfigEditorHelpContext';\nimport {ConfigSchema} from './configeditor/types/ConfigSchema';\n\nexport {isHelpContextEqual} from './configeditor/isHelpContextEqual';\nexport {ConfigEditorHelp} from './configeditor/ConfigEditorHelp';\n\nexport type {ConfigEditorHelpContext, ConfigSchema, YamlModeValidationResult};\n\npatchLint();\n\ninterface ConfigEditorProps {\n  configCode: string;\n  readOnly: boolean;\n  configSchema?: ConfigSchema | null;\n\n  checkConfig: YamlModeValidateFunction;\n  onConfigChange: (newValue: string) => void;\n  onHelpContextChange: (helpContext: ConfigEditorHelpContext | null) => void;\n}\n\nconst AUTO_COMPLETE_AFTER_KEY = /^[a-zA-Z0-9_@(]$/;\nconst performLint = debounce((editor: any) => {\n  editor.performLint();\n}, 1000);\n\nconst ConfigEditorStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror.cm-s-config-editor {\n    height: initial;\n    position: absolute;\n    inset: 0;\n  }\n`;\n\nexport class ConfigEditor extends React.Component<ConfigEditorProps> {\n  _editor?: Editor;\n\n  componentDidUpdate(prevProps: ConfigEditorProps) {\n    if (!this._editor) {\n      return;\n    }\n    if (prevProps.configSchema === this.props.configSchema) {\n      return;\n    }\n    this.performInitialPass();\n  }\n\n  shouldComponentUpdate(prevProps: ConfigEditorProps) {\n    // Unfortunately, updates to the ConfigEditor clear the linter highlighting for\n    // unknown reasons and they're recalculated asynchronously. To prevent flickering,\n    // only update if our input has meaningfully changed.\n    return (\n      prevProps.configCode !== this.props.configCode ||\n      prevProps.readOnly !== this.props.readOnly ||\n      prevProps.configSchema !== this.props.configSchema\n    );\n  }\n\n  // Public API\n\n  moveCursor = (line: number, ch: number) => {\n    if (!this._editor) {\n      return;\n    }\n    this._editor.setCursor(line, ch, {scroll: false});\n    const {clientHeight} = this._editor.getScrollInfo();\n    const {left, top} = this._editor.cursorCoords(true, 'local');\n    const offsetFromTop = 20;\n\n    this._editor?.scrollIntoView({\n      left,\n      right: left,\n      top: top - offsetFromTop,\n      bottom: top + (clientHeight - offsetFromTop),\n    });\n    this._editor.focus();\n  };\n\n  moveCursorToPath = (path: string[]) => {\n    if (!this._editor) {\n      return;\n    }\n    const codeMirrorDoc = this._editor.getDoc();\n    const yamlDoc = yaml.parseDocument(this.props.configCode);\n    const range = findRangeInDocumentFromPath(yamlDoc, path, 'key');\n    if (!range) {\n      return;\n    }\n    const from = codeMirrorDoc.posFromIndex(range ? range.start : 0) as CodeMirror.Position;\n    this.moveCursor(from.line, from.ch);\n  };\n\n  // End Public API\n\n  performInitialPass() {\n    // update the gutter and redlining\n    performLint(this._editor);\n\n    // update the contextual help based on the configSchema and content\n    const {context} = expandAutocompletionContextAtCursor(this._editor);\n    this.props.onHelpContextChange(context ? {type: context.closestMappingType} : null);\n  }\n\n  render() {\n    // Unfortunately, CodeMirror is too intense to be simulated in the JSDOM \"virtual\" DOM.\n    // Until we run tests against something like selenium, trying to render the editor in\n    // tests have to stop here.\n    if (process.env.NODE_ENV === 'test') {\n      return <span />;\n    }\n\n    return (\n      <div style={{flex: 1, position: 'relative'}}>\n        <ConfigEditorStyle />\n        <StyledCodeMirror\n          value={this.props.configCode}\n          theme={['config-editor']}\n          options={\n            {\n              mode: 'yaml',\n              lineNumbers: true,\n              readOnly: this.props.readOnly,\n              indentUnit: 2,\n              smartIndent: true,\n              showCursorWhenSelecting: true,\n              lintOnChange: false,\n              lint: {\n                checkConfig: this.props.checkConfig,\n                lintOnChange: false,\n                onUpdateLinting: false,\n              },\n              hintOptions: {\n                completeSingle: false,\n                closeOnUnfocus: false,\n                schema: this.props.configSchema,\n              },\n              keyMap: 'sublime',\n              extraKeys: {\n                'Cmd-Space': (editor: any) => editor.showHint({completeSingle: true}),\n                'Ctrl-Space': (editor: any) => editor.showHint({completeSingle: true}),\n                'Alt-Space': (editor: any) => editor.showHint({completeSingle: true}),\n                'Shift-Tab': (editor: any) => editor.execCommand('indentLess'),\n                Tab: (editor: any) => editor.execCommand('indentMore'),\n                // Persistent search box in Query Editor\n                'Cmd-F': 'findPersistent',\n                'Ctrl-F': 'findPersistent',\n              },\n              gutters: [\n                'CodeMirror-foldgutter',\n                'CodeMirror-lint-markers',\n                'CodeMirror-linenumbers',\n              ],\n              foldGutter: true,\n            } as any\n          }\n          editorDidMount={(editor) => {\n            this._editor = editor;\n            this.performInitialPass();\n          }}\n          onBeforeChange={(editor, data, value) => {\n            this.props.onConfigChange(value);\n          }}\n          onCursorActivity={(editor: any) => {\n            if (editor.getSelection().length) {\n              this.props.onHelpContextChange(null);\n            } else {\n              const {context} = expandAutocompletionContextAtCursor(editor);\n              this.props.onHelpContextChange(context ? {type: context.closestMappingType} : null);\n            }\n          }}\n          onChange={(editor: Editor) => {\n            performLint(editor);\n          }}\n          onBlur={(editor: Editor) => {\n            performLint(editor);\n          }}\n          onKeyUp={(editor, event: KeyboardEvent) => {\n            if (AUTO_COMPLETE_AFTER_KEY.test(event.key)) {\n              editor.execCommand('autocomplete');\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import {ConfigEditorHelpContext} from './types/ConfigEditorHelpContext';\n\nexport const isHelpContextEqual = (\n  prev: ConfigEditorHelpContext | null,\n  next: ConfigEditorHelpContext | null,\n) => (prev && prev.type.key) === (next && next.type.key);\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Colors} from '../Colors';\nimport {ConfigTypeSchema, TypeData} from '../ConfigTypeSchema';\nimport {isHelpContextEqual} from '../configeditor/isHelpContextEqual';\n\nimport {ConfigEditorHelpContext} from './types/ConfigEditorHelpContext';\n\ninterface ConfigEditorHelpProps {\n  context: ConfigEditorHelpContext | null;\n  allInnerTypes: TypeData[];\n}\n\nexport const ConfigEditorHelp: React.FC<ConfigEditorHelpProps> = React.memo(\n  ({context, allInnerTypes}) => {\n    if (!context) {\n      return <Container />;\n    }\n    return (\n      <Container>\n        <ConfigScrollWrap>\n          <ConfigTypeSchema type={context.type} typesInScope={allInnerTypes} maxDepth={2} />\n        </ConfigScrollWrap>\n        <AutocompletionsNote>Use Ctrl+Space to show auto-completions inline.</AutocompletionsNote>\n      </Container>\n    );\n  },\n  (prev, next) => isHelpContextEqual(prev.context, next.context),\n);\n\nconst AutocompletionsNote = styled.div`\n  font-size: 0.75rem;\n  text-align: center;\n  padding: 4px;\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${Colors.Gray100};\n  color: ${Colors.Gray500};\n`;\n\nconst ConfigScrollWrap = styled.div`\n  padding: 8px;\n  color: ${Colors.Dark};\n  flex: 1;\n  pointer-events: initial;\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  background-color: ${Colors.Gray50};\n  height: 100%;\n`;\n","import {gql} from '@apollo/client';\nimport {YamlModeValidationResult} from '@dagster-io/ui';\nimport yaml from 'yaml';\n\nimport {ConfigEditorValidationFragment} from './types/ConfigEditorValidationFragment';\n\nexport const CONFIG_EDITOR_RUN_CONFIG_SCHEMA_FRAGMENT = gql`\n  fragment ConfigEditorRunConfigSchemaFragment on RunConfigSchema {\n    rootConfigType {\n      key\n    }\n    allConfigTypes {\n      __typename\n      key\n      description\n      isSelector\n      typeParamKeys\n      ... on RegularConfigType {\n        givenName\n      }\n      ... on MapConfigType {\n        keyLabelName\n      }\n      ... on EnumConfigType {\n        givenName\n        values {\n          value\n          description\n        }\n      }\n      ... on CompositeConfigType {\n        fields {\n          name\n          description\n          isRequired\n          configTypeKey\n          defaultValueAsJson\n        }\n      }\n      ... on ScalarUnionConfigType {\n        key\n        scalarTypeKey\n        nonScalarTypeKey\n      }\n    }\n  }\n`;\n\nexport const CONFIG_EDITOR_VALIDATION_FRAGMENT = gql`\n  fragment ConfigEditorValidationFragment on PipelineConfigValidationResult {\n    __typename\n    ... on RunConfigValidationInvalid {\n      errors {\n        __typename\n        reason\n        message\n        stack {\n          entries {\n            __typename\n            ... on EvaluationStackPathEntry {\n              fieldName\n            }\n            ... on EvaluationStackListItemEntry {\n              listIndex\n            }\n            ... on EvaluationStackMapKeyEntry {\n              mapKey\n            }\n            ... on EvaluationStackMapValueEntry {\n              mapKey\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ntype StackEntry =\n  | {\n      __typename: 'EvaluationStackPathEntry';\n      fieldName: string;\n    }\n  | {\n      __typename: 'EvaluationStackListItemEntry';\n      listIndex: number;\n    }\n  | {\n      __typename: 'EvaluationStackMapKeyEntry';\n      mapKey: object;\n    }\n  | {\n      __typename: 'EvaluationStackMapValueEntry';\n      mapKey: object;\n    };\n\nexport function errorStackToYamlPath(entries: StackEntry[]) {\n  return entries.map((entry) => {\n    switch (entry.__typename) {\n      case 'EvaluationStackPathEntry':\n        return entry.fieldName;\n      case 'EvaluationStackListItemEntry':\n        return `${entry.listIndex}`;\n      case 'EvaluationStackMapKeyEntry':\n      case 'EvaluationStackMapValueEntry':\n        return `${entry.mapKey}`;\n    }\n  });\n}\n\nexport function responseToYamlValidationResult(\n  configYaml: string,\n  response: ConfigEditorValidationFragment,\n): YamlModeValidationResult {\n  if (response.__typename !== 'RunConfigValidationInvalid') {\n    return {isValid: true};\n  }\n\n  const errors = response.errors.map((err) => ({\n    message: err.message,\n    reason: err.reason,\n    path: errorStackToYamlPath(err.stack.entries),\n  }));\n\n  // Errors at the top level have no stack path because they are not within any\n  // dicts. To avoid highlighting the entire editor, associate them with the first\n  // element of the top dict.\n  const parsed = yaml.parse(configYaml);\n  const topLevelKey = Object.keys(parsed);\n  errors.forEach((error) => {\n    if (error.path.length === 0 && topLevelKey.length) {\n      error.path = [topLevelKey[0]];\n    }\n  });\n\n  return {isValid: false, errors};\n}\n","import {Button, Icon, MenuItem, Select} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ModeNotFoundError} from './ModeNotFoundError';\n\ninterface Mode {\n  name: string;\n}\n\ninterface ConfigEditorModePickerProps {\n  modes: Mode[];\n  modeError?: ModeNotFoundError;\n  modeName: string | null;\n  onModeChange: (mode: string) => void;\n}\n\nconst MODE_PICKER_HINT_TEXT = `To add a mode, add a ModeDefinition to the pipeline.`;\n\nexport const ConfigEditorModePicker: React.FC<ConfigEditorModePickerProps> = (props) => {\n  const resolvedMode = props.modeName\n    ? props.modes.find((m) => m.name === props.modeName)\n    : props.modes[0];\n\n  React.useEffect(() => {\n    if (resolvedMode && resolvedMode.name !== props.modeName) {\n      props.onModeChange?.(resolvedMode.name);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [resolvedMode, props.modeName]);\n\n  const singleMode = props.modes.length === 1;\n  const valid = !props.modeError;\n  const disabled = singleMode && valid;\n\n  const onItemSelect = (mode: Mode) => {\n    props.onModeChange?.(mode.name);\n  };\n\n  return (\n    <Select\n      activeItem={resolvedMode}\n      filterable={true}\n      disabled={disabled}\n      items={props.modes}\n      itemPredicate={(query, mode) => query.length === 0 || mode.name.includes(query)}\n      itemRenderer={(mode, props) => (\n        <MenuItem\n          active={props.modifiers.active}\n          key={mode.name}\n          text={mode.name}\n          onClick={props.handleClick}\n        />\n      )}\n      onItemSelect={onItemSelect}\n    >\n      <Button\n        icon={valid ? undefined : <Icon name=\"error\" />}\n        intent={valid ? 'none' : 'danger'}\n        title={disabled ? MODE_PICKER_HINT_TEXT : 'Current execution mode'}\n        disabled={disabled}\n        rightIcon={<Icon name=\"expand_more\" />}\n        data-test-id=\"mode-picker-button\"\n      >\n        {valid\n          ? resolvedMode\n            ? `Mode: ${resolvedMode.name}`\n            : 'Select Mode'\n          : 'Invalid Mode Selection'}\n      </Button>\n    </Select>\n  );\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Popover} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {explodeCompositesInHandleGraph} from '../pipelines/CompositeSupport';\nimport {GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT} from '../pipelines/GraphExplorer';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nimport {OpSelectorQuery, OpSelectorQueryVariables} from './types/OpSelectorQuery';\n\ninterface IOpSelectorProps {\n  pipelineName: string;\n  serverProvidedSubsetError?: {message: string};\n  value: string[] | null;\n  query: string | null;\n  onChange: (value: string[] | null, query: string | null) => void;\n  flattenGraphs: boolean;\n  onFlattenGraphsChange: (v: boolean) => void;\n  repoAddress: RepoAddress;\n}\n\nconst SOLID_SELECTOR_QUERY = gql`\n  query OpSelectorQuery($selector: PipelineSelector!, $requestScopeHandleID: String) {\n    pipelineOrError(params: $selector) {\n      __typename\n      ... on Pipeline {\n        id\n        name\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on InvalidSubsetError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const OpSelector = (props: IOpSelectorProps) => {\n  const {\n    serverProvidedSubsetError,\n    onChange,\n    pipelineName,\n    repoAddress,\n    onFlattenGraphsChange,\n  } = props;\n  const [focused, setFocused] = React.useState(false);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const flattenGraphs = props.flattenGraphs || false;\n  const selector = {...repoAddressToSelector(repoAddress), pipelineName};\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n  const {data, loading} = useQuery<OpSelectorQuery, OpSelectorQueryVariables>(\n    SOLID_SELECTOR_QUERY,\n    {\n      variables: {selector, requestScopeHandleID: flattenGraphs ? undefined : ''},\n      fetchPolicy: 'cache-and-network',\n    },\n  );\n\n  const query = props.query || '*';\n\n  const opHandles =\n    data?.pipelineOrError.__typename === 'Pipeline'\n      ? flattenGraphs\n        ? explodeCompositesInHandleGraph(data.pipelineOrError.solidHandles)\n        : data.pipelineOrError.solidHandles\n      : [];\n  const ops = opHandles.map((h) => h.solid);\n  const flattenGraphsEnabled =\n    flattenGraphs || ops.some((f) => f.definition.__typename === 'CompositeSolidDefinition');\n\n  const opsFetchError =\n    (data?.pipelineOrError.__typename !== 'Pipeline' && data?.pipelineOrError.message) || null;\n\n  const queryResultOps = filterByQuery(ops, query).all;\n  const invalidOpSelection = !loading && queryResultOps.length === 0;\n\n  const errorMessage = invalidOpSelection\n    ? isJob\n      ? `You must provide a valid op query or * to execute the entire job.`\n      : `You must provide a valid solid query or * to execute the entire pipeline.`\n    : serverProvidedSubsetError\n    ? serverProvidedSubsetError.message\n    : opsFetchError;\n\n  const onTextChange = (nextQuery: string) => {\n    if (nextQuery === '') {\n      nextQuery = '*';\n    }\n    const queryResultOps = filterByQuery(ops, nextQuery).all;\n\n    // If all ops are returned, we set the subset to null rather than sending\n    // a comma separated list of evey solid to the API\n    if (queryResultOps.length === ops.length) {\n      onChange(null, nextQuery);\n    } else {\n      onChange(\n        queryResultOps.map((s) => s.name),\n        nextQuery,\n      );\n    }\n  };\n\n  if (!data?.pipelineOrError) {\n    return null;\n  }\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n      <Popover\n        isOpen={focused && !!errorMessage}\n        position=\"bottom-left\"\n        content={<PopoverErrorWrap>{errorMessage}</PopoverErrorWrap>}\n      >\n        <ShortcutHandler\n          shortcutLabel=\"⌥S\"\n          shortcutFilter={(e) => e.code === 'KeyS' && e.altKey}\n          onShortcut={() => inputRef.current?.focus()}\n        >\n          <GraphQueryInput\n            width={(query !== '*' && query !== '') || focused || flattenGraphsEnabled ? 350 : 90}\n            intent={errorMessage ? 'danger' : 'none'}\n            items={ops}\n            ref={inputRef}\n            value={query}\n            placeholder=\"Type an op subset…\"\n            onChange={onTextChange}\n            onFocus={() => setFocused(true)}\n            onBlur={() => setFocused(false)}\n            linkToPreview={{\n              repoName: repoAddress.name,\n              repoLocation: repoAddress.location,\n              pipelineName,\n              isJob,\n            }}\n            flattenGraphsEnabled={flattenGraphsEnabled}\n            flattenGraphs={flattenGraphs}\n            setFlattenGraphs={() => {\n              onFlattenGraphsChange(!flattenGraphs);\n            }}\n          />\n        </ShortcutHandler>\n      </Popover>\n    </Box>\n  );\n};\n\nconst PopoverErrorWrap = styled.div`\n  padding: 4px 8px;\n  border-radius: 2px;\n  border: 1px solid ${Colors.Red500};\n  background: ${Colors.Red200};\n  color: ${Colors.Red700};\n`;\n","import {gql} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {Intent} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  ButtonLink,\n  Checkbox,\n  Colors,\n  Icon,\n  SplitPanelContainer,\n  Tag,\n  Code,\n  Tooltip,\n  FontFamily,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {useConfirmation} from '../app/CustomConfirmationProvider';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {errorStackToYamlPath} from '../configeditor/ConfigEditorUtils';\nimport {\n  ConfigEditorRunConfigSchemaFragment,\n  ConfigEditorRunConfigSchemaFragment_allConfigTypes_CompositeConfigType,\n} from '../configeditor/types/ConfigEditorRunConfigSchemaFragment';\n\nimport {\n  RunPreviewValidationFragment,\n  RunPreviewValidationFragment_RunConfigValidationInvalid_errors,\n} from './types/RunPreviewValidationFragment';\n\ntype ValidationError = RunPreviewValidationFragment_RunConfigValidationInvalid_errors;\ntype ValidationErrorOrNode = ValidationError | React.ReactNode;\n\nfunction isValidationError(e: ValidationErrorOrNode): e is ValidationError {\n  return e && typeof e === 'object' && '__typename' in e ? true : false;\n}\n\nconst stateToHint: {[key: string]: {title: string; intent: Intent}} = {\n  invalid: {\n    title: `You need to fix this configuration section.`,\n    intent: 'danger',\n  },\n  missing: {\n    title: `You need to add this configuration section.`,\n    intent: 'danger',\n  },\n  present: {\n    title: `This section is present and valid.`,\n    intent: 'none',\n  },\n  none: {title: `This section is empty and valid.`, intent: 'none'},\n};\n\nconst RemoveExtraConfigButton = ({\n  onRemoveExtraPaths,\n  extraNodes,\n  disabled,\n}: {\n  extraNodes: string[];\n  onRemoveExtraPaths: (paths: string[]) => void;\n  disabled: boolean;\n}) => {\n  const confirm = useConfirmation();\n\n  const knownKeyExtraPaths: {[key: string]: string[]} = {};\n  const otherPaths: string[] = [];\n\n  for (const path of extraNodes) {\n    const parts = path.split('.');\n\n    // If the length is 2, the first part of the path is a known key, such as \"solids\", \"resouces\",\n    // or \"loggers\", and the user has provided extra config for one of those. We will keep track of\n    // these in `knownKeyExtraPaths` just so we can display them with an extra description.\n    if (parts.length === 2) {\n      const [type, name] = parts;\n      if (!knownKeyExtraPaths[type]) {\n        knownKeyExtraPaths[type] = [];\n      }\n      knownKeyExtraPaths[type].push(name);\n    } else {\n      otherPaths.push(path);\n    }\n  }\n\n  const onClick = async () => {\n    await confirm({\n      title: 'Remove extra config',\n      description: (\n        <div>\n          <p>\n            {`You have provided extra configuration in your run config which does not conform to your\n            pipeline's config schema.`}\n          </p>\n          {Object.entries(knownKeyExtraPaths).length > 0 &&\n            Object.entries(knownKeyExtraPaths).map(([key, value]) => (\n              <>\n                <p>Extra {key}:</p>\n                <ul>\n                  {value.map((v) => (\n                    <li key={v}>\n                      <Code>{v}</Code>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            ))}\n          {otherPaths.length > 0 && (\n            <>\n              <p>Other extra paths:</p>\n              <ul>\n                {otherPaths.map((v) => (\n                  <li key={v}>\n                    <Code>{v}</Code>\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n          <p>\n            Clicking confirm will automatically remove this extra configuration from your run\n            config.\n          </p>\n        </div>\n      ),\n    });\n    onRemoveExtraPaths(extraNodes);\n  };\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Button disabled={disabled} onClick={onClick}>\n        Remove extra config\n      </Button>\n      {disabled ? (\n        <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n          <Icon name=\"check_circle\" color={Colors.Green500} />\n          No extra config to remove\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\nconst ScaffoldConfigButton = ({\n  onScaffoldMissingConfig,\n  missingNodes,\n  disabled,\n}: {\n  missingNodes: string[];\n  onScaffoldMissingConfig: () => void;\n  disabled: boolean;\n}) => {\n  const confirm = useConfirmation();\n\n  const confirmationMessage = (\n    <div>\n      {missingNodes.length > 0 && (\n        <>\n          <p>Missing paths:</p>\n          <ul>\n            {missingNodes.map((v) => (\n              <li key={v}>\n                <Code>{v}</Code>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      <p>\n        Clicking confirm will automatically scaffold this missing configuration into your run config\n        with default values. You will need to change the values appropriately.\n      </p>\n    </div>\n  );\n\n  const onClick = async () => {\n    await confirm({\n      title: 'Scaffold missing config',\n      description: confirmationMessage,\n    });\n    onScaffoldMissingConfig();\n  };\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n      <Button disabled={disabled} onClick={onClick}>\n        Scaffold missing config\n      </Button>\n      {disabled ? (\n        <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n          <Icon name=\"check_circle\" color={Colors.Green500} />\n          No missing config\n        </Box>\n      ) : null}\n    </Box>\n  );\n};\n\ninterface RunPreviewProps {\n  validation: RunPreviewValidationFragment | null;\n  document: any | null;\n\n  runConfigSchema?: ConfigEditorRunConfigSchemaFragment;\n  onHighlightPath: (path: string[]) => void;\n  onRemoveExtraPaths: (paths: string[]) => void;\n  onScaffoldMissingConfig: () => void;\n  solidSelection: string[] | null;\n}\n\nexport const RunPreview: React.FC<RunPreviewProps> = (props) => {\n  const {\n    document,\n    validation,\n    onHighlightPath,\n    onRemoveExtraPaths,\n    onScaffoldMissingConfig,\n    solidSelection,\n    runConfigSchema,\n  } = props;\n  const [errorsOnly, setErrorsOnly] = React.useState(false);\n\n  const rootCompositeChildren = React.useMemo(() => {\n    if (!runConfigSchema) {\n      return {};\n    }\n\n    const {allConfigTypes, rootConfigType} = runConfigSchema;\n    const children: {\n      [fieldName: string]: ConfigEditorRunConfigSchemaFragment_allConfigTypes_CompositeConfigType;\n    } = {};\n\n    const root = allConfigTypes.find((t) => t.key === rootConfigType.key);\n    if (root?.__typename !== 'CompositeConfigType') {\n      return children;\n    }\n\n    root.fields.forEach((field) => {\n      const allConfigVersion = allConfigTypes.find((t) => t.key === field.configTypeKey);\n      if (allConfigVersion?.__typename !== 'CompositeConfigType') {\n        return;\n      }\n      children[field.name] = allConfigVersion;\n    });\n\n    return children;\n  }, [runConfigSchema]);\n\n  const extraNodes: string[] = [];\n  const missingNodes: string[] = [];\n  const errorsAndPaths: {\n    pathKey: string;\n    error: ValidationErrorOrNode;\n  }[] = [];\n\n  if (validation && validation.__typename === 'RunConfigValidationInvalid') {\n    validation.errors.forEach((e) => {\n      const path = errorStackToYamlPath(e.stack.entries);\n\n      errorsAndPaths.push({pathKey: path.join('.'), error: e});\n\n      if (e.__typename === 'MissingFieldConfigError') {\n        missingNodes.push([...path, e.field.name].join('.'));\n      } else if (e.__typename === 'MissingFieldsConfigError') {\n        for (const field of e.fields) {\n          missingNodes.push([...path, field.name].join('.'));\n        }\n      } else if (e.__typename === 'FieldNotDefinedConfigError') {\n        extraNodes.push([...path, e.fieldName].join('.'));\n      } else if (e.__typename === 'FieldsNotDefinedConfigError') {\n        for (const fieldName of e.fieldNames) {\n          extraNodes.push([...path, fieldName].join('.'));\n        }\n      } else if (e.__typename === 'RuntimeMismatchConfigError') {\n        // If an entry at a path is the wrong type,\n        // it is equivalent to it being missing\n        missingNodes.push(path.join('.'));\n      }\n    });\n  }\n\n  if (validation?.__typename === 'InvalidSubsetError') {\n    errorsAndPaths.push({pathKey: '', error: validation.message});\n  }\n\n  if (validation?.__typename === 'PythonError') {\n    const info = <PythonErrorInfo error={validation} />;\n    errorsAndPaths.push({\n      pathKey: '',\n      error: (\n        <span>\n          PythonError:{' '}\n          <ButtonLink onClick={() => showCustomAlert({body: info})}>Click for details</ButtonLink>\n        </span>\n      ),\n    });\n  }\n\n  const {resources, ops, solids, ...rest} = rootCompositeChildren;\n  const hasOps = !!ops?.fields;\n\n  const itemsIn = (parents: string[], items: {name: string; isRequired: boolean}[]) => {\n    const boxes = items\n      .map((item) => {\n        // If a solid selection is in use, discard anything not in it.\n        if (solidSelection?.length && !solidSelection?.includes(item.name)) {\n          return null;\n        }\n\n        const path = [...parents, item.name];\n        const pathKey = path.join('.');\n        const pathErrors = errorsAndPaths\n          .filter((e) => e.pathKey === pathKey || e.pathKey.startsWith(`${pathKey}.`))\n          .map((e) => e.error);\n\n        const isPresent = pathExistsInObject(path, document);\n        const containsMissing = missingNodes.some((missingNode) =>\n          missingNode.includes(path.join('.')),\n        );\n        const isInvalid = pathErrors.length || containsMissing;\n        const isMissing = path.some((_, idx) =>\n          missingNodes.includes(path.slice(0, idx + 1).join('.')),\n        );\n\n        if (errorsOnly && !isInvalid) {\n          return false;\n        }\n\n        const state =\n          isMissing && item.isRequired\n            ? 'missing'\n            : isInvalid\n            ? 'invalid'\n            : isPresent\n            ? 'present'\n            : 'none';\n\n        return (\n          <Tooltip\n            position=\"bottom\"\n            content={stateToHint[state].title}\n            intent={stateToHint[state].intent}\n            key={item.name}\n          >\n            <Tag\n              key={item.name}\n              intent={stateToHint[state].intent}\n              onClick={() => {\n                const first = pathErrors.find(isValidationError);\n                onHighlightPath(first ? errorStackToYamlPath(first.stack.entries) : path);\n              }}\n            >\n              {item.name}\n            </Tag>\n          </Tooltip>\n        );\n      })\n      .filter(Boolean);\n\n    if (!boxes.length) {\n      return <ItemsEmptyNotice>Nothing to display.</ItemsEmptyNotice>;\n    }\n    return boxes;\n  };\n\n  return (\n    <SplitPanelContainer\n      identifier=\"run-preview\"\n      axis=\"horizontal\"\n      first={\n        <ErrorListContainer>\n          <Section>\n            <SectionTitle>Errors</SectionTitle>\n            {errorsAndPaths.length ? (\n              errorsAndPaths.map((item, idx) => (\n                <ErrorRow key={idx} error={item.error} onHighlight={onHighlightPath} />\n              ))\n            ) : (\n              <Box flex={{direction: 'row', gap: 4, alignItems: 'center'}}>\n                <Icon name=\"check_circle\" color={Colors.Green500} />\n                No errors\n              </Box>\n            )}\n          </Section>\n          <Section>\n            <SectionTitle>Config actions:</SectionTitle>\n            <Box flex={{direction: 'column', gap: 8}} padding={{top: 4, bottom: 20}}>\n              <ScaffoldConfigButton\n                onScaffoldMissingConfig={onScaffoldMissingConfig}\n                missingNodes={missingNodes}\n                disabled={!missingNodes.length}\n              />\n              <RemoveExtraConfigButton\n                onRemoveExtraPaths={onRemoveExtraPaths}\n                extraNodes={extraNodes}\n                disabled={!extraNodes.length}\n              />\n            </Box>\n          </Section>\n        </ErrorListContainer>\n      }\n      firstInitialPercent={50}\n      firstMinSize={150}\n      second={\n        <>\n          <div style={{overflowY: 'scroll', width: '100%', height: '100%'}}>\n            <RuntimeAndResourcesSection>\n              <Section>\n                <SectionTitle>Runtime</SectionTitle>\n                <ItemSet>\n                  {itemsIn(\n                    [],\n                    Object.keys(rest).map((name) => ({name, isRequired: false})),\n                  )}\n                </ItemSet>\n              </Section>\n              {(resources?.fields.length || 0) > 0 && (\n                <Section>\n                  <SectionTitle>Resources</SectionTitle>\n                  <ItemSet>{itemsIn(['resources'], resources?.fields || [])}</ItemSet>\n                </Section>\n              )}\n            </RuntimeAndResourcesSection>\n            <Section>\n              <SectionTitle>Ops</SectionTitle>\n              <ItemSet>\n                {itemsIn(\n                  [hasOps ? 'ops' : 'solids'],\n                  (hasOps ? ops?.fields : solids?.fields) || [],\n                )}\n              </ItemSet>\n            </Section>\n            <div style={{height: 50}} />\n          </div>\n          <div\n            style={{\n              position: 'absolute',\n              top: 0,\n              right: 0,\n              padding: '12px 15px 0px 10px',\n              background: 'rgba(255,255,255,0.7)',\n            }}\n          >\n            <Checkbox\n              label=\"Errors Only\"\n              checked={errorsOnly}\n              onChange={() => setErrorsOnly(!errorsOnly)}\n            />\n          </div>\n        </>\n      }\n    />\n  );\n};\n\nexport const RUN_PREVIEW_VALIDATION_FRAGMENT = gql`\n  fragment RunPreviewValidationFragment on PipelineConfigValidationResult {\n    __typename\n    ... on RunConfigValidationInvalid {\n      errors {\n        __typename\n        reason\n        message\n        stack {\n          entries {\n            __typename\n            ... on EvaluationStackPathEntry {\n              fieldName\n            }\n            ... on EvaluationStackListItemEntry {\n              listIndex\n            }\n            ... on EvaluationStackMapKeyEntry {\n              mapKey\n            }\n            ... on EvaluationStackMapValueEntry {\n              mapKey\n            }\n          }\n        }\n        ... on MissingFieldConfigError {\n          field {\n            name\n          }\n        }\n        ... on MissingFieldsConfigError {\n          fields {\n            name\n          }\n        }\n        ... on FieldNotDefinedConfigError {\n          fieldName\n        }\n        ... on FieldsNotDefinedConfigError {\n          fieldNames\n        }\n      }\n    }\n    ... on PipelineNotFoundError {\n      message\n    }\n    ... on InvalidSubsetError {\n      message\n    }\n    ...PythonErrorFragment\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst SectionTitle = styled.div`\n  color: ${Colors.Gray400};\n  text-transform: uppercase;\n  font-size: 12px;\n  margin-bottom: 8px;\n`;\n\nconst Section = styled.div`\n  margin-top: 14px;\n  margin-left: 10px;\n`;\n\nconst ItemSet = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 4px;\n`;\n\nconst ItemsEmptyNotice = styled.div`\n  font-size: 13px;\n  padding-top: 7px;\n  padding-bottom: 7px;\n`;\n\nconst ErrorListContainer = styled.div`\n  margin-left: 10px;\n  overflow-y: scroll;\n  height: 100%;\n`;\n\nconst ErrorRowContainer = styled.div<{hoverable: boolean}>`\n  text-align: left;\n  font-size: 13px;\n  white-space: pre-wrap;\n  word-break: break-word;\n  font-family: ${FontFamily.monospace};\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  border-bottom: 1px solid #ccc;\n  padding: 8px;\n  margin: 8px 12px 0 -8px;\n  &:last-child {\n    border-bottom: 0;\n    margin-bottom: 15px;\n  }\n  ${({hoverable}) =>\n    hoverable &&\n    `&:hover {\n      background: ${Colors.Gray50};\n    }\n  `}\n`;\n\nconst RuntimeAndResourcesSection = styled.div`\n  display: flex;\n  gap: 12px;\n  @media (max-width: 800px) {\n    flex-direction: column;\n  }\n`;\n\nconst ErrorRow: React.FC<{\n  error: ValidationError | React.ReactNode;\n  onHighlight: (path: string[]) => void;\n}> = ({error, onHighlight}) => {\n  let message = error;\n  let target: ValidationError | null = null;\n  if (isValidationError(error)) {\n    message = error.message;\n    target = error;\n  }\n\n  let displayed = message;\n  if (typeof message === 'string' && message.length > 400) {\n    displayed = truncateErrorMessage(message);\n  }\n\n  return (\n    <ErrorRowContainer\n      hoverable={!!target}\n      onClick={() => target && onHighlight(errorStackToYamlPath(target.stack.entries))}\n    >\n      <div style={{paddingRight: 4}}>\n        <Icon name=\"error\" color={Colors.Red500} />\n      </div>\n      <div>\n        {displayed}\n        {displayed !== message && (\n          <>\n            &nbsp;\n            <ButtonLink\n              onClick={() =>\n                showCustomAlert({\n                  body: <div style={{whiteSpace: 'pre-wrap'}}>{message}</div>,\n                })\n              }\n            >\n              View all\n            </ButtonLink>\n          </>\n        )}\n      </div>\n    </ErrorRowContainer>\n  );\n};\n\nfunction truncateErrorMessage(message: string) {\n  let split = message.indexOf('{');\n  if (split === -1) {\n    split = message.indexOf('. ');\n  }\n  if (split === -1) {\n    split = 400;\n  }\n  return message.substr(0, split) + '... ';\n}\n\nfunction pathExistsInObject(path: string[], object: any): boolean {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  if (path.length === 0) {\n    return true;\n  }\n  const [first, ...rest] = path;\n  return pathExistsInObject(rest, object[first]);\n}\n","import {assertUnreachable} from '../app/Util';\nimport {\n  ConfigEditorRunConfigSchemaFragment_allConfigTypes,\n  ConfigEditorRunConfigSchemaFragment,\n} from '../configeditor/types/ConfigEditorRunConfigSchemaFragment';\n\nexport const scaffoldType = (\n  configTypeKey: string,\n  typeLookup: {[key: string]: ConfigEditorRunConfigSchemaFragment_allConfigTypes},\n): any => {\n  const type = typeLookup[configTypeKey];\n\n  switch (type.__typename) {\n    case 'CompositeConfigType':\n      if (type.isSelector) {\n        // Could potentially do something better here, like scaffold out\n        // all the types and let the user delete the ones they don't want.\n        return '<selector>';\n      }\n\n      const config = {};\n      for (const field of type.fields) {\n        const {name, isRequired, configTypeKey} = field;\n        if (isRequired) {\n          config[name] = scaffoldType(configTypeKey, typeLookup);\n        }\n      }\n\n      return config;\n    case 'ArrayConfigType':\n      return [];\n    case 'MapConfigType':\n      return {};\n    case 'NullableConfigType':\n      // If a type is nullable we include it in the scaffolded config anyway\n      // by using the inner type\n      const innerType = type.typeParamKeys[0];\n      return scaffoldType(innerType, typeLookup);\n    case 'EnumConfigType':\n      // Here we just join all the potential enum values with a |. The user needs to delete\n      // all the values but the ones they want to use.\n      return type.values.map((i) => i.value).join('|');\n    case 'ScalarUnionConfigType':\n      // Here we just scaffold the scalar value. Could potentially try to\n      // scaffold the other type instead.\n      const {scalarTypeKey} = type;\n      return scaffoldType(scalarTypeKey, typeLookup);\n    case 'RegularConfigType':\n      return {\n        String: '',\n        Int: 0,\n        Float: 0.0,\n        Bool: true,\n        Any: 'AnyType',\n      }[type.key];\n    default:\n      assertUnreachable(type);\n  }\n};\n\nexport const createTypeLookup = (\n  allConfigTypes: ConfigEditorRunConfigSchemaFragment_allConfigTypes[],\n) => {\n  const typeLookup: {[key: string]: ConfigEditorRunConfigSchemaFragment_allConfigTypes} = {};\n  for (const type of allConfigTypes) {\n    typeLookup[type.key] = type;\n  }\n\n  return typeLookup;\n};\n\nexport const scaffoldPipelineConfig = (configSchema: ConfigEditorRunConfigSchemaFragment) => {\n  const {allConfigTypes, rootConfigType} = configSchema;\n  const typeLookup = createTypeLookup(allConfigTypes);\n  const config = scaffoldType(rootConfigType.key, typeLookup);\n  return config;\n};\n","import {gql, useApolloClient, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  ConfigEditor,\n  ConfigEditorHelpContext,\n  Group,\n  Icon,\n  SecondPanelToggle,\n  SplitPanelContainer,\n  isHelpContextEqual,\n  ConfigEditorHelp,\n} from '@dagster-io/ui';\nimport merge from 'deepmerge';\nimport uniqBy from 'lodash/uniqBy';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\nimport * as yaml from 'yaml';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {\n  IExecutionSession,\n  IExecutionSessionChanges,\n  PipelineRunTag,\n  SessionBase,\n} from '../app/ExecutionSessionStorage';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {\n  CONFIG_EDITOR_RUN_CONFIG_SCHEMA_FRAGMENT,\n  CONFIG_EDITOR_VALIDATION_FRAGMENT,\n  responseToYamlValidationResult,\n} from '../configeditor/ConfigEditorUtils';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RepositorySelector} from '../types/globalTypes';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nimport {\n  ConfigEditorConfigPicker,\n  CONFIG_PARTITION_SELECTION_QUERY,\n} from './ConfigEditorConfigPicker';\nimport {ConfigEditorModePicker} from './ConfigEditorModePicker';\nimport {LaunchRootExecutionButton} from './LaunchRootExecutionButton';\nimport {LaunchpadType} from './LaunchpadRoot';\nimport {LoadingOverlay} from './LoadingOverlay';\nimport {OpSelector} from './OpSelector';\nimport {RunPreview, RUN_PREVIEW_VALIDATION_FRAGMENT} from './RunPreview';\nimport {SessionSettingsBar} from './SessionSettingsBar';\nimport {TagContainer, TagEditor} from './TagEditor';\nimport {scaffoldPipelineConfig} from './scaffoldType';\nimport {ConfigEditorGeneratorPipelineFragment_presets} from './types/ConfigEditorGeneratorPipelineFragment';\nimport {\n  ConfigPartitionSelectionQuery,\n  ConfigPartitionSelectionQueryVariables,\n} from './types/ConfigPartitionSelectionQuery';\nimport {LaunchpadSessionPartitionSetsFragment} from './types/LaunchpadSessionPartitionSetsFragment';\nimport {LaunchpadSessionPipelineFragment} from './types/LaunchpadSessionPipelineFragment';\nimport {\n  PipelineExecutionConfigSchemaQuery,\n  PipelineExecutionConfigSchemaQueryVariables,\n} from './types/PipelineExecutionConfigSchemaQuery';\nimport {PreviewConfigQuery, PreviewConfigQueryVariables} from './types/PreviewConfigQuery';\n\nconst YAML_SYNTAX_INVALID = `The YAML you provided couldn't be parsed. Please fix the syntax errors and try again.`;\nconst LOADING_CONFIG_FOR_PARTITION = `Generating configuration...`;\nconst LOADING_CONFIG_SCHEMA = `Loading config schema...`;\nconst LOADING_RUN_PREVIEW = `Checking config...`;\n\ntype Preset = ConfigEditorGeneratorPipelineFragment_presets;\n\ninterface LaunchpadSessionProps {\n  session: IExecutionSession;\n  onSave: (changes: IExecutionSessionChanges) => void;\n  launchpadType: LaunchpadType;\n  pipeline: LaunchpadSessionPipelineFragment;\n  partitionSets: LaunchpadSessionPartitionSetsFragment;\n  repoAddress: RepoAddress;\n  initialExecutionSessionState?: Partial<IExecutionSession>;\n}\n\ninterface ILaunchpadSessionState {\n  preview: PreviewConfigQuery | null;\n  previewLoading: boolean;\n  previewedDocument: any | null;\n  configLoading: boolean;\n  editorHelpContext: ConfigEditorHelpContext | null;\n  tagEditorOpen: boolean;\n}\n\ntype Action =\n  | {type: 'preview-loading'; payload: boolean}\n  | {\n      type: 'set-preview';\n      payload: {\n        preview: PreviewConfigQuery | null;\n        previewLoading: boolean;\n        previewedDocument: string | null;\n      };\n    }\n  | {type: 'toggle-tag-editor'; payload: boolean}\n  | {type: 'toggle-config-loading'; payload: boolean}\n  | {type: 'set-editor-help-context'; payload: ConfigEditorHelpContext | null};\n\nconst reducer = (state: ILaunchpadSessionState, action: Action) => {\n  switch (action.type) {\n    case 'preview-loading':\n      return {...state, previewLoading: action.payload};\n    case 'set-preview': {\n      const {preview, previewedDocument, previewLoading} = action.payload;\n      return {\n        ...state,\n        preview,\n        previewedDocument,\n        previewLoading,\n      };\n    }\n    case 'toggle-tag-editor':\n      return {...state, tagEditorOpen: action.payload};\n    case 'toggle-config-loading':\n      return {...state, configLoading: action.payload};\n    case 'set-editor-help-context':\n      return {...state, editorHelpContext: action.payload};\n    default:\n      return state;\n  }\n};\n\nconst LaunchButtonContainer: React.FC<{launchpadType: LaunchpadType}> = ({\n  launchpadType,\n  children,\n}) => {\n  if (launchpadType === 'asset') {\n    return (\n      <Box\n        flex={{direction: 'row'}}\n        border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n        padding={{right: 12, vertical: 8}}\n      >\n        <div style={{flexGrow: 1}} />\n        {children}\n      </Box>\n    );\n  } else {\n    // job\n    return <div style={{position: 'absolute', bottom: 12, right: 12, zIndex: 1}}>{children}</div>;\n  }\n};\n\nconst initialState: ILaunchpadSessionState = {\n  preview: null,\n  previewLoading: false,\n  previewedDocument: null,\n  configLoading: false,\n  editorHelpContext: null,\n  tagEditorOpen: false,\n};\n\nconst LaunchpadSession: React.FC<LaunchpadSessionProps> = (props) => {\n  const {\n    launchpadType,\n    session: currentSession,\n    onSave,\n    partitionSets,\n    pipeline,\n    repoAddress,\n  } = props;\n\n  const client = useApolloClient();\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const mounted = React.useRef<boolean>(false);\n  const editor = React.useRef<ConfigEditor | null>(null);\n  const editorSplitPanelContainer = React.useRef<SplitPanelContainer | null>(null);\n  const previewCounter = React.useRef(0);\n\n  const {isJob} = pipeline;\n  const tagsFromSession = React.useMemo(() => currentSession.tags || [], [currentSession]);\n\n  const pipelineSelector = {\n    ...repoAddressToSelector(repoAddress),\n    pipelineName: pipeline.name,\n    solidSelection: currentSession?.solidSelection || undefined,\n  };\n\n  const configResult = useQuery<\n    PipelineExecutionConfigSchemaQuery,\n    PipelineExecutionConfigSchemaQueryVariables\n  >(PIPELINE_EXECUTION_CONFIG_SCHEMA_QUERY, {\n    variables: {selector: pipelineSelector, mode: currentSession?.mode},\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n  });\n\n  const configSchemaOrError = configResult?.data?.runConfigSchemaOrError;\n\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  });\n\n  const onSaveSession = (changes: IExecutionSessionChanges) => {\n    onSave(changes);\n  };\n\n  const onConfigChange = (config: any) => {\n    onSaveSession({\n      runConfigYaml: config,\n    });\n  };\n\n  const onOpSelectionChange = (\n    solidSelection: string[] | null,\n    solidSelectionQuery: string | null,\n  ) => {\n    onSaveSession({\n      solidSelection,\n      solidSelectionQuery,\n    });\n  };\n\n  const onFlattenGraphsChange = (flattenGraphs: boolean) => {\n    onSaveSession({flattenGraphs});\n  };\n\n  const onModeChange = (mode: string) => {\n    onSaveSession({mode});\n  };\n\n  const onRemoveExtraPaths = (paths: string[]) => {\n    let runConfigData = '';\n    try {\n      // Note: parsing `` returns null rather than an empty object,\n      // which is preferable for representing empty config.\n      runConfigData = yaml.parse(currentSession.runConfigYaml || '') || {};\n\n      for (const path of paths) {\n        deletePropertyPath(runConfigData, path);\n      }\n      onSaveSession({runConfigYaml: yaml.stringify(runConfigData)});\n    } catch (err) {\n      showCustomAlert({title: 'Invalid YAML', body: YAML_SYNTAX_INVALID});\n      return;\n    }\n  };\n\n  const runConfigSchema =\n    configSchemaOrError?.__typename === 'RunConfigSchema' ? configSchemaOrError : undefined;\n  const modeError =\n    configSchemaOrError?.__typename === 'ModeNotFoundError' ? configSchemaOrError : undefined;\n\n  const onScaffoldMissingConfig = () => {\n    const config = runConfigSchema ? scaffoldPipelineConfig(runConfigSchema) : {};\n    try {\n      // Note: parsing `` returns null rather than an empty object,\n      // which is preferable for representing empty config.\n      const runConfigData = yaml.parse(currentSession.runConfigYaml || '') || {};\n\n      const updatedRunConfigData = merge(config, runConfigData);\n      const runConfigYaml = yaml.stringify(updatedRunConfigData);\n      onSaveSession({runConfigYaml});\n    } catch (err) {\n      showCustomAlert({title: 'Invalid YAML', body: YAML_SYNTAX_INVALID});\n    }\n  };\n\n  const buildExecutionVariables = () => {\n    if (!currentSession) {\n      return;\n    }\n\n    try {\n      // Note: parsing `` returns null rather than an empty object,\n      // which is preferable for representing empty config.\n      yaml.parse(currentSession.runConfigYaml || '') || {};\n    } catch (err) {\n      showCustomAlert({title: 'Invalid YAML', body: YAML_SYNTAX_INVALID});\n      return;\n    }\n\n    return {\n      executionParams: {\n        runConfigData: currentSession.runConfigYaml || {},\n        selector: pipelineSelector,\n        mode: currentSession.mode || 'default',\n        executionMetadata: {\n          tags: uniqBy(\n            [\n              // pass solid selection query via tags\n              // clean up https://github.com/dagster-io/dagster/issues/2495\n              ...(currentSession.solidSelectionQuery\n                ? [\n                    {\n                      key: DagsterTag.SolidSelection,\n                      value: currentSession.solidSelectionQuery,\n                    },\n                  ]\n                : []),\n              ...(currentSession?.base?.['presetName']\n                ? [\n                    {\n                      key: DagsterTag.PresetName,\n                      value: currentSession?.base?.['presetName'],\n                    },\n                  ]\n                : []),\n\n              ...tagsFromSession.map(onlyKeyAndValue),\n\n              // note, we apply these last - uniqBy uses the first value it sees for\n              // each key, so these can be overridden in the session\n              ...pipeline.tags.map(onlyKeyAndValue),\n            ],\n            (tag) => tag.key,\n          ),\n        },\n      },\n    };\n  };\n\n  const saveTags = (tags: PipelineRunTag[]) => {\n    const tagDict = {};\n    const toSave: PipelineRunTag[] = [];\n    tags.forEach((tag: PipelineRunTag) => {\n      if (!(tag.key in tagDict)) {\n        tagDict[tag.key] = tag.value;\n        toSave.push(tag);\n      }\n    });\n    onSaveSession({tags: toSave});\n  };\n\n  const checkConfig = async (configYaml: string) => {\n    // Another request to preview a newer document may be made while this request\n    // is in flight, in which case completion of this async method should not set loading=false.\n    previewCounter.current += 1;\n    const currentPreviewCount = previewCounter.current;\n    const configYamlOrEmpty = configYaml.trim() || '{}';\n\n    dispatch({type: 'preview-loading', payload: true});\n\n    const {data} = await client.query<PreviewConfigQuery, PreviewConfigQueryVariables>({\n      fetchPolicy: 'no-cache',\n      query: PREVIEW_CONFIG_QUERY,\n      variables: {\n        runConfigData: configYamlOrEmpty,\n        pipeline: pipelineSelector,\n        mode: currentSession.mode || 'default',\n      },\n    });\n\n    if (mounted.current) {\n      const isLatestRequest = currentPreviewCount === previewCounter.current;\n      dispatch({\n        type: 'set-preview',\n        payload: {\n          preview: data,\n          previewedDocument: configYamlOrEmpty,\n          previewLoading: isLatestRequest ? false : state.previewLoading,\n        },\n      });\n    }\n\n    return responseToYamlValidationResult(configYamlOrEmpty, data.isPipelineConfigValid);\n  };\n\n  const tagsApplyingNewBaseTags = (newBaseTags: PipelineRunTag[]) => {\n    // If you choose a new base (preset or partition), we want to make a best-effort to preserve\n    // the tags you've manually typed in, but remove:\n    // - Tags that were in your previous base and are unchanged\n    // - Tags that are specified in the new base\n    const preservedUserTags = currentSession.base\n      ? tagsFromSession.filter(\n          (t) =>\n            currentSession.base?.tags &&\n            !currentSession.base?.tags.some((bt) => bt.key === t.key && bt.value === t.value) &&\n            !newBaseTags.some((bt) => bt.key === t.key),\n        )\n      : [];\n\n    return [...newBaseTags, ...preservedUserTags];\n  };\n\n  const onSelectPreset = async (preset: Preset) => {\n    const newBaseTags = preset.tags.map(onlyKeyAndValue);\n\n    onSaveSession({\n      base: {presetName: preset.name, tags: newBaseTags},\n      name: preset.name,\n      runConfigYaml: preset.runConfigYaml || '',\n      solidSelection: preset.solidSelection,\n      solidSelectionQuery: preset.solidSelection === null ? '*' : preset.solidSelection.join(','),\n      mode: preset.mode,\n      tags: tagsApplyingNewBaseTags(newBaseTags),\n      needsRefresh: false,\n    });\n  };\n\n  const onSelectPartition = async (\n    repositorySelector: RepositorySelector,\n    partitionSetName: string,\n    partitionName: string,\n    sessionSolidSelection?: string[] | null,\n  ) => {\n    onConfigLoading();\n    try {\n      const {base} = currentSession;\n      const {data} = await client.query<\n        ConfigPartitionSelectionQuery,\n        ConfigPartitionSelectionQueryVariables\n      >({\n        query: CONFIG_PARTITION_SELECTION_QUERY,\n        variables: {repositorySelector, partitionSetName, partitionName},\n      });\n\n      if (\n        !data ||\n        !data.partitionSetOrError ||\n        data.partitionSetOrError.__typename !== 'PartitionSet' ||\n        !data.partitionSetOrError.partition\n      ) {\n        onConfigLoaded();\n        return;\n      }\n\n      const {partition} = data.partitionSetOrError;\n\n      let newBaseTags: {key: string; value: string}[] = [];\n      if (partition.tagsOrError.__typename === 'PythonError') {\n        showCustomAlert({\n          body: <PythonErrorInfo error={partition.tagsOrError} />,\n        });\n      } else {\n        newBaseTags = partition.tagsOrError.results.map(onlyKeyAndValue);\n      }\n\n      let runConfigYaml;\n      if (partition.runConfigOrError.__typename === 'PythonError') {\n        runConfigYaml = '';\n        showCustomAlert({\n          body: <PythonErrorInfo error={partition.runConfigOrError} />,\n        });\n      } else {\n        runConfigYaml = partition.runConfigOrError.yaml;\n      }\n\n      const solidSelection = sessionSolidSelection || partition.solidSelection;\n\n      onSaveSession({\n        name: partition.name,\n        base: Object.assign({}, base, {partitionName: partition.name, tags: newBaseTags}),\n        runConfigYaml,\n        solidSelection,\n        solidSelectionQuery: solidSelection === null ? '*' : solidSelection.join(','),\n        mode: partition.mode,\n        tags: tagsApplyingNewBaseTags(newBaseTags),\n        needsRefresh: false,\n      });\n    } catch {}\n    onConfigLoaded();\n  };\n\n  const onRefreshConfig = async (base: SessionBase) => {\n    // Handle preset-based configuration.\n    if ('presetName' in base) {\n      const {presetName} = base;\n      const matchingPreset = pipeline.presets.find((preset) => preset.name === presetName);\n      if (matchingPreset) {\n        onSelectPreset({\n          ...matchingPreset,\n          solidSelection: currentSession.solidSelection || matchingPreset.solidSelection,\n        });\n      }\n      return;\n    }\n\n    // Otherwise, handle partition-based configuration.\n    const {partitionName, partitionsSetName} = base;\n    const repositorySelector = repoAddressToSelector(repoAddress);\n\n    // It is expected that `partitionName` is set here, since we shouldn't be showing the\n    // button at all otherwise.\n    if (partitionName) {\n      onConfigLoading();\n      await onSelectPartition(\n        repositorySelector,\n        partitionsSetName,\n        partitionName,\n        currentSession.solidSelection,\n      );\n      onConfigLoaded();\n    }\n  };\n\n  const onDismissRefreshWarning = () => {\n    onSaveSession({needsRefresh: false});\n  };\n\n  const openTagEditor = () => dispatch({type: 'toggle-tag-editor', payload: true});\n  const closeTagEditor = () => dispatch({type: 'toggle-tag-editor', payload: false});\n\n  const onConfigLoading = () => dispatch({type: 'toggle-config-loading', payload: true});\n  const onConfigLoaded = () => dispatch({type: 'toggle-config-loading', payload: false});\n\n  const {\n    preview,\n    previewLoading,\n    previewedDocument,\n    configLoading,\n    editorHelpContext,\n    tagEditorOpen,\n  } = state;\n\n  const refreshableSessionBase = React.useMemo(() => {\n    const {base, needsRefresh} = currentSession;\n    if (\n      base &&\n      needsRefresh &&\n      ('presetName' in base || (base.partitionsSetName && base.partitionName))\n    ) {\n      return base;\n    }\n    return null;\n  }, [currentSession]);\n\n  let launchButtonTitle: string | undefined;\n  if (launchpadType === 'asset') {\n    launchButtonTitle = 'Materialize';\n  }\n\n  return (\n    <>\n      <SplitPanelContainer\n        axis=\"vertical\"\n        identifier=\"execution\"\n        firstMinSize={100}\n        firstInitialPercent={75}\n        first={\n          <>\n            <LoadingOverlay isLoading={configLoading} message={LOADING_CONFIG_FOR_PARTITION} />\n            <SessionSettingsBar>\n              <ConfigEditorConfigPicker\n                pipeline={pipeline}\n                partitionSets={partitionSets.results}\n                base={currentSession.base}\n                onSaveSession={onSaveSession}\n                onSelectPreset={onSelectPreset}\n                onSelectPartition={onSelectPartition}\n                repoAddress={repoAddress}\n              />\n              <SessionSettingsSpacer />\n              <OpSelector\n                serverProvidedSubsetError={\n                  preview?.isPipelineConfigValid.__typename === 'InvalidSubsetError'\n                    ? preview.isPipelineConfigValid\n                    : undefined\n                }\n                pipelineName={pipeline.name}\n                value={currentSession.solidSelection || null}\n                query={currentSession.solidSelectionQuery || null}\n                onChange={onOpSelectionChange}\n                flattenGraphs={currentSession.flattenGraphs}\n                onFlattenGraphsChange={onFlattenGraphsChange}\n                repoAddress={repoAddress}\n              />\n              {isJob ? (\n                <span />\n              ) : (\n                <>\n                  <SessionSettingsSpacer />\n                  <ConfigEditorModePicker\n                    modes={pipeline.modes}\n                    modeError={modeError}\n                    onModeChange={onModeChange}\n                    modeName={currentSession.mode}\n                  />\n                </>\n              )}\n              <TagEditor\n                tagsFromDefinition={pipeline.tags}\n                tagsFromSession={tagsFromSession}\n                onChange={saveTags}\n                open={tagEditorOpen}\n                onRequestClose={closeTagEditor}\n              />\n              <div style={{flex: 1}} />\n              <ShortcutHandler\n                shortcutLabel=\"⌥T\"\n                shortcutFilter={(e) => e.code === 'KeyT' && e.altKey}\n                onShortcut={openTagEditor}\n              >\n                <Button onClick={openTagEditor} icon={<Icon name=\"edit\" />}>\n                  Edit tags\n                </Button>\n              </ShortcutHandler>\n              <SessionSettingsSpacer />\n              <SecondPanelToggle axis=\"horizontal\" container={editorSplitPanelContainer} />\n            </SessionSettingsBar>\n            {pipeline.tags.length || tagsFromSession.length ? (\n              <Box\n                padding={{vertical: 8, left: 12, right: 0}}\n                border={{side: 'bottom', width: 1, color: Colors.Gray200}}\n              >\n                <TagContainer\n                  tagsFromDefinition={pipeline.tags}\n                  tagsFromSession={tagsFromSession}\n                  onRequestEdit={openTagEditor}\n                />\n              </Box>\n            ) : null}\n            {refreshableSessionBase ? (\n              <Box\n                padding={{vertical: 8, horizontal: 12}}\n                border={{side: 'bottom', width: 1, color: Colors.Gray200}}\n              >\n                <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    Your repository has been manually refreshed, and this configuration may now be\n                    out of date.\n                  </div>\n                  <Button\n                    intent=\"primary\"\n                    onClick={() => onRefreshConfig(refreshableSessionBase)}\n                    disabled={state.configLoading}\n                  >\n                    Refresh config\n                  </Button>\n                  <Button onClick={onDismissRefreshWarning}>Dismiss</Button>\n                </Group>\n              </Box>\n            ) : null}\n            <SplitPanelContainer\n              ref={editorSplitPanelContainer}\n              axis=\"horizontal\"\n              identifier=\"execution-editor\"\n              firstMinSize={100}\n              firstInitialPercent={70}\n              first={\n                <ConfigEditor\n                  ref={editor}\n                  readOnly={false}\n                  configSchema={runConfigSchema}\n                  configCode={currentSession.runConfigYaml}\n                  onConfigChange={onConfigChange}\n                  onHelpContextChange={(next) => {\n                    if (!isHelpContextEqual(editorHelpContext, next)) {\n                      dispatch({type: 'set-editor-help-context', payload: next});\n                    }\n                  }}\n                  checkConfig={checkConfig}\n                />\n              }\n              second={\n                <ConfigEditorHelp\n                  context={editorHelpContext}\n                  allInnerTypes={runConfigSchema?.allConfigTypes || []}\n                />\n              }\n            />\n          </>\n        }\n        second={\n          <>\n            <LoadingOverlay\n              isLoading={previewLoading}\n              message={!runConfigSchema ? LOADING_CONFIG_SCHEMA : LOADING_RUN_PREVIEW}\n            />\n            <RunPreview\n              document={previewedDocument}\n              validation={preview ? preview.isPipelineConfigValid : null}\n              solidSelection={currentSession.solidSelection}\n              runConfigSchema={runConfigSchema}\n              onHighlightPath={(path) => editor.current?.moveCursorToPath(path)}\n              onRemoveExtraPaths={(paths) => onRemoveExtraPaths(paths)}\n              onScaffoldMissingConfig={onScaffoldMissingConfig}\n            />\n          </>\n        }\n      />\n\n      <LaunchButtonContainer launchpadType={launchpadType}>\n        <LaunchRootExecutionButton\n          title={launchButtonTitle}\n          pipelineName={pipeline.name}\n          getVariables={buildExecutionVariables}\n          disabled={preview?.isPipelineConfigValid?.__typename !== 'PipelineConfigValidationValid'}\n          behavior=\"open\"\n        />\n      </LaunchButtonContainer>\n    </>\n  );\n};\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default LaunchpadSession;\n\n// This helper removes __typename, which prevents tags from being passed back to GraphQL\nconst onlyKeyAndValue = ({key, value}: {key: string; value: string}) => ({key, value});\n\nconst deletePropertyPath = (obj: any, path: string) => {\n  const parts = path.split('.');\n\n  // Here we iterate through the parts of the path to get to\n  // the second to last nested object. This is so we can call `delete` using\n  // this object and the last part of the path.\n  for (let i = 0; i < parts.length - 1; i++) {\n    obj = obj[parts[i]];\n    if (typeof obj === 'undefined') {\n      return;\n    }\n  }\n\n  const lastKey = parts.pop();\n  if (lastKey) {\n    delete obj[lastKey];\n  }\n};\n\nconst PREVIEW_CONFIG_QUERY = gql`\n  query PreviewConfigQuery(\n    $pipeline: PipelineSelector!\n    $runConfigData: RunConfigData!\n    $mode: String!\n  ) {\n    isPipelineConfigValid(pipeline: $pipeline, runConfigData: $runConfigData, mode: $mode) {\n      ...ConfigEditorValidationFragment\n      ...RunPreviewValidationFragment\n    }\n  }\n  ${RUN_PREVIEW_VALIDATION_FRAGMENT}\n  ${CONFIG_EDITOR_VALIDATION_FRAGMENT}\n`;\n\nconst SessionSettingsSpacer = styled.div`\n  width: 5px;\n`;\n\nconst RUN_CONFIG_SCHEMA_OR_ERROR_FRAGMENT = gql`\n  fragment LaunchpadSessionRunConfigSchemaFragment on RunConfigSchemaOrError {\n    __typename\n    ... on RunConfigSchema {\n      ...ConfigEditorRunConfigSchemaFragment\n    }\n    ... on ModeNotFoundError {\n      message\n    }\n  }\n  ${CONFIG_EDITOR_RUN_CONFIG_SCHEMA_FRAGMENT}\n`;\n\nexport const PIPELINE_EXECUTION_CONFIG_SCHEMA_QUERY = gql`\n  query PipelineExecutionConfigSchemaQuery($selector: PipelineSelector!, $mode: String) {\n    runConfigSchemaOrError(selector: $selector, mode: $mode) {\n      ...LaunchpadSessionRunConfigSchemaFragment\n    }\n  }\n\n  ${RUN_CONFIG_SCHEMA_OR_ERROR_FRAGMENT}\n`;\n","import {NonIdealState, NonIdealStateProps, Spinner, SplitPanelContainer} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {SessionSettingsBar} from './SessionSettingsBar';\n\nexport const LaunchpadSessionError: React.FC<NonIdealStateProps> = (props) => (\n  <SplitPanelContainer\n    axis=\"vertical\"\n    identifier=\"execution\"\n    firstInitialPercent={75}\n    firstMinSize={100}\n    first={\n      <>\n        <SessionSettingsBar>\n          <Spinner purpose=\"section\" />\n        </SessionSettingsBar>\n        <NonIdealState {...props} />\n      </>\n    }\n    second={<div />}\n  />\n);\n","import {SplitPanelContainer} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {LoadingOverlay} from './LoadingOverlay';\nimport {SessionSettingsBar} from './SessionSettingsBar';\n\nconst LOADING_PIPELINE = `Loading pipeline and partition sets...`;\n\nexport const LaunchpadSessionLoading = () => (\n  <SplitPanelContainer\n    axis=\"vertical\"\n    identifier=\"execution\"\n    firstInitialPercent={75}\n    firstMinSize={100}\n    first={\n      <>\n        <LoadingOverlay isLoading message={LOADING_PIPELINE} />\n        <SessionSettingsBar />\n      </>\n    }\n    second={<LoadingOverlay isLoading message=\"Loading pipeline and partition sets...\" />}\n  />\n);\n","import {Group, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport const LoadingOverlay: React.FC<{\n  isLoading: boolean;\n  message: string;\n}> = ({isLoading, message}) => (\n  <LoadingOverlayContainer isLoading={isLoading}>\n    <Group direction=\"row\" spacing={8} alignItems=\"center\">\n      <Spinner purpose=\"body-text\" />\n      <div>{message}</div>\n    </Group>\n  </LoadingOverlayContainer>\n);\n\nconst LoadingOverlayContainer = styled.div<{isLoading: boolean}>`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  background-color: #fff;\n  z-index: 20;\n  display: ${({isLoading}) => (!isLoading ? 'none' : 'flex')};\n  align-items: center;\n  justify-content: center;\n  opacity: ${({isLoading}) => (isLoading ? '0.7' : '0')};\n  transition: opacity 150ms linear;\n  transition-delay: 300ms;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const SessionSettingsBar = styled.div`\n  color: white;\n  display: flex;\n  position: relative;\n  border-bottom: 1px solid ${Colors.Gray200};\n  background: ${Colors.White};\n  align-items: center;\n  height: 47px;\n  padding: 8px 10px;\n`;\n","import {\n  Box,\n  Button,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  TextInput,\n  Tooltip,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {PipelineRunTag} from '../app/ExecutionSessionStorage';\nimport {ShortcutHandler} from '../app/ShortcutHandler';\nimport {RunTag} from '../runs/RunTag';\n\ninterface ITagEditorProps {\n  tagsFromDefinition?: PipelineRunTag[];\n  tagsFromSession: PipelineRunTag[];\n  open: boolean;\n  onChange: (tags: PipelineRunTag[]) => void;\n  onRequestClose: () => void;\n}\n\ninterface ITagContainerProps {\n  tagsFromDefinition?: PipelineRunTag[];\n  tagsFromSession: PipelineRunTag[];\n  onRequestEdit: () => void;\n}\n\nexport const TagEditor: React.FC<ITagEditorProps> = ({\n  tagsFromDefinition = [],\n  tagsFromSession = [],\n  open,\n  onChange,\n  onRequestClose,\n}) => {\n  const [editState, setEditState] = React.useState(() =>\n    tagsFromSession.length ? tagsFromSession : [{key: '', value: ''}],\n  );\n\n  // Reset the edit state when you close and re-open the modal, or when\n  // tagsFromSession change while the modal is closed.\n  React.useEffect(() => {\n    if (!open) {\n      setEditState(tagsFromSession.length ? tagsFromSession : [{key: '', value: ''}]);\n    }\n  }, [tagsFromSession, open]);\n\n  const toSave: PipelineRunTag[] = editState\n    .map((tag: PipelineRunTag) => ({\n      key: tag.key.trim(),\n      value: tag.value.trim(),\n    }))\n    .filter((tag) => tag.key && tag.value);\n  const toError = editState\n    .map((tag: PipelineRunTag) => ({\n      key: tag.key.trim(),\n      value: tag.value.trim(),\n    }))\n    .filter((tag) => !tag.key !== !tag.value);\n\n  const onSave = () => {\n    if (!toError.length) {\n      onChange(toSave);\n      onRequestClose();\n    }\n  };\n\n  const disabled = editState === tagsFromSession || !!toError.length;\n\n  const onTagEdit = (key: string, value: string, idx: number) => {\n    setEditState((current) => [...current.slice(0, idx), {key, value}, ...current.slice(idx + 1)]);\n  };\n\n  const onRemove = (idx: number) => {\n    setEditState((current) => {\n      if (idx === 0 && current.length === 1) {\n        // If we're deleting the only item, just wipe it out.\n        return [{key: '', value: ''}];\n      }\n      return [...current.slice(0, idx), ...current.slice(idx + 1)];\n    });\n  };\n\n  const addTagEntry = () => {\n    setEditState((current) => [...current, {key: '', value: ''}]);\n  };\n\n  return (\n    <Dialog\n      icon=\"info\"\n      onClose={onRequestClose}\n      style={{minWidth: 700}}\n      title=\"Add tags to run\"\n      isOpen={open}\n    >\n      <DialogBody>\n        <Group spacing={16} direction=\"column\">\n          {tagsFromDefinition.length ? (\n            <Group direction=\"column\" spacing={8}>\n              <Box margin={{left: 2}} style={{fontSize: '13px', fontWeight: 500}}>\n                Tags from definition:\n              </Box>\n              <TagList>\n                {tagsFromDefinition.map((tag, idx) => {\n                  const {key} = tag;\n                  const anyOverride = editState.some((editable) => editable.key === key);\n                  if (anyOverride) {\n                    return (\n                      <Tooltip key={key} content=\"Overriden by custom tag value\" placement=\"top\">\n                        <span style={{opacity: 0.2}}>\n                          <RunTag tag={tag} key={idx} />\n                        </span>\n                      </Tooltip>\n                    );\n                  }\n                  return <RunTag tag={tag} key={key} />;\n                })}\n              </TagList>\n            </Group>\n          ) : null}\n          <Box flex={{direction: 'column', gap: 12}}>\n            <div>Custom tags:</div>\n            <Box flex={{direction: 'column', gap: 8}}>\n              {editState.map((tag, idx) => {\n                const {key, value} = tag;\n                return (\n                  <div\n                    key={idx}\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'row',\n                      gap: 8,\n                    }}\n                  >\n                    <TextInput\n                      placeholder=\"Tag Key\"\n                      value={key}\n                      onChange={(e) => onTagEdit(e.target.value, value, idx)}\n                    />\n                    <TextInput\n                      placeholder=\"Tag Value\"\n                      value={value}\n                      onChange={(e) => onTagEdit(key, e.target.value, idx)}\n                    />\n                    <Button\n                      disabled={editState.length === 1 && !key.trim() && !value.trim()}\n                      onClick={() => onRemove(idx)}\n                      icon={<Icon name=\"delete\" />}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                );\n              })}\n            </Box>\n            <Box margin={{left: 2}} flex={{direction: 'row'}}>\n              <Button onClick={addTagEntry} icon={<Icon name=\"add_circle\" />}>\n                Add custom tag\n              </Button>\n            </Box>\n          </Box>\n        </Group>\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={onRequestClose}>Cancel</Button>\n        <ShortcutHandler\n          shortcutLabel=\"⌥Enter\"\n          shortcutFilter={(e) => e.code === 'Enter' && e.altKey}\n          onShortcut={onSave}\n        >\n          <Button intent=\"primary\" onClick={onSave} disabled={disabled}>\n            Apply\n          </Button>\n        </ShortcutHandler>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nexport const TagContainer = ({tagsFromSession, tagsFromDefinition}: ITagContainerProps) => {\n  return (\n    <Container>\n      <TagList>\n        {tagsFromDefinition\n          ? tagsFromDefinition.map((tag, idx) => {\n              const {key} = tag;\n              const anyOverride = tagsFromSession.some((sessionTag) => sessionTag.key === key);\n              if (anyOverride) {\n                return (\n                  <Tooltip key={key} content=\"Overriden by custom tag value\" placement=\"top\">\n                    <span style={{opacity: 0.2}}>\n                      <RunTag tag={tag} key={idx} />\n                    </span>\n                  </Tooltip>\n                );\n              }\n              return <RunTag tag={tag} key={idx} />;\n            })\n          : undefined}\n        {tagsFromSession.map((tag, idx) => (\n          <RunTag tag={tag} key={idx} />\n        ))}\n      </TagList>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst TagList = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  gap: 4px;\n`;\n","import {FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nexport const showLaunchError = (error: Error) => {\n  console.error('Error launching run:', error);\n\n  const body =\n    error.message === 'Failed to fetch' ? (\n      <div style={{fontFamily: FontFamily.default}}>\n        Make sure the Dagit server is running and try again.\n      </div>\n    ) : (\n      <div>{error.message}</div>\n    );\n\n  showCustomAlert({\n    title: 'Could not launch run',\n    body,\n  });\n};\n","import {Box, Colors, Icon, IconWrapper, Spinner, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {usePermissions} from '../app/Permissions';\nimport {withMiddleTruncation} from '../app/Util';\nimport {repoAddressAsString} from '../workspace/repoAddressAsString';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ReloadRepositoryLocationButton} from './ReloadRepositoryLocationButton';\n\nexport const RepositoryLink: React.FC<{\n  repoAddress: RepoAddress;\n  showIcon?: boolean;\n  showRefresh?: boolean;\n}> = ({repoAddress, showIcon = false, showRefresh = true}) => {\n  const {location} = repoAddress;\n  const {canReloadRepositoryLocation} = usePermissions();\n\n  const repoAddressTruncated = [\n    withMiddleTruncation(repoAddress.name, {maxLength: 19}),\n    withMiddleTruncation(repoAddress.location, {maxLength: 19}),\n  ].join('@');\n\n  return (\n    <Box\n      flex={{display: 'inline-flex', direction: 'row', alignItems: 'center'}}\n      title={repoAddressAsString(repoAddress)}\n    >\n      {showIcon && <Icon name=\"folder\" style={{marginRight: 8}} color={Colors.Gray400} />}\n      <RepositoryName to={workspacePathFromAddress(repoAddress)}>\n        {repoAddressTruncated}\n      </RepositoryName>\n      {canReloadRepositoryLocation && showRefresh ? (\n        <ReloadRepositoryLocationButton location={location}>\n          {({tryReload, reloading}) => (\n            <ReloadTooltip\n              content={\n                reloading ? (\n                  'Reloading…'\n                ) : (\n                  <>\n                    Reload location <strong>{location}</strong>\n                  </>\n                )\n              }\n            >\n              {reloading ? (\n                <Spinner purpose=\"body-text\" />\n              ) : (\n                <StyledButton onClick={tryReload}>\n                  <Icon name=\"refresh\" color={Colors.Gray400} />\n                </StyledButton>\n              )}\n            </ReloadTooltip>\n          )}\n        </ReloadRepositoryLocationButton>\n      ) : null}\n    </Box>\n  );\n};\n\nconst RepositoryName = styled(Link)`\n  max-width: 280px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ReloadTooltip = styled(Tooltip)`\n  margin-left: 4px;\n\n  && {\n    display: block;\n  }\n`;\n\nconst StyledButton = styled.button`\n  background-color: transparent;\n  border: 0;\n  cursor: pointer;\n  display: block;\n  padding: 0;\n  margin: 0;\n\n  :focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  & ${IconWrapper} {\n    display: block;\n    transition: color 100ms linear;\n  }\n\n  :hover ${IconWrapper} {\n    color: ${Colors.Blue500};\n  }\n`;\n","import {Box, ButtonLink, Colors, Tag, Tooltip, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {ScheduleSwitch} from '../schedules/ScheduleSwitch';\nimport {humanCronString} from '../schedules/humanCronString';\nimport {ScheduleSwitchFragment} from '../schedules/types/ScheduleSwitchFragment';\nimport {SensorSwitch} from '../sensors/SensorSwitch';\nimport {SensorSwitchFragment} from '../sensors/types/SensorSwitchFragment';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ScheduleAndSensorDialog} from './ScheduleAndSensorDialog';\n\nexport const ScheduleOrSensorTag: React.FC<{\n  schedules: ScheduleSwitchFragment[];\n  sensors: SensorSwitchFragment[];\n  repoAddress: RepoAddress;\n  showSwitch?: boolean;\n}> = ({schedules, sensors, repoAddress, showSwitch = true}) => {\n  const [open, setOpen] = React.useState(false);\n\n  const scheduleCount = schedules.length;\n  const sensorCount = sensors.length;\n\n  if (scheduleCount > 1 || sensorCount > 1 || (scheduleCount && sensorCount)) {\n    const buttonText =\n      scheduleCount && sensorCount\n        ? `View ${scheduleCount + sensorCount} schedules/sensors`\n        : scheduleCount\n        ? `View ${scheduleCount} schedules`\n        : `View ${sensorCount} sensors`;\n\n    const icon = scheduleCount > 1 ? 'schedule' : 'sensors';\n\n    return (\n      <>\n        <Tag icon={icon}>\n          <ButtonLink onClick={() => setOpen(true)} color={Colors.Link}>\n            {buttonText}\n          </ButtonLink>\n        </Tag>\n        <ScheduleAndSensorDialog\n          isOpen={open}\n          onClose={() => setOpen(false)}\n          repoAddress={repoAddress}\n          schedules={schedules}\n          sensors={sensors}\n          showSwitch={showSwitch}\n        />\n      </>\n    );\n  }\n\n  if (scheduleCount) {\n    return (\n      <MatchingSchedule schedule={schedules[0]} repoAddress={repoAddress} showSwitch={showSwitch} />\n    );\n  }\n\n  if (sensorCount) {\n    return <MatchingSensor sensor={sensors[0]} repoAddress={repoAddress} showSwitch={showSwitch} />;\n  }\n\n  return null;\n};\n\nconst MatchingSchedule: React.FC<{\n  schedule: ScheduleSwitchFragment;\n  repoAddress: RepoAddress;\n  showSwitch: boolean;\n}> = ({schedule, repoAddress, showSwitch}) => {\n  const {cronSchedule, executionTimezone, scheduleState} = schedule;\n  const running = scheduleState.status === 'RUNNING';\n  const tag = (\n    <Tag intent={running ? 'primary' : 'none'} icon=\"schedule\">\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        Schedule:\n        <Link to={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}>\n          {humanCronString(cronSchedule, executionTimezone || 'UTC')}\n        </Link>\n        {showSwitch ? (\n          <ScheduleSwitch size=\"small\" repoAddress={repoAddress} schedule={schedule} />\n        ) : null}\n      </Box>\n    </Tag>\n  );\n\n  return schedule.cronSchedule ? (\n    <Tooltip\n      placement=\"bottom\"\n      content={\n        <Box flex={{direction: 'column', gap: 4}}>\n          <div>\n            Name: <strong>{schedule.name}</strong>\n          </div>\n          <div>\n            Cron:{' '}\n            <span style={{fontFamily: FontFamily.monospace, marginLeft: '4px'}}>\n              ({schedule.cronSchedule})\n            </span>\n          </div>\n          <div>\n            Timezone: <strong>{schedule.executionTimezone || 'UTC'}</strong>\n          </div>\n        </Box>\n      }\n    >\n      {tag}\n    </Tooltip>\n  ) : (\n    tag\n  );\n};\n\nconst MatchingSensor: React.FC<{\n  sensor: SensorSwitchFragment;\n  repoAddress: RepoAddress;\n  showSwitch: boolean;\n}> = ({sensor, repoAddress, showSwitch}) => {\n  const running = sensor.sensorState.status === 'RUNNING';\n  return (\n    <Tag intent={running ? 'primary' : 'none'} icon=\"sensors\">\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        Sensor:\n        <Link to={workspacePathFromAddress(repoAddress, `/sensors/${sensor.name}`)}>\n          {sensor.name}\n        </Link>\n        {showSwitch ? (\n          <SensorSwitch size=\"small\" repoAddress={repoAddress} sensor={sensor} />\n        ) : null}\n      </Box>\n    </Tag>\n  );\n};\n","import {gql} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {Code} from '@blueprintjs/core';\nimport {Colors, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from '../typeexplorer/TypeWithTooltip';\n\nimport {OpTypeSignatureFragment} from './types/OpTypeSignatureFragment';\n\ninterface IOpTypeSignature {\n  definition: OpTypeSignatureFragment;\n}\n\nexport const OpTypeSignature: React.FC<IOpTypeSignature> = (props) => {\n  const {inputDefinitions, outputDefinitions} = props.definition;\n\n  const inputSide = inputDefinitions.map((input, i) => (\n    <span key={i}>\n      {breakOnUnderscores(input.name)}: <TypeWithTooltip type={input.type} />\n      {i < inputDefinitions.length - 1 ? ', ' : ''}\n    </span>\n  ));\n  const outputSide = outputDefinitions.map((output, i) => (\n    <span key={i}>\n      {breakOnUnderscores(output.name)}: <TypeWithTooltip type={output.type} />\n      {i < outputDefinitions.length - 1 ? ', ' : ''}\n    </span>\n  ));\n  return (\n    <TypeSignature>\n      ({inputSide}) ⇒ ({outputSide})\n    </TypeSignature>\n  );\n};\n\nexport const OP_TYPE_SIGNATURE_FRAGMENT = gql`\n  fragment OpTypeSignatureFragment on ISolidDefinition {\n    outputDefinitions {\n      name\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    inputDefinitions {\n      name\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n\nconst TypeSignature = styled(Code)`\n  && {\n    background: ${Colors.Blue50};\n    font-family: ${FontFamily.monospace};\n    font-size: 14px;\n    padding: 4px;\n    box-shadow: none;\n    color: black;\n  }\n`;\n","import {TextInput} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nexport const PartitionRangeInput: React.FC<{\n  value: string[];\n  onChange: (partitionNames: string[]) => void;\n  partitionNames: string[];\n}> = ({value, onChange, partitionNames}) => {\n  const [valueString, setValueString] = React.useState('');\n  const partitionNameJSON = React.useMemo(() => JSON.stringify(partitionNames), [partitionNames]);\n\n  React.useEffect(() => {\n    const partitionNameArr = JSON.parse(partitionNameJSON);\n    setValueString(partitionsToText(value, partitionNameArr));\n  }, [value, partitionNameJSON]);\n\n  const placeholder = React.useMemo(() => {\n    return placeholderForPartitions(partitionNames);\n  }, [partitionNames]);\n\n  const tryCommit = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    try {\n      onChange(textToPartitions(valueString, partitionNames));\n    } catch (err: any) {\n      e.preventDefault();\n      showCustomAlert({body: err.message});\n    }\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      tryCommit(e);\n    }\n  };\n\n  return (\n    <TextInput\n      placeholder={placeholder}\n      value={valueString}\n      style={{display: 'flex', width: '100%', flex: 1, flexGrow: 1}}\n      onChange={(e) => setValueString(e.currentTarget.value)}\n      onKeyDown={onKeyDown}\n      onBlur={tryCommit}\n    />\n  );\n};\n\nexport function assembleIntoSpans(keys: string[], keyTestFn: (key: string) => boolean) {\n  const spans: {startIdx: number; endIdx: number; status: boolean}[] = [];\n\n  for (let ii = 0; ii < keys.length; ii++) {\n    const status = keyTestFn(keys[ii]);\n    if (!spans.length || spans[spans.length - 1].status !== status) {\n      spans.push({startIdx: ii, endIdx: ii, status});\n    } else {\n      spans[spans.length - 1].endIdx = ii;\n    }\n  }\n\n  return spans;\n}\n\nexport function stringForSpan(\n  {startIdx, endIdx}: {startIdx: number; endIdx: number},\n  all: string[],\n) {\n  return startIdx === endIdx ? all[startIdx] : `[${all[startIdx]}...${all[endIdx]}]`;\n}\n\nfunction placeholderForPartitions(names: string[]) {\n  if (names.length < 4) {\n    return `ex: ${names[0]}, ${names[1]}`;\n  }\n  return `ex: ${names[0]}, ${names[1]}, [${names[2]}...${names[names.length - 1]}]`;\n}\n\nfunction textToPartitions(selected: string, all: string[]) {\n  const terms = selected.split(',').map((s) => s.trim());\n  const result = [];\n  for (const term of terms) {\n    if (term.length === 0) {\n      continue;\n    }\n    const rangeMatch = /^\\[(.*)\\.\\.\\.(.*)\\]$/g.exec(term);\n    if (rangeMatch) {\n      const [, start, end] = rangeMatch;\n      const allStartIdx = all.indexOf(start);\n      const allEndIdx = all.indexOf(end);\n      if (allStartIdx === -1 || allEndIdx === -1) {\n        throw new Error(`Could not find partitions for provided range: ${start}...${end}`);\n      }\n      result.push(...all.slice(allStartIdx, allEndIdx + 1));\n    } else if (term.includes('*')) {\n      const [prefix, suffix] = term.split('*');\n      result.push(...all.filter((p) => p.startsWith(prefix) && p.endsWith(suffix)));\n    } else {\n      const idx = all.indexOf(term);\n      if (idx === -1) {\n        throw new Error(`Could not find partition: ${term}`);\n      }\n      result.push(term);\n    }\n  }\n  return result.sort((a, b) => all.indexOf(a) - all.indexOf(b));\n}\n\nfunction partitionsToText(selected: string[], all: string[]) {\n  return assembleIntoSpans(all, (key) => selected.includes(key))\n    .filter((s) => s.status)\n    .map((s) => stringForSpan(s, all))\n    .join(', ');\n}\n","import {Box, Tooltip, Colors} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useViewport} from '../gantt/useViewport';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {assembleIntoSpans} from './PartitionRangeInput';\n\ntype SelectionRange = {\n  start: string;\n  end: string;\n};\n\nconst MIN_SPAN_WIDTH = 8;\n\nexport const PartitionStatus: React.FC<{\n  partitionNames: string[];\n  partitionData: {[name: string]: RunStatus | null};\n  selected?: string[];\n  small?: boolean;\n  onClick?: (partitionName: string) => void;\n  onSelect?: (selection: string[]) => void;\n  splitPartitions?: boolean;\n  hideStatusTooltip?: boolean;\n  tooltipMessage?: string;\n  selectionWindowSize?: number;\n}> = ({\n  partitionNames,\n  partitionData,\n  selected,\n  onSelect,\n  onClick,\n  splitPartitions,\n  small,\n  selectionWindowSize,\n  hideStatusTooltip,\n  tooltipMessage,\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const [currentSelectionRange, setCurrentSelectionRange] = React.useState<\n    SelectionRange | undefined\n  >();\n  const {viewport, containerProps} = useViewport();\n\n  const toPartitionName = React.useCallback(\n    (e: MouseEvent) => {\n      if (!ref.current) {\n        return null;\n      }\n      const percentage =\n        (e.clientX - ref.current.getBoundingClientRect().left) / ref.current.clientWidth;\n      return partitionNames[Math.floor(percentage * partitionNames.length)];\n    },\n    [partitionNames, ref],\n  );\n  const getRangeSelection = React.useCallback(\n    (start: string, end: string) => {\n      const startIdx = partitionNames.indexOf(start);\n      const endIdx = partitionNames.indexOf(end);\n      return partitionNames.slice(Math.min(startIdx, endIdx), Math.max(startIdx, endIdx) + 1);\n    },\n    [partitionNames],\n  );\n\n  React.useEffect(() => {\n    if (!currentSelectionRange || !onSelect || !selected) {\n      return;\n    }\n    const setHoveredSelectionRange = (e: MouseEvent) => {\n      const end = toPartitionName(e) || currentSelectionRange.end;\n      setCurrentSelectionRange({start: currentSelectionRange?.start, end});\n    };\n    const setSelectionRange = (e: MouseEvent) => {\n      if (!currentSelectionRange) {\n        return;\n      }\n      const end = toPartitionName(e);\n      const currentSelection = getRangeSelection(\n        currentSelectionRange.start,\n        end || currentSelectionRange.end,\n      );\n      const allSelected = currentSelection.every((name) => selected.includes(name));\n      if (allSelected) {\n        onSelect(selected.filter((x) => !currentSelection.includes(x)));\n      } else {\n        const newSelected = new Set(selected);\n        currentSelection.forEach((name) => newSelected.add(name));\n        onSelect(Array.from(newSelected));\n      }\n      setCurrentSelectionRange(undefined);\n    };\n    window.addEventListener('mousemove', setHoveredSelectionRange);\n    window.addEventListener('mouseup', setSelectionRange);\n    return () => {\n      window.removeEventListener('mousemove', setHoveredSelectionRange);\n      window.removeEventListener('mouseup', setSelectionRange);\n    };\n  }, [onSelect, selected, currentSelectionRange, getRangeSelection, toPartitionName]);\n\n  const selectedSpans = selected\n    ? assembleIntoSpans(partitionNames, (key) => selected.includes(key)).filter((s) => s.status)\n    : [];\n  const spans = splitPartitions\n    ? partitionNames.map((name, idx) => ({startIdx: idx, endIdx: idx, status: partitionData[name]}))\n    : _partitionsToSpans(partitionNames, partitionData);\n  const highestIndex = spans.map((s) => s.endIdx).reduce((prev, cur) => Math.max(prev, cur), 0);\n  const indexToPct = (idx: number) => `${((idx * 100) / partitionNames.length).toFixed(3)}%`;\n  const showSeparators =\n    splitPartitions && viewport.width > MIN_SPAN_WIDTH * (partitionNames.length + 1);\n\n  const _onClick = onClick\n    ? (e: React.MouseEvent<any, MouseEvent>) => {\n        const partitionName = toPartitionName(e.nativeEvent);\n        partitionName && onClick(partitionName);\n      }\n    : undefined;\n\n  const _onMouseDown = onSelect\n    ? (e: React.MouseEvent<any, MouseEvent>) => {\n        const name = toPartitionName(e.nativeEvent);\n        if (!name) {\n          return;\n        }\n        setCurrentSelectionRange({start: name, end: name});\n      }\n    : undefined;\n\n  return (\n    <div {...containerProps}>\n      {selected && !selectionWindowSize ? (\n        <div style={{position: 'relative', width: '100%', overflowX: 'hidden', height: 10}}>\n          {selectedSpans.map((s) => (\n            <div\n              key={s.startIdx}\n              style={{\n                left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n                width: indexToPct(s.endIdx - s.startIdx + 1),\n                position: 'absolute',\n                top: 0,\n                height: 8,\n                border: `2px solid ${Colors.Blue500}`,\n                borderBottom: 0,\n              }}\n            />\n          ))}\n        </div>\n      ) : null}\n      <div\n        style={{\n          position: 'relative',\n          width: '100%',\n          height: small ? 12 : 24,\n          borderRadius: 4,\n          overflow: 'hidden',\n          cursor: 'pointer',\n        }}\n        ref={ref}\n        onClick={_onClick}\n        onMouseDown={_onMouseDown}\n      >\n        {spans.map((s) => (\n          <div\n            key={s.startIdx}\n            style={{\n              left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n              width: indexToPct(s.endIdx - s.startIdx + 1),\n              minWidth: s.status ? 2 : undefined,\n              position: 'absolute',\n              zIndex: s.startIdx === 0 || s.endIdx === highestIndex ? 3 : s.status ? 2 : 1, //End-caps, then statuses, then missing\n              top: 0,\n            }}\n          >\n            {hideStatusTooltip || tooltipMessage ? (\n              <div\n                style={{\n                  width: '100%',\n                  height: 24,\n                  outline: 'none',\n                  background: _statusToColor(s.status),\n                }}\n                title={tooltipMessage}\n              />\n            ) : (\n              <Tooltip\n                display=\"block\"\n                content={\n                  tooltipMessage\n                    ? tooltipMessage\n                    : s.startIdx === s.endIdx\n                    ? `Partition ${partitionNames[s.startIdx]} is ${_statusToText(s.status)}`\n                    : `Partitions ${partitionNames[s.startIdx]} through ${\n                        partitionNames[s.endIdx]\n                      } are ${_statusToText(s.status)}`\n                }\n              >\n                <div\n                  style={{\n                    width: '100%',\n                    height: 24,\n                    outline: 'none',\n                    background: _statusToColor(s.status),\n                  }}\n                />\n              </Tooltip>\n            )}\n          </div>\n        ))}\n        {showSeparators\n          ? spans.slice(1).map((s) => (\n              <div\n                key={`separator_${s.startIdx}`}\n                style={{\n                  left: `min(calc(100% - 2px), ${indexToPct(s.startIdx)})`,\n                  width: 1,\n                  height: small ? 14 : 24,\n                  position: 'absolute',\n                  zIndex: 4,\n                  background: Colors.KeylineGray,\n                  top: 0,\n                }}\n              />\n            ))\n          : null}\n        {currentSelectionRange ? (\n          <div\n            key=\"currentSelectionRange\"\n            style={{\n              left: `min(calc(100% - 2px), ${indexToPct(\n                Math.min(\n                  partitionNames.indexOf(currentSelectionRange.start),\n                  partitionNames.indexOf(currentSelectionRange.end),\n                ),\n              )})`,\n              width: indexToPct(\n                Math.abs(\n                  partitionNames.indexOf(currentSelectionRange.end) -\n                    partitionNames.indexOf(currentSelectionRange.start),\n                ) + 1,\n              ),\n              minWidth: 2,\n              height: small ? 14 : 24,\n              position: 'absolute',\n              zIndex: 4,\n              background: Colors.White,\n              opacity: 0.7,\n              top: 0,\n            }}\n          />\n        ) : null}\n        {selected && selected.length && selectionWindowSize ? (\n          <>\n            <div\n              key=\"selectionRangeBackgroundLeft\"\n              style={{\n                left: 0,\n                width: indexToPct(\n                  Math.min(\n                    partitionNames.indexOf(selected[selected.length - 1]),\n                    partitionNames.indexOf(selected[0]),\n                  ),\n                ),\n                height: small ? 14 : 24,\n                position: 'absolute',\n                zIndex: 5,\n                background: Colors.White,\n                opacity: 0.5,\n                top: 0,\n              }}\n            />\n            <div\n              key=\"selectionRange\"\n              style={{\n                left: `min(calc(100% - 3px), ${indexToPct(\n                  Math.min(\n                    partitionNames.indexOf(selected[0]),\n                    partitionNames.indexOf(selected[selected.length - 1]),\n                  ),\n                )})`,\n                width: indexToPct(\n                  Math.abs(\n                    partitionNames.indexOf(selected[selected.length - 1]) -\n                      partitionNames.indexOf(selected[0]),\n                  ) + 1,\n                ),\n                minWidth: 2,\n                height: small ? 14 : 24,\n                position: 'absolute',\n                zIndex: 5,\n                border: `3px solid ${Colors.Dark}`,\n                borderRadius: 4,\n                top: 0,\n              }}\n            />\n            <div\n              key=\"selectionRangeBackgroundRight\"\n              style={{\n                right: 0,\n                width: indexToPct(\n                  partitionNames.length -\n                    1 -\n                    Math.max(\n                      partitionNames.indexOf(selected[selected.length - 1]),\n                      partitionNames.indexOf(selected[0]),\n                    ),\n                ),\n                height: small ? 14 : 24,\n                position: 'absolute',\n                zIndex: 5,\n                background: Colors.White,\n                opacity: 0.5,\n                top: 0,\n              }}\n            />\n          </>\n        ) : null}\n      </div>\n      {!splitPartitions ? (\n        <Box\n          flex={{justifyContent: 'space-between'}}\n          margin={{top: 4}}\n          style={{fontSize: '0.8rem', color: Colors.Gray500}}\n        >\n          <span>{partitionNames[0]}</span>\n          <span>{partitionNames[partitionNames.length - 1]}</span>\n        </Box>\n      ) : null}\n    </div>\n  );\n};\n\nfunction _partitionsToSpans(keys: string[], keyStatus: {[key: string]: RunStatus | null}) {\n  const spans: {startIdx: number; endIdx: number; status: RunStatus | null}[] = [];\n\n  for (let ii = 0; ii < keys.length; ii++) {\n    const status: RunStatus | null = keys[ii] in keyStatus ? keyStatus[keys[ii]] : null;\n    if (!spans.length || spans[spans.length - 1].status !== status) {\n      spans.push({startIdx: ii, endIdx: ii, status});\n    } else {\n      spans[spans.length - 1].endIdx = ii;\n    }\n  }\n\n  return spans;\n}\n\nconst _statusToColor = (status: RunStatus | null) => {\n  switch (status) {\n    case RunStatus.SUCCESS:\n      return Colors.Green500;\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return Colors.Red500;\n    case RunStatus.STARTED:\n      return Colors.Blue500;\n    case RunStatus.QUEUED:\n      return Colors.Blue200;\n    default:\n      return Colors.Gray200;\n  }\n};\n\nconst _statusToText = (status: RunStatus | null) => {\n  switch (status) {\n    case RunStatus.SUCCESS:\n      return 'complete';\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n    case RunStatus.FAILURE:\n      return 'failed';\n    case RunStatus.STARTED:\n      return 'in progress';\n    case RunStatus.QUEUED:\n      return 'queued';\n    default:\n      return 'missing';\n  }\n};\n","import {gql, useQuery} from '@apollo/client';\nimport {NonIdealState, Spinner} from '@dagster-io/ui';\nimport React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from '../runs/RunTable';\nimport {DagsterTag} from '../runs/RunTag';\nimport {StepEventStatus} from '../types/globalTypes';\n\nimport {\n  PartitionRunListForStepQuery,\n  PartitionRunListForStepQueryVariables,\n} from './types/PartitionRunListForStepQuery';\n\ninterface StepStats {\n  startTime: number | null;\n  endTime: number | null;\n  status: StepEventStatus | null;\n  materializations: Record<string, unknown>[];\n  expectationResults: {success: boolean}[];\n}\n\ninterface PartitionRunListForStepProps {\n  pipelineName: string;\n  partitionName: string;\n  stepName: string;\n  stepStatsByRunId: {\n    [runId: string]: StepStats;\n  };\n}\n\nexport const PartitionRunListForStep: React.FC<PartitionRunListForStepProps> = (props) => {\n  const {data, loading} = useQuery<\n    PartitionRunListForStepQuery,\n    PartitionRunListForStepQueryVariables\n  >(PARTITION_RUN_LIST_FOR_STEP_QUERY, {\n    variables: {\n      filter: {\n        pipelineName: props.pipelineName,\n        tags: [{key: DagsterTag.Partition, value: props.partitionName}],\n      },\n    },\n  });\n\n  if (loading || !data) {\n    return <Spinner purpose=\"section\" />;\n  }\n\n  if (data.pipelineRunsOrError.__typename !== 'Runs') {\n    return (\n      <NonIdealState\n        icon=\"error\"\n        title=\"Query Error\"\n        description={data.pipelineRunsOrError.message}\n      />\n    );\n  }\n  return (\n    <div>\n      <RunTable\n        runs={data.pipelineRunsOrError.results}\n        additionalColumnHeaders={[\n          <th key=\"context\" style={{maxWidth: 150}}>\n            Step Info\n          </th>,\n        ]}\n      />\n    </div>\n  );\n};\n\nconst PARTITION_RUN_LIST_FOR_STEP_QUERY = gql`\n  query PartitionRunListForStepQuery($filter: RunsFilter!) {\n    pipelineRunsOrError(filter: $filter, limit: 500) {\n      ... on PipelineRuns {\n        results {\n          ...RunTableRunFragment\n          id\n          runId\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  Colors,\n  DialogFooter,\n  Dialog,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useViewport} from '../gantt/useViewport';\nimport {GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT} from '../pipelines/GraphExplorer';\nimport {linkToRunEvent} from '../runs/RunUtils';\nimport {RunFilterToken} from '../runs/RunsFilterInput';\nimport {MenuLink} from '../ui/MenuLink';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\n\nimport {PartitionRunListForStep} from './PartitionRunListForStep';\nimport {\n  BOX_SIZE,\n  GridColumn,\n  GridFloatingContainer,\n  LeftLabel,\n  TopLabel,\n  topLabelHeightForLabels,\n  TopLabelTilted,\n} from './RunMatrixUtils';\nimport {PartitionMatrixStepRunFragment} from './types/PartitionMatrixStepRunFragment';\nimport {\n  PartitionStepStatusPipelineQuery,\n  PartitionStepStatusPipelineQueryVariables,\n} from './types/PartitionStepStatusPipelineQuery';\nimport {\n  isStepKeyForNode,\n  MatrixStep,\n  PartitionRuns,\n  StatusSquareFinalColor,\n  useMatrixData,\n} from './useMatrixData';\n\ninterface PartitionRunSelection {\n  partitionName: string;\n  stepName: string;\n}\n\ninterface PartitionStepStatusProps {\n  pipelineName: string;\n  partitionNames: string[];\n  partitions: PartitionRuns[];\n  repoAddress: RepoAddress;\n  runFilters?: RunFilterToken[];\n  setRunFilters?: (val: RunFilterToken[]) => void;\n  offset: number;\n  setOffset: (val: number) => void;\n  setPageSize: (val: number) => void;\n}\n\nconst timeboundsOfPartitions = (partitionColumns: {steps: {unix: number}[]}[]) => {\n  let [minUnix, maxUnix] = [Date.now() / 1000, 1];\n  for (const partition of partitionColumns) {\n    for (const step of partition.steps) {\n      if (step.unix === 0) {\n        continue;\n      }\n      [minUnix, maxUnix] = [Math.min(minUnix, step.unix), Math.max(maxUnix, step.unix)];\n    }\n  }\n  return [minUnix, maxUnix] as const;\n};\n\nexport const PartitionStepStatus: React.FC<PartitionStepStatusProps> = (props) => {\n  const {viewport, containerProps} = useViewport();\n  const [hovered, setHovered] = React.useState<PartitionRunSelection | null>(null);\n  const [focused, setFocused] = React.useState<PartitionRunSelection | null>(null);\n  const {setPageSize} = props;\n\n  React.useEffect(() => {\n    if (viewport.width) {\n      const pageSize = Math.ceil(viewport.width / BOX_SIZE) - BUFFER;\n      setPageSize(pageSize);\n    }\n  }, [viewport.width, setPageSize]);\n\n  // Retrieve the pipeline's structure\n  const repositorySelector = repoAddressToSelector(props.repoAddress);\n  const pipelineSelector = {...repositorySelector, pipelineName: props.pipelineName};\n  const pipeline = useQuery<\n    PartitionStepStatusPipelineQuery,\n    PartitionStepStatusPipelineQueryVariables\n  >(PARTITION_STEP_STATUS_PIPELINE_QUERY, {\n    variables: {pipelineSelector},\n  });\n\n  const solidHandles =\n    pipeline.data?.pipelineSnapshotOrError.__typename === 'PipelineSnapshot' &&\n    pipeline.data.pipelineSnapshotOrError.solidHandles;\n\n  const data = useMatrixData({\n    partitionNames: props.partitionNames,\n    partitions: props.partitions,\n    stepQuery: '',\n    solidHandles,\n  });\n\n  if (!data || !solidHandles) {\n    return <span />;\n  }\n\n  const {stepRows, partitionColumns} = data;\n\n  const sortPartitionSteps = (steps: MatrixStep[]) => {\n    const stepsByName = {};\n    steps.forEach((step) => (stepsByName[step.name] = step));\n    return stepRows.map((stepRow) => stepsByName[stepRow.name]);\n  };\n\n  const BUFFER = 3;\n  const visibleCount = Math.ceil(viewport.width / BOX_SIZE) - BUFFER;\n  const visibleStart = Math.max(0, partitionColumns.length - props.offset - visibleCount);\n  const visibleEnd = Math.max(visibleCount, partitionColumns.length - props.offset);\n  const visibleColumns = partitionColumns.slice(visibleStart, visibleEnd);\n  const [minUnix, maxUnix] = timeboundsOfPartitions(partitionColumns);\n  const topLabelHeight = topLabelHeightForLabels(partitionColumns.map((p) => p.name));\n\n  return (\n    <PartitionRunMatrixContainer>\n      <Dialog\n        isOpen={!!focused}\n        onClose={() => setFocused(null)}\n        style={{width: '90vw'}}\n        title={focused ? `${focused.partitionName} runs (${focused.stepName})` : ''}\n      >\n        <Box padding={{bottom: 12}}>\n          {focused && (\n            <PartitionRunListForStep\n              pipelineName={props.pipelineName}\n              partitionName={focused.partitionName}\n              stepName={focused.stepName}\n              stepStatsByRunId={Object.assign(\n                {},\n                ...(props.partitions.find((p) => p.name === focused.partitionName)?.runs || []).map(\n                  (run) => ({\n                    [run.runId]: run.stepStats.find((s) =>\n                      isStepKeyForNode(focused.stepName, s.stepKey),\n                    ),\n                  }),\n                ),\n              )}\n            />\n          )}\n        </Box>\n        <DialogFooter>\n          <Button intent=\"primary\" autoFocus={true} onClick={() => setFocused(null)}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n      <div\n        style={{\n          position: 'relative',\n          display: 'flex',\n          borderBottom: `1px solid ${Colors.KeylineGray}`,\n        }}\n      >\n        <GridFloatingContainer floating={props.offset + visibleCount < props.partitionNames.length}>\n          <GridColumn disabled style={{flex: 1, flexShrink: 1, overflow: 'hidden'}}>\n            <TopLabel style={{height: topLabelHeight}} />\n            <LeftLabel style={{paddingLeft: 24}}>Number of Runs</LeftLabel>\n            <Divider />\n            {stepRows.map((step) => (\n              <LeftLabel\n                style={{paddingLeft: 8 + step.x}}\n                key={step.name}\n                data-tooltip={step.name}\n                hovered={step.name === hovered?.stepName}\n              >\n                {step.name}\n              </LeftLabel>\n            ))}\n          </GridColumn>\n        </GridFloatingContainer>\n\n        {props.offset + visibleCount < props.partitionNames.length ? (\n          <PagerControl\n            $direction=\"left\"\n            onClick={() =>\n              props.setOffset(\n                Math.max(\n                  0,\n                  Math.min(\n                    props.offset + visibleCount - 1,\n                    props.partitionNames.length - visibleCount,\n                  ),\n                ),\n              )\n            }\n          >\n            <Icon name=\"chevron_left\" />\n          </PagerControl>\n        ) : null}\n        <div style={{flex: 1, overflow: 'hidden', position: 'relative'}} {...containerProps}>\n          <div\n            style={{\n              width: partitionColumns.length * BOX_SIZE,\n              position: 'absolute',\n              height: '100%',\n              right: 0,\n              zIndex: 1,\n            }}\n          >\n            {visibleColumns.map((p, idx) => (\n              <GridColumn\n                key={p.name}\n                style={{\n                  zIndex: visibleColumns.length - idx,\n                  width: BOX_SIZE,\n                  position: 'absolute',\n                  right: (visibleCount - idx) * BOX_SIZE + 20,\n                }}\n              >\n                <TopLabelTilted $height={topLabelHeight} label={p.name} />\n                {p.runsLoaded ? (\n                  <LeftLabel style={{textAlign: 'center'}}>{p.runs.length}</LeftLabel>\n                ) : (\n                  <LeftLabel style={{textAlign: 'center', opacity: 0.2}}>–</LeftLabel>\n                )}\n                <Divider />\n                {sortPartitionSteps(p.steps).map((s) => (\n                  <PartitionStepSquare\n                    key={s.name}\n                    step={s}\n                    runs={p.runs}\n                    runsLoaded={p.runsLoaded}\n                    minUnix={minUnix}\n                    maxUnix={maxUnix}\n                    hovered={hovered}\n                    setHovered={setHovered}\n                    setFocused={setFocused}\n                    partitionName={p.name}\n                  />\n                ))}\n              </GridColumn>\n            ))}\n          </div>\n        </div>\n        {props.offset > 0 ? (\n          <PagerControl\n            $direction=\"right\"\n            onClick={() => props.setOffset(Math.max(0, props.offset - visibleCount))}\n          >\n            <Icon name=\"chevron_right\" />\n          </PagerControl>\n        ) : null}\n      </div>\n    </PartitionRunMatrixContainer>\n  );\n};\n\nconst PagerControl = styled.div<{$direction: 'left' | 'right'}>`\n  width: 30px;\n  position: absolute;\n  border: 1px solid ${Colors.KeylineGray};\n  border-radius: 3px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: calc(50% - 15px);\n  bottom: calc(50% - 15px);\n  ${({$direction}) => ($direction === 'left' ? 'left: 315px;' : 'right: 0;')}\n  background: white;\n  z-index: 10;\n\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  &:hover {\n    background: #ececec;\n  }\n`;\n\nconst PartitionRunMatrixContainer = styled.div`\n  display: block;\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  width: 100%;\n  margin-top: 5px;\n  border-top: 1px solid ${Colors.KeylineGray};\n`;\n\nexport const PARTITION_STEP_STATUS_RUN_FRAGMENT = gql`\n  fragment PartitionStepStatusRun on Run {\n    id\n    runId\n    tags {\n      key\n      value\n    }\n    stepStats {\n      __typename\n      stepKey\n      status\n    }\n  }\n`;\n\n// add in the explorer fragment, so we can reconstruct the faux-plan steps from the exploded plan\n// in the same way we construct the explorer graph\nconst PARTITION_STEP_STATUS_PIPELINE_QUERY = gql`\n  query PartitionStepStatusPipelineQuery($pipelineSelector: PipelineSelector) {\n    pipelineSnapshotOrError(activePipelineSelector: $pipelineSelector) {\n      ... on PipelineSnapshot {\n        id\n        name\n        solidHandles {\n          handleID\n          solid {\n            name\n            definition {\n              name\n            }\n            inputs {\n              dependsOn {\n                solid {\n                  name\n                }\n              }\n            }\n            outputs {\n              dependedBy {\n                solid {\n                  name\n                }\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n      }\n    }\n  }\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n`;\n\nconst PartitionStepSquare: React.FC<{\n  step: MatrixStep;\n  runs: PartitionMatrixStepRunFragment[];\n  runsLoaded: boolean;\n  hovered: PartitionRunSelection | null;\n  minUnix: number;\n  maxUnix: number;\n  partitionName: string;\n  setHovered: (hovered: PartitionRunSelection | null) => void;\n  setFocused: (hovered: PartitionRunSelection | null) => void;\n}> = ({step, runs, runsLoaded, hovered, setHovered, setFocused, partitionName}) => {\n  const [opened, setOpened] = React.useState(false);\n  const {name, color} = step;\n\n  const className = `square\n  ${!runsLoaded ? 'loading' : runs.length === 0 ? 'empty' : ''}\n  ${(StatusSquareFinalColor[color] || color).toLowerCase()}`;\n\n  const content = (\n    <div\n      className={className}\n      onMouseEnter={() => setHovered({stepName: name, partitionName})}\n      onMouseLeave={() => setHovered(null)}\n    />\n  );\n\n  if (\n    !opened &&\n    (!runs.length || hovered?.stepName !== name || hovered?.partitionName !== partitionName)\n  ) {\n    return content;\n  }\n\n  return (\n    <Popover\n      interactionKind=\"click\"\n      placement=\"bottom-start\"\n      onOpening={() => setOpened(true)}\n      onClosed={() => setOpened(false)}\n      content={\n        <Menu>\n          <MenuLink\n            icon=\"open_in_new\"\n            text=\"Show Logs From Last Run\"\n            to={linkToRunEvent(runs[runs.length - 1], {stepKey: name})}\n          />\n          <MenuItem\n            icon=\"settings_backup_restore\"\n            text={`View Runs (${runs.length})`}\n            onClick={() => setFocused({stepName: name, partitionName})}\n          />\n        </Menu>\n      }\n    >\n      {content}\n    </Popover>\n  );\n};\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport const BOX_SIZE = 32;\n\nexport const STEP_STATUS_COLORS = {\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  SKIPPED: Colors.Yellow500,\n  IN_PROGRESS: '#eee',\n};\n\n// In CSS, you can layer multiple backgrounds on top of each other by comma-separating values in\n// `background`. However, this only works with gradients, not with primitive color values. To do\n// hovered + red without color math (?), just stack the colors as flat gradients.\nconst flatGradient = (color: string) => `linear-gradient(to left, ${color} 0%, ${color} 100%)`;\nconst flatGradientStack = (colors: string[]) => colors.map(flatGradient).join(',');\n\nexport const GridColumn = styled.div<{\n  disabled?: boolean;\n  hovered?: boolean;\n  focused?: boolean;\n  multiselectFocused?: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  line-height: 0;\n\n  ${({disabled, focused, multiselectFocused, hovered}) =>\n    !disabled &&\n    !focused &&\n    !multiselectFocused &&\n    `&${hovered ? '' : ':hover'} {\n      background: ${Colors.Gray100};\n      cursor: default;\n      ${TopLabelTiltedInner} {\n        background: ${Colors.White};\n        .tilted {\n          background: ${Colors.Gray100};\n        }\n      }\n      .square {\n        filter: brightness(95%);\n      }\n    }`}\n\n  ${({disabled}) =>\n    disabled &&\n    `\n      ${TopLabelTiltedInner} {\n        color: ${Colors.Gray400}\n      }\n    `}\n\n  ${({focused}) =>\n    focused &&\n    `background: ${Colors.Blue500};\n    ${LeftLabel} {\n      color: white;\n    }\n    ${TopLabelTiltedInner} {\n      background: ${Colors.White};\n      color: white;\n      .tilted {\n        background: ${Colors.Blue500};\n      }\n    }\n  }`}\n\n  ${({multiselectFocused}) =>\n    multiselectFocused &&\n    `background: ${Colors.Blue200};\n    ${LeftLabel} {\n      color: white;\n    }\n    ${TopLabelTiltedInner} {\n      background: ${Colors.White};\n      color: white;\n      .tilted {\n        background: ${Colors.Blue200};\n      }\n    }\n  }`}\n\n  .cell {\n    height: ${BOX_SIZE}px;\n    display: inline-block;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    font-size: 12px;\n    padding: 2px;\n    box-sizing: border-box;\n    line-height: initial;\n  }\n\n  .square {\n    width: 20px;\n    height: 20px;\n    margin: 6px;\n    display: inline-block;\n\n    &:hover:not(.empty):before {\n      box-shadow: ${Colors.Blue500} 0 0 0 3px;\n    }\n    &:before {\n      content: ' ';\n      background: rgba(248, 247, 245, 1);\n      border-radius: 10px;\n      display: inline-block;\n      width: 20px;\n      height: 20px;\n    }\n    &.loading {\n      &:before {\n        background: radial-gradient(white 0%, white 45%, rgba(248, 247, 245, 1) 60%);\n      }\n    }\n    &.success {\n      &:before {\n        background: ${STEP_STATUS_COLORS.SUCCESS};\n      }\n    }\n    &.success-skipped {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.SUCCESS} 49%,\n          ${STEP_STATUS_COLORS.SKIPPED} 51%\n        );\n      }\n    }\n    &.success-failure {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.SUCCESS} 49%,\n          ${STEP_STATUS_COLORS.FAILURE} 51%\n        );\n      }\n    }\n    &.failure {\n      &:before {\n        background: ${STEP_STATUS_COLORS.FAILURE};\n      }\n    }\n    &.failure-success {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.FAILURE} 49%,\n          ${STEP_STATUS_COLORS.SUCCESS} 51%\n        );\n      }\n    }\n    &.failure-skipped {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.FAILURE} 49%,\n          ${STEP_STATUS_COLORS.SKIPPED} 51%\n        );\n      }\n    }\n    &.failure-blank {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.FAILURE} 49%,\n          rgba(150, 150, 150, 0.3) 51%\n        );\n      }\n    }\n    &.skipped {\n      &:before {\n        background: ${STEP_STATUS_COLORS.SKIPPED};\n      }\n    }\n    &.skipped-success {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.SKIPPED} 49%,\n          ${STEP_STATUS_COLORS.SUCCESS} 51%\n        );\n      }\n    }\n    &.skipped-failure {\n      &:before {\n        background: linear-gradient(\n          135deg,\n          ${STEP_STATUS_COLORS.SKIPPED} 49%,\n          ${STEP_STATUS_COLORS.FAILURE} 51%\n        );\n      }\n    }\n  }\n`;\n\nexport const LeftLabel = styled.div<{hovered?: boolean}>`\n  height: ${BOX_SIZE}px;\n  line-height: ${BOX_SIZE}px;\n  font-size: 13px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  position: relative;\n  background: ${({hovered}) => flatGradientStack([hovered ? Colors.Gray100 : 'transparent'])};\n`;\n\nexport const TopLabel = styled.div`\n  position: relative;\n  height: 70px;\n  padding: 4px;\n  padding-bottom: 0;\n  min-width: 15px;\n  align-items: flex-end;\n  display: flex;\n`;\n\nconst TITLE_MARGIN_BOTTOM = 15;\nconst ROTATION_DEGREES = 41;\n\nexport function topLabelHeightForLabels(labels: string[]) {\n  const maxlength = Math.max(...labels.map((p) => p.length));\n  return (maxlength > 10 ? maxlength * 4.9 : 55) + TITLE_MARGIN_BOTTOM;\n}\n\nexport const TopLabelTilted: React.FC<{label: string; $height: number}> = ({label, $height}) => {\n  return (\n    <TopLabelTiltedInner style={{height: $height - TITLE_MARGIN_BOTTOM}}>\n      <div className=\"tilted\">{label}</div>\n    </TopLabelTiltedInner>\n  );\n};\n\nconst TopLabelTiltedInner = styled.div`\n  position: relative;\n  height: unset; /* provide via style tag */\n  padding: 4px;\n  padding-bottom: 0;\n  min-width: 15px;\n  margin-bottom: ${TITLE_MARGIN_BOTTOM}px;\n  align-items: end;\n  display: flex;\n  line-height: normal;\n\n  & > div.tilted {\n    font-size: 12px;\n    white-space: nowrap;\n    position: absolute;\n    bottom: -20px;\n    left: 0;\n    padding: 2px;\n    padding-right: 4px;\n    padding-left: 0;\n    transform: rotate(-${ROTATION_DEGREES}deg);\n    transform-origin: top left;\n  }\n`;\n\nexport const GridFloatingContainer = styled.div<{floating: boolean}>`\n  display: flex;\n  border-right: 1px solid ${Colors.Gray200};\n  padding-bottom: 16px;\n  width: 330px;\n  z-index: 1;\n  ${({floating}) => (floating ? 'box-shadow: 1px 0 4px rgba(0, 0, 0, 0.15)' : '')};\n`;\n\nexport const GridScrollContainer = styled.div`\n  padding-right: 60px;\n  padding-bottom: 16px;\n  overflow-x: scroll;\n  overscroll-behavior-x: contain;\n  z-index: 0;\n  background: ${Colors.White};\n  flex: 1;\n  scrollbar-color: ${Colors.Gray500} ${Colors.Gray100};\n  scrollbar-width: thin;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n  }\n  &::-webkit-scrollbar:vertical {\n    width: 11px;\n  }\n  &::-webkit-scrollbar:horizontal {\n    height: 11px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 8px;\n    border: 2px solid ${Colors.Gray100};\n    background-color: ${Colors.Gray500};\n  }\n  &::-webkit-scrollbar-track {\n    background-color: ${Colors.Gray100};\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {shallowCompareKeys} from '@blueprintjs/core/lib/cjs/common/utils';\nimport React from 'react';\n\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {GanttChartLayout} from '../gantt/Constants';\nimport {GanttChartMode} from '../gantt/GanttChart';\nimport {buildLayout} from '../gantt/GanttChartLayout';\nimport {explodeCompositesInHandleGraph} from '../pipelines/CompositeSupport';\nimport {StepEventStatus} from '../types/globalTypes';\n\nimport {PartitionMatrixStepRunFragment} from './types/PartitionMatrixStepRunFragment';\nimport {PartitionRunMatrixPipelineQuery_pipelineSnapshotOrError_PipelineSnapshot_solidHandles} from './types/PartitionRunMatrixPipelineQuery';\n\ntype SolidHandle = PartitionRunMatrixPipelineQuery_pipelineSnapshotOrError_PipelineSnapshot_solidHandles;\ntype StatusSquareColor =\n  | 'SUCCESS'\n  | 'FAILURE'\n  | 'SKIPPED'\n  | 'MISSING'\n  | 'FAILURE-SUCCESS'\n  | 'FAILURE-SKIPPED'\n  | 'SUCCESS-FAILURE'\n  | 'SUCCESS-SKIPPED'\n  | 'SKIPPED-SUCCESS'\n  | 'SKIPPED-FAILURE';\n\nexport const StatusSquareFinalColor: {[key: string]: StatusSquareColor} = {\n  'FAILURE-SUCCESS': 'SUCCESS',\n  'SKIPPED-SUCCESS': 'SUCCESS',\n  'SUCCESS-FAILURE': 'FAILURE',\n  'SKIPPED-FAILURE': 'FAILURE',\n  'FAILURE-SKIPPED': 'SKIPPED',\n  'SUCCESS-SKIPPED': 'SKIPPED',\n};\n\nexport interface PartitionRuns {\n  name: string;\n  runsLoaded: boolean;\n  runs: PartitionMatrixStepRunFragment[];\n}\n\nexport interface DisplayOptions {\n  showFailuresAndGapsOnly: boolean;\n  showPrevious: boolean;\n  colorizeByAge: boolean;\n  colorizeSliceUnix: number;\n}\n\nconst DYNAMIC_STEP_REGEX_SUFFIX = '\\\\[.*\\\\]';\n\nexport interface MatrixStep {\n  name: string;\n  color: string;\n  unix: number;\n}\n\nfunction getStartTime(a: PartitionMatrixStepRunFragment) {\n  return a.startTime || 0;\n}\n\nfunction byStartTimeAsc(a: PartitionMatrixStepRunFragment, b: PartitionMatrixStepRunFragment) {\n  return getStartTime(a) - getStartTime(b);\n}\n\n// BG Note: Dagit 0.10.0 removed the .compute step key suffix, but the Run Matrix takes the current\n// step tree and looks up data for each step in historical runs. For continuity across 0.10.0, we\n// match historical step keys with the .compute format as well. We can remove safely after 120 days?\nexport function isStepKeyForNode(nodeName: string, stepKey: string) {\n  const dynamicRegex = new RegExp(nodeName + DYNAMIC_STEP_REGEX_SUFFIX);\n  return stepKey === nodeName || stepKey === `${nodeName}.compute` || stepKey.match(dynamicRegex);\n}\n\nfunction buildMatrixData(\n  layout: GanttChartLayout,\n  partitionNames: string[],\n  partitions: PartitionRuns[],\n  options?: DisplayOptions,\n) {\n  const partitionsByName = {};\n  partitions.forEach((p) => {\n    // Note this is sorting partition runs in place, I don't think it matters and\n    // seems better than cloning all the arrays.\n    p.runs.sort(byStartTimeAsc);\n    partitionsByName[p.name] = p;\n  });\n\n  const partitionColumns = partitionNames.map((name, idx) => {\n    const partition: PartitionRuns = partitionsByName[name] || {\n      name,\n      runsLoaded: false,\n      runs: [],\n    };\n    const steps = layout.boxes.map(({node}) => {\n      const blankState = {\n        name: node.name,\n        color: 'MISSING' as StatusSquareColor,\n        unix: 0,\n      };\n\n      if (!partition.runs.length) {\n        return blankState;\n      }\n\n      const lastRun = partition.runs[partition.runs.length - 1];\n      const lastRunStepStatus = lastRun.stepStats.find((stats) =>\n        isStepKeyForNode(node.name, stats.stepKey),\n      )?.status;\n\n      if (!lastRunStepStatus || lastRunStepStatus === StepEventStatus.IN_PROGRESS) {\n        return blankState;\n      }\n\n      return {\n        name: node.name,\n        unix: getStartTime(lastRun),\n        color: lastRunStepStatus,\n      };\n    });\n    return {\n      ...partition,\n      steps,\n      idx,\n    };\n  });\n\n  const partitionsWithARun = partitionColumns.filter((p) => p.runs.length > 0).length;\n\n  const stepRows = layout.boxes.map((box, idx) => {\n    const totalFailures = partitionColumns.filter((p) => p.steps[idx].color.includes('FAILURE'));\n    const finalFailures = partitionColumns.filter((p) => p.steps[idx].color.endsWith('FAILURE'));\n    return {\n      x: box.x,\n      name: box.node.name,\n      totalFailurePercent: partitionsWithARun\n        ? Math.round((totalFailures.length / partitionsWithARun) * 100)\n        : 0,\n      finalFailurePercent: partitionsWithARun\n        ? Math.round((finalFailures.length / partitionsWithARun) * 100)\n        : 0,\n    };\n  });\n\n  if (options?.showFailuresAndGapsOnly) {\n    for (let ii = stepRows.length - 1; ii >= 0; ii--) {\n      if (stepRows[ii].finalFailurePercent === 0) {\n        stepRows.splice(ii, 1);\n        partitionColumns.forEach((p) => p.steps.splice(ii, 1));\n      }\n    }\n    for (let ii = partitionColumns.length - 1; ii >= 0; ii--) {\n      if (\n        partitionColumns[ii].runs.length === 0 ||\n        partitionColumns[ii].steps.every((step) => step.color.includes('SUCCESS'))\n      ) {\n        partitionColumns.splice(ii, 1);\n      }\n    }\n  }\n\n  return {stepRows, partitions, partitionColumns};\n}\n\ninterface MatrixDataInputs {\n  solidHandles: SolidHandle[] | false;\n  partitionNames: string[];\n  partitions: PartitionRuns[];\n  stepQuery: string;\n  options?: DisplayOptions;\n}\n\n/**\n * This hook uses the inputs provided to filter the data displayed and calls through to buildMatrixData.\n * It uses a React ref to cache the result and avoids re-computing when all inputs are shallow-equal.\n *\n * - This could alternatively be implemented via React.memo and an outer + inner component pair, but I\n *   didn't want to split <PartitionRunMatrix />\n * - This can't be a React useEffect with an array of deps because we want the cached value to be updated\n *   synchronously when the inputs are modified to avoid a double-render caused by an effect + state var.\n *\n * @param inputs\n */\nexport const useMatrixData = (inputs: MatrixDataInputs) => {\n  const cachedMatrixData = React.useRef<{\n    result: ReturnType<typeof buildMatrixData>;\n    inputs: MatrixDataInputs;\n  }>();\n  if (!inputs.solidHandles) {\n    return null;\n  }\n  if (cachedMatrixData.current && shallowCompareKeys(inputs, cachedMatrixData.current.inputs)) {\n    return cachedMatrixData.current.result;\n  }\n\n  const nodes = explodeCompositesInHandleGraph(inputs.solidHandles).map((h) => h.solid);\n\n  // Filter the pipeline's structure and build the flat gantt layout for the left hand side\n  const solidsFiltered = filterByQuery(nodes, inputs.stepQuery);\n\n  const layout = buildLayout({nodes: solidsFiltered.all, mode: GanttChartMode.FLAT});\n\n  // Build the matrix of step + partition squares - presorted to match the gantt layout\n  const result = buildMatrixData(layout, inputs.partitionNames, inputs.partitions, inputs.options);\n  cachedMatrixData.current = {result, inputs};\n  return result;\n};\n\nexport const PARTITION_MATRIX_STEP_RUN_FRAGMENT = gql`\n  fragment PartitionMatrixStepRunFragment on Run {\n    id\n    runId\n    status\n    startTime\n    endTime\n    stepStats {\n      stepKey\n      startTime\n      endTime\n      status\n    }\n    tags {\n      key\n      value\n    }\n  }\n`;\n","import {gql, useApolloClient, ApolloClient} from '@apollo/client';\nimport * as React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment';\nimport {DagsterTag} from '../runs/RunTag';\nimport {RunFilterToken} from '../runs/RunsFilterInput';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {PartitionMatrixStepRunFragment} from './types/PartitionMatrixStepRunFragment';\nimport {\n  PartitionStepLoaderQuery,\n  PartitionStepLoaderQueryVariables,\n} from './types/PartitionStepLoaderQuery';\nimport {PartitionRuns, PARTITION_MATRIX_STEP_RUN_FRAGMENT} from './useMatrixData';\n\ninterface DataState {\n  runs: PartitionMatrixStepRunFragment[];\n  partitionNames: string[];\n  loading: boolean;\n  loadingCursorIdx: number;\n  error?: PythonErrorFragment;\n}\n\nconst InitialDataState: DataState = {\n  runs: [],\n  partitionNames: [],\n  loading: false,\n  loadingCursorIdx: 0,\n};\n\n/**\n * This React hook mirrors `useCursorPaginatedQuery` but collects each page of partitions\n * in slices that are smaller than pageSize and cause the results to load incrementally.\n */\nexport function usePartitionStepQuery(\n  partitionSetName: string,\n  partitionNames: string[],\n  pageSize: number,\n  runsFilter: RunFilterToken[],\n  jobName?: string,\n  offset?: number,\n  skipQuery?: boolean,\n) {\n  const client = useApolloClient();\n\n  const version = React.useRef(0);\n  const [dataState, setDataState] = React.useState<DataState>(InitialDataState);\n  const _serializedRunTags = React.useMemo(\n    () =>\n      JSON.stringify(\n        runsFilter.map((token) => {\n          const [key, value] = token.value.split('=');\n          return {key, value};\n        }),\n      ),\n    [runsFilter],\n  );\n\n  React.useEffect(() => {\n    // Note: there are several async steps to the loading process - to cancel the previous\n    // invocation, we bump a version number that is captured in a local variable.\n    // eg: If version.current no longer === v, this should stop updating state and exit.\n    const v = version.current + 1;\n    version.current = v;\n\n    const runTags = JSON.parse(_serializedRunTags);\n    setDataState((dataState) => ({...dataState, runs: [], loading: true}));\n\n    const run = async () => {\n      if (version.current !== v) {\n        return;\n      }\n      let loadingCursorIdx = partitionNames.length - (offset || 0);\n      const stopIdx = Math.max(0, loadingCursorIdx - pageSize);\n      setDataState((state) => ({...state, partitionNames, loadingCursorIdx}));\n\n      // Load runs in each of these partitions incrementally, running several queries in parallel\n      // to maximize the throughput we can achieve from the GraphQL interface.\n      const parallelQueries = 5;\n\n      while (loadingCursorIdx > stopIdx) {\n        const nextCursorIdx = Math.max(loadingCursorIdx - parallelQueries, 0);\n        const sliceNames = partitionNames.slice(nextCursorIdx, loadingCursorIdx);\n        const fetched = await Promise.all(\n          sliceNames.map((partitionName) => {\n            const partitionSetTag = {key: DagsterTag.PartitionSet, value: partitionSetName};\n            const partitionTag = {key: DagsterTag.Partition, value: partitionName};\n            // for jobs, filter by pipelineName/jobName instead of by partition set tag.  This\n            // preserves partition run history across the pipeline => job transition\n            const runTagsFilter = jobName\n              ? {\n                  pipelineName: jobName,\n                  tags: [...runTags, partitionTag],\n                }\n              : {tags: [...runTags, partitionTag, partitionSetTag]};\n            return fetchRunsForFilter(client, {limit: 1000, filter: runTagsFilter});\n          }),\n        );\n        if (version.current !== v) {\n          return;\n        }\n\n        loadingCursorIdx = nextCursorIdx;\n        setDataState((state) => ({\n          ...state,\n          runs: [...state.runs].concat(...fetched),\n          loading: loadingCursorIdx > 0,\n          loadingCursorIdx,\n        }));\n      }\n\n      // Periodically refresh pending runs and look for new runs in the displayed partitions.\n      // Note: this timer is canceled when a subsequent invocation of the useEffect updates `version.current`,\n      // because we don't want to create this interval until the initial load completes.\n\n      const timer: NodeJS.Timeout = setInterval(async () => {\n        if (version.current !== v) {\n          return clearInterval(timer);\n        }\n\n        setDataState((state) => ({...state, loading: true}));\n\n        // Fetch the 10 most recent runs for the pipeline so we pick up on new runs being launched.\n        // Note: this may be insufficient but seems like it will handle the 99% case where runs\n        // are either all queued (at the backfill start) or queued sequentially / slowly.\n        const recent = await fetchRunsForFilter(client, {\n          limit: 10,\n          filter: {\n            tags: [...runTags, {key: DagsterTag.PartitionSet, value: partitionSetName}],\n          },\n        });\n\n        // Fetch runs in the partition set that are in the STARTED state, indicating active updates\n        const pending = await fetchRunsForFilter(client, {\n          filter: {\n            statuses: [RunStatus.STARTED],\n            tags: [...runTags, {key: DagsterTag.PartitionSet, value: partitionSetName}],\n          },\n        });\n\n        if (version.current !== v) {\n          return clearInterval(timer);\n        }\n\n        // Filter detected changes to just runs in our visible range of partitions, and then update\n        // local state if changes have been found.\n        const relevant = [...pending, ...recent].filter((run) =>\n          run.tags.find((t) => t.key === DagsterTag.Partition && partitionNames.includes(t.value)),\n        );\n        setDataState((state) => {\n          const updated = state.runs\n            .filter((r) => !relevant.some((o) => o.runId === r.runId))\n            .concat(relevant);\n          return {...state, loading: false, runs: updated};\n        });\n      }, 10 * 1000);\n    };\n\n    if (!skipQuery) {\n      run();\n    }\n\n    return () => {\n      version.current += 1;\n    };\n  }, [\n    pageSize,\n    client,\n    partitionSetName,\n    _serializedRunTags,\n    jobName,\n    offset,\n    partitionNames,\n    skipQuery,\n  ]);\n\n  return assemblePartitions(dataState);\n}\n\nasync function fetchRunsForFilter(\n  client: ApolloClient<any>,\n  variables: PartitionStepLoaderQueryVariables,\n) {\n  const result = await client.query<PartitionStepLoaderQuery, PartitionStepLoaderQueryVariables>({\n    fetchPolicy: 'network-only',\n    query: PARTITION_STEP_LOADER_QUERY,\n    variables,\n  });\n  return (\n    (result.data.pipelineRunsOrError.__typename === 'Runs' &&\n      result.data.pipelineRunsOrError.results) ||\n    []\n  );\n}\n\nfunction assemblePartitions(data: DataState) {\n  // Note: Partitions don't have any unique keys beside their names, so we use names\n  // extensively in our display layer as React keys. To create unique empty partitions\n  // we use different numbers of zero-width space characters\n  const results: PartitionRuns[] = [];\n  const byName: {[name: string]: PartitionRuns} = {};\n\n  data.partitionNames.forEach((name, idx) => {\n    byName[name] = {\n      name,\n      runsLoaded: idx >= data.loadingCursorIdx,\n      runs: [],\n    };\n    results.push(byName[name]);\n  });\n\n  data.runs.forEach((r) => {\n    const partitionName = r.tags.find((t) => t.key === DagsterTag.Partition)?.value || '';\n    byName[partitionName]?.runs.push(r);\n  });\n\n  return results;\n}\n\nconst PARTITION_STEP_LOADER_QUERY = gql`\n  query PartitionStepLoaderQuery($filter: RunsFilter!, $cursor: String, $limit: Int) {\n    pipelineRunsOrError(filter: $filter, cursor: $cursor, limit: $limit) {\n      ... on Runs {\n        results {\n          id\n          ...PartitionMatrixStepRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${PARTITION_MATRIX_STEP_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {GraphExplorerSolidHandleFragment} from './types/GraphExplorerSolidHandleFragment';\n\nfunction explodeComposite(\n  handles: GraphExplorerSolidHandleFragment[],\n  handle: GraphExplorerSolidHandleFragment,\n) {\n  if (handle.solid.definition.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('explodeComposite takes a composite handle.');\n  }\n\n  // Replace all references to this composite's inputs in other solid defitions\n  // with the interior target of the input mappings\n  handle.solid.definition.inputMappings.forEach((inmap) => {\n    const solidName = `${handle.solid.name}.${inmap.mappedInput.solid.name}`;\n    handles.forEach((h) =>\n      h.solid.outputs.forEach((i) => {\n        i.dependedBy.forEach((dep) => {\n          if (\n            dep.definition.name === inmap.definition.name &&\n            dep.solid.name === handle.solid.name\n          ) {\n            dep.solid.name = solidName;\n            dep.definition.name = inmap.mappedInput.definition.name;\n          }\n        });\n      }),\n    );\n  });\n\n  // Replace all references to this composite's outputs in other solid defitions\n  // with the interior target of the output mappings\n  handle.solid.definition.outputMappings.forEach((outmap) => {\n    const solidName = `${handle.solid.name}.${outmap.mappedOutput.solid.name}`;\n    handles.forEach((h) =>\n      h.solid.inputs.forEach((i) => {\n        i.dependsOn.forEach((dep) => {\n          if (\n            dep.definition.name === outmap.definition.name &&\n            dep.solid.name === handle.solid.name\n          ) {\n            dep.solid.name = solidName;\n            dep.definition.name = outmap.mappedOutput.definition.name;\n          }\n        });\n      }),\n    );\n  });\n\n  // Find all the solid handles that are within this composite and prefix their\n  // names with the composite container's name, giving them names that should\n  // match their handleID. (Note: We can't assign them their real handleIDs\n  // because we'd have to dig through `handles` to find each solid based on it's\n  // name + parentHandleID and then get it's handleID - dependsOn, etc. provide\n  // Solid references not SolidHandle references.)\n  const nested = handles.filter((h) => h.handleID === `${handle.handleID}.${h.solid.name}`);\n  nested.forEach((n) => {\n    n.solid.name = n.handleID;\n    n.solid.inputs.forEach((i) => {\n      i.dependsOn.forEach((d) => {\n        d.solid.name = `${handle.handleID}.${d.solid.name}`;\n      });\n    });\n    n.solid.outputs.forEach((i) => {\n      i.dependedBy.forEach((d) => {\n        d.solid.name = `${handle.handleID}.${d.solid.name}`;\n      });\n    });\n  });\n\n  // Find all the input dependencies of a composite solid and transfer them to their mapped interior\n  // target solids\n  handle.solid.definition.inputMappings.forEach((inmap) => {\n    handle.solid.inputs.forEach((input) => {\n      const solidName = `${handle.solid.name}.${inmap.mappedInput.solid.name}`;\n      const [interiorTarget] = handles.filter((h) => h.handleID === solidName);\n      if (!interiorTarget) {\n        return;\n      }\n      const matchingInput = interiorTarget.solid.inputs.find(\n        (i) => i.definition.name === input.definition.name,\n      );\n      if (!matchingInput) {\n        return;\n      }\n      matchingInput.dependsOn = matchingInput.dependsOn.concat(input.dependsOn);\n    });\n  });\n\n  // Find all the output dependencies of a composite solid and transfer them to their mapped interior\n  // target solids\n  handle.solid.definition.outputMappings.forEach((outmap) => {\n    handle.solid.outputs.forEach((output) => {\n      const solidName = `${handle.solid.name}.${outmap.mappedOutput.solid.name}`;\n      const [interiorTarget] = handles.filter((h) => h.handleID === solidName);\n      if (!interiorTarget) {\n        return;\n      }\n      const matchingOutput = interiorTarget.solid.outputs.find(\n        (i) => i.definition.name === output.definition.name,\n      );\n      if (!matchingOutput) {\n        return;\n      }\n      matchingOutput.dependedBy = matchingOutput.dependedBy.concat(output.dependedBy);\n    });\n  });\n\n  // Return the interior solids that replace the composite in the graph\n  return nested;\n}\n\n/**\n * Given a solid handle graph, returns a new solid handle graph with all of the\n * composites recursively replaced with their interior solids. Interior solids\n * are given their handle names (\"composite.inner\") to avoid name collisions.\n *\n * @param handles All the SolidHandles in the pipeline (NOT just current layer)\n */\nexport function explodeCompositesInHandleGraph(handles: GraphExplorerSolidHandleFragment[]) {\n  // Clone the entire graph so we can modify solid names in-place\n  handles = JSON.parse(JSON.stringify(handles));\n\n  // Reset the output to just the solids in the top layer of the graph\n  const results = handles.filter((h) => !h.handleID.includes('.'));\n\n  // Find composites in the output and replace the composite with it's content\n  // solids (renaming the content solids to include the composite's handle and\n  // linking them to the other solids via the composite's input/output mappings)\n  while (true) {\n    const idx = results.findIndex(\n      (h) => h.solid.definition.__typename === 'CompositeSolidDefinition',\n    );\n    if (idx === -1) {\n      break;\n    }\n    results.splice(idx, 1, ...explodeComposite(handles, results[idx]));\n  }\n\n  return results;\n}\n","import {Markdown} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\ninterface IDescriptionProps {\n  description: string | null;\n  maxHeight?: number;\n}\n\ninterface IDescriptionState {\n  hasMore: boolean;\n  expanded: boolean;\n}\n\nconst DEFAULT_MAX_HEIGHT = 320;\n\n/*\nIf `input` begins with whitespace and every line contains at least that whitespace,\nit removes it. Otherwise, return the original string.\n*/\nfunction removeLeadingSpaces(input: string) {\n  const leadingSpaces = /^\\n?( +)/.exec(input);\n  if (leadingSpaces == null) {\n    return input;\n  }\n\n  const lines = input.split('\\n');\n  if (!lines.every((l) => l.substr(0, leadingSpaces[1].length).trim() === '')) {\n    return input;\n  }\n\n  return lines.map((l) => l.substr(leadingSpaces[1].length)).join('\\n');\n}\n\nexport class Description extends React.Component<IDescriptionProps, IDescriptionState> {\n  private _container: React.RefObject<HTMLDivElement> = React.createRef();\n\n  public state: IDescriptionState = {\n    hasMore: false,\n    expanded: false,\n  };\n\n  componentDidMount() {\n    this.updateHandleState();\n  }\n\n  componentDidUpdate() {\n    this.updateHandleState();\n  }\n\n  updateHandleState() {\n    if (!this._container.current) {\n      return;\n    }\n    const hasMore =\n      this._container.current.clientHeight > (this.props.maxHeight || DEFAULT_MAX_HEIGHT);\n    if (hasMore !== this.state.hasMore) {\n      this.setState({hasMore});\n    }\n  }\n\n  render() {\n    if (!this.props.description || this.props.description.length === 0) {\n      return null;\n    }\n\n    const {expanded, hasMore} = this.state;\n    return (\n      <Container\n        onDoubleClick={() => {\n          const sel = document.getSelection();\n          if (!sel || !this._container.current) {\n            return;\n          }\n          const range = document.createRange();\n          range.selectNodeContents(this._container.current);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }}\n        style={{\n          maxHeight: expanded ? undefined : this.props.maxHeight || DEFAULT_MAX_HEIGHT,\n        }}\n      >\n        {!expanded && hasMore && <Mask />}\n        {hasMore && (\n          <ShowMoreHandle onClick={() => this.setState({expanded: !expanded})}>\n            {expanded ? 'Show Less' : 'Show More'}\n          </ShowMoreHandle>\n        )}\n\n        <div ref={this._container} style={{overflowX: 'auto'}}>\n          <Markdown>{removeLeadingSpaces(this.props.description)}</Markdown>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled.div`\n  overflow: hidden;\n  font-size: 0.8rem;\n  position: relative;\n  p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst Mask = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(\n    to bottom,\n    rgba(255, 255, 255, 0) 0%,\n    rgba(255, 255, 255, 0) 70%,\n    rgba(255, 255, 255, 1)\n  );\n  pointer-events: none;\n  border-bottom: 1px solid #eee;\n`;\n\nconst ShowMoreHandle = styled.a`\n  line-height: 20px;\n  position: absolute;\n  padding: 0 14px;\n  bottom: 0;\n  left: 50%;\n  height: 20px;\n  transform: translate(-50%);\n  background: #eee;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {weakmapMemoize} from '../app/Util';\nimport {buildSVGPath} from '../asset-graph/Utils';\n\nimport {OpGraphLayout, OpLayout, OpLayoutEdge} from './asyncGraphLayout';\nimport {OpGraphOpFragment} from './types/OpGraphOpFragment';\n\nexport type Edge = {a: string; b: string};\n\nconst buildSVGPaths = weakmapMemoize((edges: OpLayoutEdge[], nodes: {[name: string]: OpLayout}) =>\n  edges.map(({from, to}) => {\n    const sourceOutput = nodes[from.opName].outputs[from.edgeName];\n    if (!sourceOutput) {\n      throw new Error(\n        `Cannot find ${from.opName}:${from.edgeName} for edge to ${to.opName}:${to.edgeName}`,\n      );\n    }\n    const targetInput = nodes[to.opName].inputs[to.edgeName];\n    if (!targetInput) {\n      throw new Error(\n        `Cannot find ${to.opName}:${to.edgeName} for edge from ${from.opName}:${from.edgeName}`,\n      );\n    }\n    return {\n      // can also use from.point for the \"Dagre\" closest point on node\n      path: buildSVGPath({\n        source: sourceOutput.port,\n        target: targetInput.port,\n      }),\n      sourceOutput,\n      targetInput,\n      from,\n      to,\n    };\n  }),\n);\n\nconst outputIsDynamic = (ops: OpGraphOpFragment[], from: {opName: string; edgeName: string}) => {\n  const op = ops.find((s) => s.name === from.opName);\n  const outDef = op?.definition.outputDefinitions.find((o) => o.name === from.edgeName);\n  return outDef?.isDynamic || false;\n};\n\nconst inputIsDynamicCollect = (\n  ops: OpGraphOpFragment[],\n  to: {opName: string; edgeName: string},\n) => {\n  const op = ops.find((s) => s.name === to.opName);\n  const inputDef = op?.inputs.find((o) => o.definition.name === to.edgeName);\n  return inputDef?.isDynamicCollect || false;\n};\n\nexport const OpEdges = React.memo(\n  (props: {\n    color: string;\n    ops: OpGraphOpFragment[];\n    layout: OpGraphLayout;\n    edges: OpLayoutEdge[];\n    onHighlight: (arr: Edge[]) => void;\n  }) => (\n    <g>\n      {buildSVGPaths(props.edges, props.layout.nodes).map(\n        ({path, from, sourceOutput, targetInput, to}, idx) => (\n          <g\n            key={idx}\n            onMouseLeave={() => props.onHighlight([])}\n            onMouseEnter={() => props.onHighlight([{a: from.opName, b: to.opName}])}\n          >\n            <StyledPath d={path} style={{stroke: props.color}} />\n            {outputIsDynamic(props.ops, from) && (\n              <DynamicMarker\n                color={props.color}\n                x={sourceOutput.layout.x}\n                y={sourceOutput.layout.y}\n                direction=\"output\"\n              />\n            )}\n            {inputIsDynamicCollect(props.ops, to) && (\n              <DynamicMarker\n                color={props.color}\n                x={targetInput.layout.x}\n                y={targetInput.layout.y}\n                direction=\"collect\"\n              />\n            )}\n          </g>\n        ),\n      )}\n    </g>\n  ),\n);\n\nOpEdges.displayName = 'OpEdges';\n\nconst DynamicMarker: React.FC<{\n  x: number;\n  y: number;\n  direction: 'output' | 'collect';\n  color: string;\n}> = ({x, y, direction, color}) => (\n  <g\n    fill={color}\n    transform={`translate(${x - 35}, ${y})${\n      direction === 'collect' ? ',rotate(180),translate(-20, -40)' : ''\n    }`}\n  >\n    <title>{direction === 'output' ? 'DynamicOutput' : 'DynamicCollect'}</title>\n    <polygon points=\"14.2050781 21 14.0400391 15.2236328 18.953125 18.2705078 20.984375 14.7285156 15.8935547 11.9736328 20.984375 9.21875 18.953125 5.68945312 14.0400391 8.72363281 14.2050781 2.95996094 10.1425781 2.95996094 10.2949219 8.72363281 5.38183594 5.68945312 3.36328125 9.21875 8.45410156 11.9736328 3.36328125 14.7285156 5.38183594 18.2705078 10.2949219 15.2236328 10.1425781 21\"></polygon>\n    <polygon points=\"18.6367188 35.1669922 20.8203125 32.9707031 12.0605469 24.2109375 3.28808594 32.9707031 5.47167969 35.1669922 12.0605469 28.5908203\"></polygon>\n  </g>\n);\n\nconst StyledPath = styled('path')`\n  stroke-width: 4;\n  fill: none;\n`;\n","import {FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\n\nconst PX_TO_UNITS = 0.53;\n\ninterface ISize {\n  width: number;\n  height: number;\n  compressionPriority?: number;\n}\n\ninterface ISVGMonospaceTextProps {\n  width?: number;\n  size: number;\n  text: string;\n  allowTwoLines?: boolean;\n}\n\nconst LINE_SPACING = 1.25;\n\nconst clipToLength = (str: string, len: number) => {\n  return str.length > len ? str.substr(0, len - 1) + '…' : str;\n};\n\n/*\nWraps <text>, exposes an intrinsic size and automatically truncates with ellipsis\nif it's given a fixed width less than the space required for it's text.\n*/\nexport class SVGMonospaceText extends React.PureComponent<\n  ISVGMonospaceTextProps & React.SVGAttributes<SVGElement>\n> {\n  static intrinsicSizeForProps(props: ISVGMonospaceTextProps): ISize {\n    return {\n      width: Math.min(props.text.length * props.size * PX_TO_UNITS),\n      height: props.size,\n    };\n  }\n\n  render() {\n    const {y, width, size, text, allowTwoLines, ...rest} = this.props;\n\n    const lineChars = width ? Math.round(width / (size * PX_TO_UNITS)) : text.length;\n    let line1 = '';\n    let line2 = '';\n\n    if (allowTwoLines) {\n      const parts = text.split('_');\n      while (parts.length && line1.length + parts[0].length <= lineChars) {\n        line1 += parts.shift() + (parts.length > 0 ? '_' : '');\n      }\n      line2 = clipToLength(parts.join('_'), lineChars);\n    } else {\n      line1 = clipToLength(text, lineChars);\n    }\n\n    const line1Y = (Number(y) || 0) - (line2.length > 0 ? (Number(size) * LINE_SPACING) / 2 : 0);\n\n    const style: React.CSSProperties = {\n      fontFamily: FontFamily.monospace,\n      fontSize: `${size}px`,\n      pointerEvents: 'none',\n    };\n\n    return (\n      <>\n        <text\n          {...rest}\n          y={line1Y}\n          style={style}\n          width={line1.length * size * PX_TO_UNITS}\n          height={size}\n          dominantBaseline=\"hanging\"\n        >\n          {line1}\n        </text>\n        {line2 && (\n          <text\n            {...rest}\n            y={line1Y + Number(size) * LINE_SPACING}\n            style={style}\n            width={line2.length * size * PX_TO_UNITS}\n            height={size}\n            dominantBaseline=\"hanging\"\n          >\n            {line2}\n          </text>\n        )}\n      </>\n    );\n  }\n}\n\nexport const SVGLabeledRect: React.FC<{\n  x: number;\n  y: number;\n  minified: boolean;\n  width: number;\n  height: number;\n  label: string;\n  fill: string;\n  className?: string;\n}> = ({minified, label, fill, className, ...rect}) => (\n  <g>\n    <rect {...rect} fill={fill} stroke=\"#979797\" strokeWidth={1} className={className} />\n    <SVGMonospaceText\n      x={rect.x + (minified ? 10 : 5)}\n      y={rect.y + (minified ? 10 : 5)}\n      height={undefined}\n      size={minified ? 30 : 16}\n      text={label}\n      fill=\"#979797\"\n    />\n  </g>\n);\n","import {Colors} from '@dagster-io/ui';\nimport {LinkVertical as Link} from '@vx/shape';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Edge} from './OpEdges';\nimport {SVGMonospaceText} from './SVGComponents';\nimport {IPoint, isHighlighted} from './common';\n\ninterface ExternalConnectionNodeProps {\n  layout: IPoint;\n  target: IPoint;\n  labelAttachment: 'top' | 'bottom';\n  label: string;\n  minified: boolean;\n\n  // Passed through from Solid props\n  edges: Edge[];\n  highlightedEdges: Edge[];\n  onHighlightEdges: (edges: Edge[]) => void;\n  onDoubleClickLabel: () => void;\n}\n\nexport const ExternalConnectionNode: React.FC<ExternalConnectionNodeProps> = ({\n  layout,\n  target,\n  edges,\n  label,\n  labelAttachment,\n  minified,\n  highlightedEdges,\n  onHighlightEdges,\n  onDoubleClickLabel,\n}) => {\n  const textProps = {width: 0, size: minified ? 24 : 12, text: label};\n  const textSize = SVGMonospaceText.intrinsicSizeForProps(textProps);\n  const highlighted = edges.some((e) => isHighlighted(highlightedEdges, e));\n  const color = highlighted ? '#555' : '#C7CBCD';\n\n  // https://github.com/dagster-io/dagster/issues/1504\n  if (!layout) {\n    return null;\n  }\n\n  const textOrigin = {\n    x: layout.x - textSize.width / 2,\n    y: layout.y + (labelAttachment === 'top' ? -10 - textSize.height : 10),\n  };\n\n  return (\n    <g onMouseEnter={() => onHighlightEdges(edges)} onMouseLeave={() => onHighlightEdges([])}>\n      <BackingRect\n        {...textSize}\n        {...textOrigin}\n        onClick={(e) => e.stopPropagation()}\n        onDoubleClick={(e) => {\n          e.stopPropagation();\n          onDoubleClickLabel();\n        }}\n      />\n      <ellipse cx={layout.x} cy={layout.y} rx={7} ry={7} fill={color} />\n      <SVGMonospaceText {...textProps} {...textSize} {...textOrigin} />\n      <Link style={{stroke: color, strokeWidth: 6, fill: 'none'}} data={{source: layout, target}} />\n    </g>\n  );\n};\n\nconst BackingRect = styled('rect')`\n  stroke-width: 10px;\n  fill: ${Colors.Gray100};\n  stroke: ${Colors.Gray100};\n  &:hover {\n    fill: ${Colors.Gray200};\n    stroke: ${Colors.Gray200};\n  }\n`;\n","import * as React from 'react';\n\nimport {Edge} from './OpEdges';\nimport {IPoint, isHighlighted} from './common';\n\ninterface MappingLineProps {\n  source: IPoint;\n  target: IPoint;\n  leftEdgeX: number;\n  minified: boolean;\n  edge: Edge;\n\n  highlightedEdges: Edge[];\n  onHighlightEdges: (edges: Edge[]) => void;\n}\nexport const MappingLine: React.FC<MappingLineProps> = ({\n  source,\n  target,\n  minified,\n  leftEdgeX,\n  edge,\n  highlightedEdges,\n  onHighlightEdges,\n}) => {\n  const highlighted = isHighlighted(highlightedEdges, edge);\n\n  return (\n    <g onMouseEnter={() => onHighlightEdges([edge])} onMouseLeave={() => onHighlightEdges([])}>\n      <path\n        d={`M ${source.x} ${source.y} H ${leftEdgeX} V ${target.y} H ${target.x}`}\n        fill=\"none\"\n        strokeWidth={minified ? 6 : 5}\n        strokeLinecap=\"round\"\n        stroke={highlighted ? 'black' : 'rgb(137, 206, 206)'}\n      />\n      <path\n        d={`M ${source.x} ${source.y} H ${leftEdgeX} V ${target.y} H ${target.x}`}\n        fill=\"none\"\n        strokeWidth={4}\n        strokeLinecap=\"round\"\n        stroke=\"white\"\n      />\n    </g>\n  );\n};\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {titleOfIO} from '../app/titleOfIO';\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\n\nimport {ExternalConnectionNode} from './ExternalConnectionNode';\nimport {MappingLine} from './MappingLine';\nimport {metadataForCompositeParentIO, PARENT_IN, PARENT_OUT, OpIOBox} from './OpIOBox';\nimport {position} from './OpNode';\nimport {SVGLabeledRect} from './SVGComponents';\nimport {OpGraphLayout} from './asyncGraphLayout';\nimport {Edge} from './common';\nimport {OpGraphOpFragment} from './types/OpGraphOpFragment';\n\ninterface ParentOpNodeProps {\n  layout: OpGraphLayout;\n  op: OpGraphOpFragment;\n  minified: boolean;\n\n  highlightedEdges: Edge[];\n  onDoubleClick: (opName: string) => void;\n  onClickOp: (arg: OpNameOrPath) => void;\n  onHighlightEdges: (edges: Edge[]) => void;\n}\n\nexport const ParentOpNode: React.FC<ParentOpNodeProps> = (props) => {\n  const {layout, op, minified} = props;\n\n  const def = props.op.definition;\n  if (def.__typename !== 'CompositeSolidDefinition') {\n    throw new Error('Parent op is not a composite - how did this happen?');\n  }\n\n  const parentLayout = layout.parent;\n  if (!parentLayout) {\n    throw new Error('Parent op rendered when no parent layout is present.');\n  }\n\n  const {bounds, mappingLeftEdge, mappingLeftSpacing} = parentLayout;\n  const highlightingProps = {\n    highlightedEdges: props.highlightedEdges,\n    onHighlightEdges: props.onHighlightEdges,\n    onDoubleClick: props.onDoubleClick,\n    onClickOp: props.onClickOp,\n  };\n\n  if (bounds.height < 0 || bounds.width < 0) {\n    return <g />;\n  }\n  return (\n    <>\n      <SVGLabeledParentRect\n        {...bounds}\n        label={op.definition.name}\n        fill={Colors.Gray50}\n        minified={minified}\n      />\n      {def.inputMappings.map(({definition, mappedInput}, idx) => {\n        const destination = layout.nodes[mappedInput.solid.name];\n        if (!destination) {\n          return <g />;\n        }\n        const sourcePort = parentLayout.inputs[definition.name].port;\n        const trgtPort = destination.inputs[mappedInput.definition.name].port;\n\n        return (\n          <MappingLine\n            {...highlightingProps}\n            key={`in-${idx}`}\n            target={trgtPort}\n            source={sourcePort}\n            minified={minified}\n            leftEdgeX={mappingLeftEdge - idx * mappingLeftSpacing}\n            edge={{a: titleOfIO(mappedInput), b: PARENT_IN}}\n          />\n        );\n      })}\n      {def.outputMappings.map(({definition, mappedOutput}, idx) => {\n        const destination = layout.nodes[mappedOutput.solid.name];\n        if (!destination) {\n          return <g />;\n        }\n        const sourcePort = parentLayout.outputs[definition.name].port;\n        const trgtPort = destination.outputs[mappedOutput.definition.name].port;\n\n        return (\n          <MappingLine\n            {...highlightingProps}\n            key={`out-${idx}`}\n            target={trgtPort}\n            source={sourcePort}\n            minified={minified}\n            leftEdgeX={mappingLeftEdge - idx * mappingLeftSpacing}\n            edge={{a: titleOfIO(mappedOutput), b: PARENT_OUT}}\n          />\n        );\n      })}\n      {op.definition.inputDefinitions.map((input, idx) => {\n        const metadata = metadataForCompositeParentIO(op.definition, input);\n        const invocationInput = op.inputs.find((i) => i.definition.name === input.name)!;\n\n        return (\n          <React.Fragment key={idx}>\n            {invocationInput.dependsOn.map((dependsOn, iidx) => (\n              <ExternalConnectionNode\n                {...highlightingProps}\n                {...metadata}\n                key={iidx}\n                labelAttachment=\"top\"\n                label={titleOfIO(dependsOn)}\n                minified={minified}\n                layout={parentLayout.dependsOn[titleOfIO(dependsOn)]}\n                target={parentLayout.inputs[input.name].port}\n                onDoubleClickLabel={() => props.onClickOp({path: ['..', dependsOn.solid.name]})}\n              />\n            ))}\n            <OpIOBox\n              {...highlightingProps}\n              {...metadata}\n              minified={minified}\n              colorKey=\"input\"\n              item={input}\n              style={position(parentLayout.inputs[input.name].layout)}\n            />\n          </React.Fragment>\n        );\n      })}\n      {op.definition.outputDefinitions.map((output, idx) => {\n        const metadata = metadataForCompositeParentIO(op.definition, output);\n        const invocationOutput = op.outputs.find((i) => i.definition.name === output.name)!;\n\n        return (\n          <React.Fragment key={idx}>\n            {invocationOutput.dependedBy.map((dependedBy, iidx) => (\n              <ExternalConnectionNode\n                {...highlightingProps}\n                {...metadata}\n                key={iidx}\n                labelAttachment=\"bottom\"\n                label={titleOfIO(dependedBy)}\n                minified={minified}\n                layout={parentLayout.dependedBy[titleOfIO(dependedBy)]}\n                target={parentLayout.outputs[output.name].port}\n                onDoubleClickLabel={() => props.onClickOp({path: ['..', dependedBy.solid.name]})}\n              />\n            ))}\n            <OpIOBox\n              {...highlightingProps}\n              {...metadata}\n              minified={minified}\n              colorKey=\"output\"\n              item={output}\n              style={position(parentLayout.outputs[output.name].layout)}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport const SVGLabeledParentRect = styled(SVGLabeledRect)`\n  transition: x 250ms ease-out, y 250ms ease-out, width 250ms ease-out, height 250ms ease-out;\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\n\nimport {OpEdges} from './OpEdges';\nimport {OpNode, OP_NODE_DEFINITION_FRAGMENT, OP_NODE_INVOCATION_FRAGMENT} from './OpNode';\nimport {ParentOpNode, SVGLabeledParentRect} from './ParentOpNode';\nimport {DETAIL_ZOOM, SVGViewport, SVGViewportInteractor} from './SVGViewport';\nimport {OpGraphLayout} from './asyncGraphLayout';\nimport {\n  Edge,\n  closestNodeInDirection,\n  computeNodeKeyPrefixBoundingBoxes,\n  isHighlighted,\n  isNodeOffscreen,\n  isOpHighlighted,\n} from './common';\nimport {OpGraphOpFragment} from './types/OpGraphOpFragment';\n\nconst NoOp = () => {};\n\ninterface OpGraphProps {\n  jobName: string;\n  layout: OpGraphLayout;\n  ops: OpGraphOpFragment[];\n  focusOps: OpGraphOpFragment[];\n  parentHandleID?: string;\n  parentOp?: OpGraphOpFragment;\n  selectedHandleID?: string;\n  selectedOp?: OpGraphOpFragment;\n  highlightedOps: Array<OpGraphOpFragment>;\n  interactor?: SVGViewportInteractor;\n  onClickOp?: (arg: OpNameOrPath) => void;\n  onDoubleClickOp?: (arg: OpNameOrPath) => void;\n  onEnterSubgraph?: (arg: OpNameOrPath) => void;\n  onLeaveSubgraph?: () => void;\n  onClickBackground?: () => void;\n}\n\ninterface OpGraphContentsProps extends OpGraphProps {\n  minified: boolean;\n  layout: OpGraphLayout;\n  viewportRect: {top: number; left: number; right: number; bottom: number};\n}\n\nconst OpGraphContents: React.FC<OpGraphContentsProps> = React.memo((props) => {\n  const [highlighted, setHighlighted] = React.useState<Edge[]>(() => []);\n\n  const {\n    layout,\n    minified,\n    ops,\n    viewportRect,\n    focusOps,\n    parentOp,\n    parentHandleID,\n    onClickOp = NoOp,\n    onDoubleClickOp = NoOp,\n    onEnterSubgraph = NoOp,\n    highlightedOps,\n    selectedOp,\n  } = props;\n\n  return (\n    <>\n      {parentOp && layout.parent && layout.parent.invocationBoundingBox.width > 0 && (\n        <SVGLabeledParentRect\n          {...layout.parent.invocationBoundingBox}\n          key={`composite-rect-${parentHandleID}`}\n          label=\"\"\n          fill={Colors.Yellow50}\n          minified={minified}\n        />\n      )}\n      {parentOp && (\n        <ParentOpNode\n          onClickOp={onClickOp}\n          onDoubleClick={(name) => onDoubleClickOp({name})}\n          onHighlightEdges={setHighlighted}\n          highlightedEdges={highlighted}\n          key={`composite-rect-${parentHandleID}-definition`}\n          minified={minified}\n          op={parentOp}\n          layout={layout}\n        />\n      )}\n      <OpEdges\n        ops={ops}\n        layout={layout}\n        color={Colors.KeylineGray}\n        edges={layout.edges}\n        onHighlight={setHighlighted}\n      />\n      <OpEdges\n        ops={ops}\n        layout={layout}\n        color={Colors.Blue500}\n        onHighlight={setHighlighted}\n        edges={layout.edges.filter(({from, to}) =>\n          isHighlighted(highlighted, {a: from.opName, b: to.opName}),\n        )}\n      />\n      {computeNodeKeyPrefixBoundingBoxes(layout).map((box, idx) => (\n        <rect\n          key={idx}\n          {...box}\n          stroke=\"rgb(230, 219, 238)\"\n          fill=\"rgba(230, 219, 238, 0.2)\"\n          strokeWidth={2}\n        />\n      ))}\n      <foreignObject width={layout.width} height={layout.height} style={{pointerEvents: 'none'}}>\n        {ops\n          .filter((op) => !isNodeOffscreen(layout.nodes[op.name].bounds, viewportRect))\n          .map((op) => (\n            <OpNode\n              key={op.name}\n              invocation={op}\n              definition={op.definition}\n              minified={minified}\n              onClick={() => onClickOp({name: op.name})}\n              onDoubleClick={() => onDoubleClickOp({name: op.name})}\n              onEnterComposite={() => onEnterSubgraph({name: op.name})}\n              onHighlightEdges={setHighlighted}\n              layout={layout.nodes[op.name]}\n              selected={selectedOp === op}\n              focused={focusOps.includes(op)}\n              highlightedEdges={\n                isOpHighlighted(highlighted, op.name) ? highlighted : EmptyHighlightedArray\n              }\n              dim={highlightedOps.length > 0 && highlightedOps.indexOf(op) === -1}\n            />\n          ))}\n      </foreignObject>\n    </>\n  );\n});\n\nOpGraphContents.displayName = 'OpGraphContents';\n\n// This is a specific empty array we pass to represent the common / empty case\n// so that OpNode can use shallow equality comparisons in shouldComponentUpdate.\nconst EmptyHighlightedArray: never[] = [];\n\nexport class OpGraph extends React.Component<OpGraphProps> {\n  viewportEl: React.RefObject<SVGViewport> = React.createRef();\n\n  argToOpLayout = (arg: OpNameOrPath) => {\n    const lastName = 'name' in arg ? arg.name : arg.path[arg.path.length - 1];\n    return this.props.layout.nodes[lastName];\n  };\n\n  centerOp = (arg: OpNameOrPath) => {\n    const opLayout = this.argToOpLayout(arg);\n    if (opLayout && this.viewportEl.current) {\n      this.viewportEl.current.zoomToSVGBox(opLayout.bounds, true);\n    }\n  };\n\n  focusOnOp = (arg: OpNameOrPath) => {\n    const opLayout = this.argToOpLayout(arg);\n    if (opLayout && this.viewportEl.current) {\n      this.viewportEl.current?.zoomToSVGBox(opLayout.bounds, true, DETAIL_ZOOM);\n    }\n  };\n\n  unfocus = (e: React.MouseEvent<any>) => {\n    this.viewportEl.current!.autocenter(true);\n    e.stopPropagation();\n  };\n\n  componentDidUpdate(prevProps: OpGraphProps) {\n    if (prevProps.parentOp !== this.props.parentOp) {\n      this.viewportEl.current!.cancelAnimations();\n      this.viewportEl.current!.autocenter();\n    }\n    if (prevProps.layout !== this.props.layout) {\n      this.viewportEl.current!.autocenter();\n    }\n    if (prevProps.selectedOp !== this.props.selectedOp && this.props.selectedOp) {\n      this.centerOp(this.props.selectedOp);\n    }\n  }\n\n  onArrowKeyDown = (_e: React.KeyboardEvent<any>, dir: string) => {\n    const nextOp = closestNodeInDirection(this.props.layout, this.props.selectedOp?.name, dir);\n    if (nextOp && this.props.onClickOp) {\n      this.props.onClickOp({name: nextOp});\n    }\n  };\n\n  render() {\n    const {layout, interactor, jobName, onClickBackground, onDoubleClickOp} = this.props;\n\n    return (\n      <SVGViewport\n        ref={this.viewportEl}\n        key={jobName}\n        maxZoom={1.2}\n        interactor={interactor || SVGViewport.Interactors.PanAndZoom}\n        graphWidth={layout.width}\n        graphHeight={layout.height}\n        onClick={onClickBackground}\n        onDoubleClick={this.unfocus}\n        onArrowKeyDown={this.onArrowKeyDown}\n      >\n        {({scale}, viewportRect) => (\n          <SVGContainer width={layout.width} height={layout.height + 200}>\n            <OpGraphContents\n              {...this.props}\n              layout={layout}\n              minified={scale < DETAIL_ZOOM - 0.01}\n              onDoubleClickOp={onDoubleClickOp || this.focusOnOp}\n              viewportRect={viewportRect}\n            />\n          </SVGContainer>\n        )}\n      </SVGViewport>\n    );\n  }\n}\n\nexport const OP_GRAPH_OP_FRAGMENT = gql`\n  fragment OpGraphOpFragment on Solid {\n    name\n    ...OpNodeInvocationFragment\n    definition {\n      name\n      ...OpNodeDefinitionFragment\n    }\n  }\n  ${OP_NODE_INVOCATION_FRAGMENT}\n  ${OP_NODE_DEFINITION_FRAGMENT}\n`;\n\nconst SVGContainer = styled.svg`\n  overflow: visible;\n  border-radius: 0;\n`;\n","import {gql} from '@apollo/client';\nimport {Box, ConfigTypeSchema} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {gqlTypePredicate} from '../app/Util';\nimport {dagsterTypeKind} from '../dagstertype/DagsterType';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {TableSchema} from '../metadata/TableSchema';\nimport {Description} from '../pipelines/Description';\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from '../pipelines/SidebarComponents';\n\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from './ConfigTypeSchema';\nimport {TypeExplorerFragment} from './types/TypeExplorerFragment';\n\ninterface ITypeExplorerProps {\n  isGraph: boolean;\n  type: TypeExplorerFragment;\n}\n\nexport const TypeExplorer: React.FC<ITypeExplorerProps> = (props) => {\n  const {name, metadataEntries, inputSchemaType, outputSchemaType, description} = props.type;\n  const typeKind = dagsterTypeKind(props.type);\n  const displayName = typeKind === 'standard' ? name : `${name} (${typeKind})`;\n  const tableSchema = metadataEntries.find(gqlTypePredicate('TableSchemaMetadataEntry'))?.schema;\n  return (\n    <div>\n      <SidebarSubhead />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SidebarTitle>\n          <Link to=\"?tab=types\">{props.isGraph ? 'Graph types' : 'Pipeline types'}</Link>\n          {' > '}\n          {displayName}\n        </SidebarTitle>\n      </Box>\n      <SidebarSection title=\"Description\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <Description description={description || 'No Description Provided'} />\n        </Box>\n      </SidebarSection>\n      {tableSchema && (\n        <SidebarSection title=\"Columns\">\n          <TableSchema schema={tableSchema} itemHorizontalPadding={24} />\n        </SidebarSection>\n      )}\n      {inputSchemaType && (\n        <SidebarSection title=\"Input\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={inputSchemaType}\n              typesInScope={inputSchemaType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {outputSchemaType && (\n        <SidebarSection title=\"Output\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={outputSchemaType}\n              typesInScope={outputSchemaType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const TYPE_EXPLORER_FRAGMENT = gql`\n  fragment TypeExplorerFragment on DagsterType {\n    name\n    description\n    metadataEntries {\n      ...MetadataEntryFragment\n    }\n    inputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n    outputSchemaType {\n      ...ConfigTypeSchemaFragment\n      recursiveConfigTypes {\n        ...ConfigTypeSchemaFragment\n      }\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\n\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {buildPipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {TypeExplorer, TYPE_EXPLORER_FRAGMENT} from './TypeExplorer';\nimport {\n  TypeExplorerContainerQuery,\n  TypeExplorerContainerQueryVariables,\n} from './types/TypeExplorerContainerQuery';\n\ninterface ITypeExplorerContainerProps {\n  explorerPath: ExplorerPath;\n  typeName: string;\n  repoAddress?: RepoAddress;\n}\n\nexport const TypeExplorerContainer: React.FC<ITypeExplorerContainerProps> = ({\n  explorerPath,\n  typeName,\n  repoAddress,\n}) => {\n  const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n  const queryResult = useQuery<TypeExplorerContainerQuery, TypeExplorerContainerQueryVariables>(\n    TYPE_EXPLORER_CONTAINER_QUERY,\n    {\n      fetchPolicy: 'cache-and-network',\n      variables: {\n        pipelineSelector,\n        dagsterTypeName: typeName,\n      },\n    },\n  );\n  return (\n    <Loading queryResult={queryResult}>\n      {(data) => {\n        if (\n          data.pipelineOrError &&\n          data.pipelineOrError.__typename === 'Pipeline' &&\n          data.pipelineOrError.dagsterTypeOrError &&\n          data.pipelineOrError.dagsterTypeOrError.__typename === 'RegularDagsterType'\n        ) {\n          return (\n            <TypeExplorer\n              isGraph={data.pipelineOrError.isJob}\n              type={data.pipelineOrError.dagsterTypeOrError}\n            />\n          );\n        } else {\n          return <div>Type Not Found</div>;\n        }\n      }}\n    </Loading>\n  );\n};\n\nconst TYPE_EXPLORER_CONTAINER_QUERY = gql`\n  query TypeExplorerContainerQuery(\n    $pipelineSelector: PipelineSelector!\n    $dagsterTypeName: String!\n  ) {\n    pipelineOrError(params: $pipelineSelector) {\n      __typename\n      ... on Pipeline {\n        id\n        isJob\n        dagsterTypeOrError(dagsterTypeName: $dagsterTypeName) {\n          __typename\n          ... on RegularDagsterType {\n            ...TypeExplorerFragment\n          }\n        }\n      }\n    }\n  }\n  ${TYPE_EXPLORER_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from '../pipelines/SidebarComponents';\n\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from './TypeWithTooltip';\nimport {TypeListFragment} from './types/TypeListFragment';\n\ninterface ITypeListProps {\n  isGraph: boolean;\n  types: Array<TypeListFragment>;\n}\n\nfunction groupTypes(types: TypeListFragment[]): {[key: string]: TypeListFragment[]} {\n  const groups = {\n    Custom: Array<TypeListFragment>(),\n    'Built-in': Array<TypeListFragment>(),\n  };\n  types.forEach((type) => {\n    if (type.isBuiltin) {\n      groups['Built-in'].push(type);\n    } else {\n      groups['Custom'].push(type);\n    }\n  });\n  return groups;\n}\n\nexport const TypeList: React.FC<ITypeListProps> = (props) => {\n  const groups = groupTypes(props.types);\n  return (\n    <>\n      <SidebarSubhead />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SidebarTitle>{props.isGraph ? 'Graph types' : 'Pipeline types'}</SidebarTitle>\n      </Box>\n      {Object.keys(groups).map((title, idx) => {\n        const typesForSection = groups[title];\n        const collapsedByDefault = idx !== 0 || groups[title].length === 0;\n\n        return (\n          <SidebarSection key={idx} title={title} collapsedByDefault={collapsedByDefault}>\n            <Box padding={{vertical: 16, horizontal: 24}}>\n              {typesForSection.length ? (\n                <StyledUL>\n                  {groups[title].map((type, i) => (\n                    <TypeLI key={i}>\n                      <TypeWithTooltip type={type} />\n                    </TypeLI>\n                  ))}\n                </StyledUL>\n              ) : (\n                <div style={{color: Colors.Gray500, fontSize: '12px'}}>None</div>\n              )}\n            </Box>\n          </SidebarSection>\n        );\n      })}\n    </>\n  );\n};\n\nexport const TYPE_LIST_FRAGMENT = gql`\n  fragment TypeListFragment on DagsterType {\n    name\n    isBuiltin\n    ...DagsterTypeWithTooltipFragment\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n\nconst StyledUL = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin: 0;\n  padding: 0;\n`;\n\nconst TypeLI = styled.li`\n  list-style-type: none;\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ExplorerPath} from '../pipelines/PipelinePathUtils';\nimport {Loading} from '../ui/Loading';\nimport {\n  buildPipelineSelector,\n  optionToRepoAddress,\n  useRepositoryOptions,\n} from '../workspace/WorkspaceContext';\nimport {findRepoContainingPipeline} from '../workspace/findRepoContainingPipeline';\nimport {RepoAddress} from '../workspace/types';\n\nimport {TypeList, TYPE_LIST_FRAGMENT} from './TypeList';\nimport {\n  TypeListContainerQuery,\n  TypeListContainerQueryVariables,\n} from './types/TypeListContainerQuery';\n\ninterface ITypeListContainerProps {\n  explorerPath: ExplorerPath;\n  repoAddress?: RepoAddress;\n}\n\nexport const TypeListContainer: React.FC<ITypeListContainerProps> = ({\n  explorerPath,\n  repoAddress,\n}) => {\n  const {pipelineName, snapshotId} = explorerPath;\n  const {options} = useRepositoryOptions();\n\n  const pipelineSelector = React.useMemo(() => {\n    if (!repoAddress) {\n      const reposWithMatch = findRepoContainingPipeline(options, pipelineName, snapshotId);\n      return reposWithMatch.length\n        ? buildPipelineSelector(optionToRepoAddress(reposWithMatch[0]), pipelineName)\n        : null;\n    }\n    return buildPipelineSelector(repoAddress, pipelineName);\n  }, [options, pipelineName, repoAddress, snapshotId]);\n\n  const queryResult = useQuery<TypeListContainerQuery, TypeListContainerQueryVariables>(\n    TYPE_LIST_CONTAINER_QUERY,\n    {\n      fetchPolicy: 'cache-and-network',\n      variables: {pipelineSelector: pipelineSelector!},\n      skip: !pipelineSelector,\n    },\n  );\n\n  if (!pipelineSelector) {\n    return (\n      <Box margin={48}>\n        <NonIdealState icon=\"error\" title=\"Could not fetch types for snapshot\" />\n      </Box>\n    );\n  }\n\n  return (\n    <Loading queryResult={queryResult}>\n      {(data) => {\n        if (data.pipelineOrError.__typename === 'Pipeline') {\n          return (\n            <TypeList\n              types={data.pipelineOrError.dagsterTypes}\n              isGraph={data.pipelineOrError.isJob}\n            />\n          );\n        } else {\n          return null;\n        }\n      }}\n    </Loading>\n  );\n};\n\nconst TYPE_LIST_CONTAINER_QUERY = gql`\n  query TypeListContainerQuery($pipelineSelector: PipelineSelector!) {\n    pipelineOrError(params: $pipelineSelector) {\n      __typename\n      ... on Pipeline {\n        id\n        isJob\n        name\n        dagsterTypes {\n          ...TypeListFragment\n        }\n      }\n    }\n  }\n\n  ${TYPE_LIST_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, Spinner, Tooltip} from '@dagster-io/ui';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {AssetValueGraph, AssetValueGraphData} from '../assets/AssetValueGraph';\nimport {StepStatusDot} from '../gantt/GanttStatusPanel';\nimport {linkToRunEvent} from '../runs/RunUtils';\nimport {RepoAddress} from '../workspace/types';\n\nimport {SidebarSection} from './SidebarComponents';\nimport {SidebarOpGraphsQuery, SidebarOpGraphsQueryVariables} from './types/SidebarOpGraphsQuery';\n\nexport const StateColors = {\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  SKIPPED: Colors.Gray500,\n};\n\nexport const SidebarOpExecutionGraphs: React.FC<{\n  handleID: string;\n  solidName: string;\n  pipelineName: string;\n  repoAddress: RepoAddress;\n}> = ({repoAddress, handleID, pipelineName, solidName}) => {\n  const [highlightedStartTime, setHighlightedStartTime] = React.useState<number | null>(null);\n  const result = useQuery<SidebarOpGraphsQuery, SidebarOpGraphsQueryVariables>(\n    SIDEBAR_OP_GRAPHS_QUERY,\n    {\n      variables: {\n        handleID,\n        selector: {\n          repositoryName: repoAddress.name,\n          repositoryLocationName: repoAddress.location,\n          pipelineName,\n        },\n      },\n      fetchPolicy: 'cache-and-network',\n    },\n  );\n  const stepStats =\n    result.data?.pipelineOrError.__typename === 'Pipeline'\n      ? result.data.pipelineOrError.solidHandle?.stepStats\n      : undefined;\n\n  const nodes =\n    stepStats && stepStats.__typename === 'SolidStepStatsConnection' ? stepStats.nodes : null;\n\n  const executionTime = React.useMemo(() => {\n    const values = nodes\n      ? nodes\n          .filter((s) => s.startTime && s.endTime)\n          .map((s) => ({\n            x: Number(s.startTime) * 1000,\n            xNumeric: Number(s.startTime) * 1000,\n            y: s.endTime! - s.startTime!,\n          }))\n      : [];\n\n    const xs = values.map((v) => v.xNumeric);\n    const ys = values.map((v) => v.y).filter((v) => !isNaN(v));\n    const data: AssetValueGraphData = {\n      xAxis: 'time',\n      values,\n      minXNumeric: Math.min(...xs),\n      maxXNumeric: Math.max(...xs),\n      minY: Math.min(...ys),\n      maxY: Math.max(...ys),\n    };\n    return data;\n  }, [nodes]);\n\n  if (stepStats?.__typename === 'SolidStepStatusUnavailableError') {\n    return <span />;\n  }\n\n  const displayed = (nodes || []).slice(0, 10);\n\n  return (\n    <>\n      <SidebarSection title=\"Execution Time\">\n        <Box flex={{alignItems: 'center', justifyContent: 'center'}}>\n          {result.loading ? (\n            <Spinner purpose=\"section\" />\n          ) : (\n            <AssetValueGraph\n              label=\"Step Execution Time\"\n              yAxisLabel=\"Seconds\"\n              width=\"100%\"\n              data={executionTime}\n              xHover={highlightedStartTime}\n              onHoverX={(v) => setHighlightedStartTime(v ? Number(v) : null)}\n            />\n          )}\n        </Box>\n      </SidebarSection>\n      <SidebarSection title=\"Execution Status\">\n        <Box padding={{left: 24, right: 16, vertical: 12}}>\n          <Box flex={{gap: 16}} style={{fontSize: '0.8rem'}}>\n            <div style={{flex: 1}}>{`Last ${displayed.length} Run${\n              displayed.length !== 1 ? 's' : ''\n            }`}</div>\n            <Box style={{overflowX: 'auto'}} flex={{gap: 2}}>\n              {displayed.reverse().map(({runId, status, startTime}) => (\n                <Tooltip\n                  key={runId}\n                  placement=\"bottom-end\"\n                  content={`View Run ${runId.slice(0, 8)} →`}\n                >\n                  <Link to={linkToRunEvent({runId}, {stepKey: solidName})}>\n                    <StepStatusDot\n                      onMouseEnter={() => startTime && setHighlightedStartTime(startTime * 1000)}\n                      onMouseLeave={() => setHighlightedStartTime(null)}\n                      style={{\n                        border: `2px solid ${\n                          startTime && startTime * 1000 === highlightedStartTime\n                            ? Colors.Blue500\n                            : 'transparent'\n                        }`,\n                        backgroundColor: status ? StateColors[status] : Colors.Gray200,\n                      }}\n                    />\n                  </Link>\n                </Tooltip>\n              ))}\n            </Box>\n          </Box>\n        </Box>\n      </SidebarSection>\n    </>\n  );\n};\n\nconst SIDEBAR_OP_GRAPHS_QUERY = gql`\n  query SidebarOpGraphsQuery($selector: PipelineSelector!, $handleID: String!) {\n    pipelineOrError(params: $selector) {\n      __typename\n      ... on Pipeline {\n        id\n        name\n        solidHandle(handleID: $handleID) {\n          stepStats(limit: 20) {\n            __typename\n\n            ... on SolidStepStatsConnection {\n              nodes {\n                runId\n                startTime\n                endTime\n                status\n              }\n            }\n            ... on SolidStepStatusUnavailableError {\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Button, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT} from '../typeexplorer/TypeWithTooltip';\n\nimport {SidebarSection, SidebarTitle} from './SidebarComponents';\nimport {DependencyHeaderRow, DependencyRow, DependencyTable} from './SidebarOpHelpers';\nimport {SidebarOpInvocationFragment} from './types/SidebarOpInvocationFragment';\n\ninterface ISidebarOpInvocationProps {\n  solid: SidebarOpInvocationFragment;\n  onEnterSubgraph?: (arg: OpNameOrPath) => void;\n}\n\nexport const SidebarOpInvocation: React.FC<ISidebarOpInvocationProps> = (props) => {\n  const {solid, onEnterSubgraph} = props;\n  const showInputs = solid.inputs.some((o) => o.dependsOn.length);\n  const showOutputs = solid.outputs.some((o) => o.dependedBy.length);\n\n  return (\n    <div>\n      <SidebarSection title=\"Invocation\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <SidebarTitle>{breakOnUnderscores(solid.name)}</SidebarTitle>\n          {showInputs || showOutputs ? (\n            <DependencyTable>\n              <tbody>\n                {showInputs ? (\n                  <>\n                    <DependencyHeaderRow label=\"Inputs\" />\n                    {solid.inputs.map(({definition, dependsOn, isDynamicCollect}) =>\n                      dependsOn.map((source, idx) => (\n                        <DependencyRow\n                          key={idx}\n                          from={source}\n                          to={definition.name}\n                          isDynamic={isDynamicCollect}\n                        />\n                      )),\n                    )}\n                  </>\n                ) : null}\n                {showOutputs ? (\n                  <>\n                    <DependencyHeaderRow label=\"Outputs\" />\n                    {solid.outputs.map(({definition, dependedBy}) =>\n                      dependedBy.map((target, idx) => (\n                        <DependencyRow\n                          key={idx}\n                          from={definition.name}\n                          to={target}\n                          isDynamic={definition.isDynamic}\n                        />\n                      )),\n                    )}\n                  </>\n                ) : null}\n              </tbody>\n            </DependencyTable>\n          ) : null}\n          {onEnterSubgraph && (\n            <Box margin={{top: 12}}>\n              <Button\n                icon={<Icon name=\"zoom_in\" />}\n                onClick={() => onEnterSubgraph({name: solid.name})}\n              >\n                Expand graph\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </SidebarSection>\n    </div>\n  );\n};\n\nexport const SIDEBAR_SOLID_INVOCATION_FRAGMENT = gql`\n  fragment SidebarOpInvocationFragment on Solid {\n    name\n    inputs {\n      isDynamicCollect\n      definition {\n        name\n        description\n        type {\n          ...DagsterTypeWithTooltipFragment\n        }\n      }\n      dependsOn {\n        definition {\n          name\n        }\n        solid {\n          name\n        }\n      }\n    }\n    outputs {\n      definition {\n        name\n        description\n        isDynamic\n        type {\n          ...DagsterTypeWithTooltipFragment\n        }\n      }\n      dependedBy {\n        definition {\n          name\n        }\n        solid {\n          name\n        }\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Colors, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {LoadingSpinner} from '../ui/Loading';\nimport {RepoAddress} from '../workspace/types';\n\nimport {ExplorerPath} from './PipelinePathUtils';\nimport {SidebarOpDefinition, SIDEBAR_SOLID_DEFINITION_FRAGMENT} from './SidebarOpDefinition';\nimport {SidebarOpExecutionGraphs} from './SidebarOpExecutionGraphs';\nimport {SidebarOpInvocation, SIDEBAR_SOLID_INVOCATION_FRAGMENT} from './SidebarOpInvocation';\nimport {\n  SidebarGraphSolidQuery,\n  SidebarGraphSolidQueryVariables,\n} from './types/SidebarGraphSolidQuery';\nimport {SidebarOpContainerFragment} from './types/SidebarOpContainerFragment';\nimport {\n  SidebarPipelineSolidQuery,\n  SidebarPipelineSolidQueryVariables,\n} from './types/SidebarPipelineSolidQuery';\n\ninterface SidebarOpContainerProps {\n  handleID: string;\n  explorerPath: ExplorerPath;\n  showingSubgraph: boolean;\n  parentOpHandleID?: string;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  onEnterSubgraph?: (arg: OpNameOrPath) => void;\n  onClickOp: (arg: OpNameOrPath) => void;\n  repoAddress?: RepoAddress;\n  isGraph: boolean;\n}\n\nconst useSidebarOpQuery = (\n  name: string,\n  handleID: string,\n  isGraph: boolean,\n  repoAddress?: RepoAddress,\n) => {\n  const pipelineResult = useQuery<SidebarPipelineSolidQuery, SidebarPipelineSolidQueryVariables>(\n    SIDEBAR_PIPELINE_SOLID_QUERY,\n    {\n      variables: {\n        selector: {\n          repositoryName: repoAddress?.name || '',\n          repositoryLocationName: repoAddress?.location || '',\n          pipelineName: name,\n        },\n        handleID,\n      },\n      fetchPolicy: 'cache-and-network',\n      skip: isGraph,\n    },\n  );\n\n  const graphResult = useQuery<SidebarGraphSolidQuery, SidebarGraphSolidQueryVariables>(\n    SIDEBAR_GRAPH_SOLID_QUERY,\n    {\n      variables: {\n        selector: {\n          repositoryName: repoAddress?.name || '',\n          repositoryLocationName: repoAddress?.location || '',\n          graphName: name,\n        },\n        handleID,\n      },\n      fetchPolicy: 'cache-and-network',\n      skip: !isGraph,\n    },\n  );\n\n  if (isGraph) {\n    const {error, data, loading} = graphResult;\n    const solidContainer: SidebarOpContainerFragment | undefined =\n      data?.graphOrError.__typename === 'Graph' ? data.graphOrError : undefined;\n    return {\n      error,\n      solidContainer,\n      isLoading: !!loading,\n    };\n  }\n\n  const {error, data, loading} = pipelineResult;\n  const solidContainer: SidebarOpContainerFragment | undefined =\n    data?.pipelineOrError.__typename === 'Pipeline' ? data.pipelineOrError : undefined;\n  return {\n    error,\n    solidContainer,\n    isLoading: !!loading,\n  };\n};\n\nexport const SidebarOpContainer: React.FC<SidebarOpContainerProps> = ({\n  handleID,\n  explorerPath,\n  getInvocations,\n  showingSubgraph,\n  onEnterSubgraph,\n  onClickOp,\n  repoAddress,\n  isGraph,\n}) => {\n  const {error, solidContainer, isLoading} = useSidebarOpQuery(\n    explorerPath.pipelineName,\n    handleID,\n    isGraph,\n    repoAddress,\n  );\n  if (error) {\n    return (\n      <Box padding={64} flex={{justifyContent: 'center'}}>\n        <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n      </Box>\n    );\n  }\n\n  if (isLoading) {\n    return <LoadingSpinner purpose=\"section\" />;\n  }\n\n  if (!solidContainer) {\n    return (\n      <Box padding={{vertical: 16, horizontal: 24}} style={{color: Colors.Gray500}}>\n        Could not load ops.\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      <SidebarOpInvocation\n        key={`${handleID}-inv`}\n        solid={solidContainer!.solidHandle!.solid}\n        onEnterSubgraph={\n          solidContainer!.solidHandle!.solid.definition.__typename === 'CompositeSolidDefinition'\n            ? onEnterSubgraph\n            : undefined\n        }\n      />\n      {!isGraph && repoAddress && (\n        <SidebarOpExecutionGraphs\n          key={`${handleID}-graphs`}\n          handleID={handleID}\n          solidName={solidContainer!.solidHandle!.solid.name}\n          pipelineName={explorerPath.pipelineName}\n          repoAddress={repoAddress}\n        />\n      )}\n      <SidebarOpDefinition\n        key={`${handleID}-def`}\n        showingSubgraph={showingSubgraph}\n        definition={solidContainer!.solidHandle!.solid.definition}\n        getInvocations={getInvocations}\n        onClickInvocation={({handleID}) => onClickOp({path: handleID.split('.')})}\n        repoAddress={repoAddress}\n      />\n    </>\n  );\n};\n\nconst SIDEBAR_SOLID_CONTAINER_FRAGMENT = gql`\n  fragment SidebarOpContainerFragment on SolidContainer {\n    id\n    name\n    solidHandle(handleID: $handleID) {\n      solid {\n        ...SidebarOpInvocationFragment\n\n        definition {\n          __typename\n          ...SidebarOpDefinitionFragment\n        }\n      }\n    }\n  }\n  ${SIDEBAR_SOLID_INVOCATION_FRAGMENT}\n  ${SIDEBAR_SOLID_DEFINITION_FRAGMENT}\n`;\n\nconst SIDEBAR_PIPELINE_SOLID_QUERY = gql`\n  query SidebarPipelineSolidQuery($selector: PipelineSelector!, $handleID: String!) {\n    pipelineOrError(params: $selector) {\n      __typename\n      ... on Pipeline {\n        id\n        ...SidebarOpContainerFragment\n      }\n    }\n  }\n  ${SIDEBAR_SOLID_CONTAINER_FRAGMENT}\n`;\n\nconst SIDEBAR_GRAPH_SOLID_QUERY = gql`\n  query SidebarGraphSolidQuery($selector: GraphSelector!, $handleID: String!) {\n    graphOrError(selector: $selector) {\n      __typename\n      ... on Graph {\n        id\n        ...SidebarOpContainerFragment\n      }\n    }\n  }\n  ${SIDEBAR_SOLID_CONTAINER_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {breakOnUnderscores} from '../app/Util';\n\nimport {Description} from './Description';\nimport {SidebarSection, SidebarSubhead, SidebarTitle} from './SidebarComponents';\nimport {SidebarModeSection, SIDEBAR_MODE_INFO_FRAGMENT} from './SidebarModeSection';\nimport {SidebarOpContainerInfoFragment} from './types/SidebarOpContainerInfoFragment';\n\nconst NO_DESCRIPTION = '';\n\ninterface ISidebarOpContainerInfoProps {\n  isGraph: boolean;\n  pipeline: SidebarOpContainerInfoFragment;\n}\n\nexport const SidebarOpContainerInfo: React.FC<ISidebarOpContainerInfoProps> = ({\n  isGraph,\n  pipeline,\n}) => {\n  return (\n    <div>\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <SidebarSubhead>{isGraph ? 'Graph' : 'Pipeline'}</SidebarSubhead>\n        <SidebarTitle>{breakOnUnderscores(pipeline.name)}</SidebarTitle>\n      </Box>\n      <SidebarSection title=\"Description\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <Description description={pipeline ? pipeline.description : NO_DESCRIPTION} />\n        </Box>\n      </SidebarSection>\n      {!isGraph && (\n        <SidebarSection title=\"Modes\" collapsedByDefault={true}>\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            {pipeline.modes.map((mode) => (\n              <SidebarModeSection key={mode.name} mode={mode} />\n            ))}\n          </Box>\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const SIDEBAR_OP_CONTAINER_INFO_FRAGMENT = gql`\n  fragment SidebarOpContainerInfoFragment on SolidContainer {\n    id\n    name\n    description\n    modes {\n      id\n      ...SidebarModeInfoFragment\n    }\n  }\n\n  ${SIDEBAR_MODE_INFO_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors, Tabs} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {TypeExplorerContainer} from '../typeexplorer/TypeExplorerContainer';\nimport {TypeListContainer} from '../typeexplorer/TypeListContainer';\nimport {TabLink} from '../ui/TabLink';\nimport {RepoAddress} from '../workspace/types';\n\nimport {RightInfoPanelContent} from './GraphExplorer';\nimport {GraphExplorerJobContext} from './GraphExplorerJobContext';\nimport {ExplorerPath} from './PipelinePathUtils';\nimport {SidebarOpContainer} from './SidebarOpContainer';\nimport {SidebarOpContainerInfo, SIDEBAR_OP_CONTAINER_INFO_FRAGMENT} from './SidebarPipelineInfo';\nimport {SidebarTabbedContainerPipelineFragment} from './types/SidebarTabbedContainerPipelineFragment';\n\ntype TabKey = 'types' | 'info';\n\ninterface TabDefinition {\n  name: string;\n  key: TabKey;\n  content: () => React.ReactNode;\n}\n\ninterface ISidebarTabbedContainerProps {\n  tab?: TabKey;\n  typeName?: string;\n  pipeline: SidebarTabbedContainerPipelineFragment;\n  explorerPath: ExplorerPath;\n  opHandleID?: string;\n  parentOpHandleID?: string;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  onEnterSubgraph: (arg: OpNameOrPath) => void;\n  onClickOp: (arg: OpNameOrPath) => void;\n  repoAddress?: RepoAddress;\n  isGraph: boolean;\n}\n\nexport const SidebarTabbedContainer: React.FC<ISidebarTabbedContainerProps> = (props) => {\n  const {\n    tab,\n    typeName,\n    pipeline,\n    explorerPath,\n    opHandleID,\n    getInvocations,\n    parentOpHandleID,\n    onEnterSubgraph,\n    onClickOp,\n    repoAddress,\n    isGraph,\n  } = props;\n\n  const jobContext = React.useContext(GraphExplorerJobContext);\n\n  const activeTab = tab || 'info';\n\n  const TabDefinitions: Array<TabDefinition> = [\n    {\n      name: 'Info',\n      key: 'info',\n      content: () =>\n        opHandleID ? (\n          <SidebarOpContainer\n            key={opHandleID}\n            explorerPath={explorerPath}\n            handleID={opHandleID}\n            showingSubgraph={false}\n            getInvocations={getInvocations}\n            onEnterSubgraph={onEnterSubgraph}\n            onClickOp={onClickOp}\n            repoAddress={repoAddress}\n            isGraph={isGraph}\n          />\n        ) : parentOpHandleID ? (\n          <SidebarOpContainer\n            key={parentOpHandleID}\n            explorerPath={explorerPath}\n            handleID={parentOpHandleID}\n            showingSubgraph={true}\n            getInvocations={getInvocations}\n            onClickOp={onClickOp}\n            repoAddress={repoAddress}\n            isGraph={isGraph}\n          />\n        ) : jobContext ? (\n          jobContext.sidebarTab\n        ) : (\n          <SidebarOpContainerInfo isGraph={!!isGraph} pipeline={pipeline} key={pipeline.name} />\n        ),\n    },\n    {\n      name: 'Types',\n      key: 'types',\n      content: () =>\n        typeName ? (\n          <TypeExplorerContainer\n            explorerPath={explorerPath}\n            repoAddress={repoAddress}\n            typeName={typeName}\n          />\n        ) : (\n          <TypeListContainer repoAddress={repoAddress} explorerPath={explorerPath} />\n        ),\n    },\n  ];\n\n  return (\n    <>\n      <Box\n        padding={{horizontal: 24}}\n        border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n      >\n        <Tabs selectedTabId={activeTab}>\n          {TabDefinitions.map(({name, key}) => (\n            <TabLink id={key} key={key} to={{search: `?tab=${key}`}} title={name} />\n          ))}\n        </Tabs>\n      </Box>\n      <RightInfoPanelContent>\n        {TabDefinitions.find((t) => t.key === activeTab)?.content()}\n      </RightInfoPanelContent>\n    </>\n  );\n};\n\nexport const SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT = gql`\n  fragment SidebarTabbedContainerPipelineFragment on SolidContainer {\n    id\n    name\n    ...SidebarOpContainerInfoFragment\n  }\n\n  ${SIDEBAR_OP_CONTAINER_INFO_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {Breadcrumbs} from '@blueprintjs/core';\nimport {Checkbox, Colors, SplitPanelContainer, TextInput} from '@dagster-io/ui';\nimport Color from 'color';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Route} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery} from '../app/GraphQueryImpl';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {OpGraph, OP_GRAPH_OP_FRAGMENT} from '../graph/OpGraph';\nimport {useOpLayout} from '../graph/asyncGraphLayout';\nimport {OpNameOrPath} from '../ops/OpNameOrPath';\nimport {GraphQueryInput} from '../ui/GraphQueryInput';\nimport {RepoAddress} from '../workspace/types';\n\nimport {\n  EmptyDAGNotice,\n  EntirelyFilteredDAGNotice,\n  LargeDAGNotice,\n  LoadingNotice,\n} from './GraphNotices';\nimport {ExplorerPath} from './PipelinePathUtils';\nimport {\n  SidebarTabbedContainer,\n  SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT,\n} from './SidebarTabbedContainer';\nimport {GraphExplorerFragment} from './types/GraphExplorerFragment';\nimport {GraphExplorerSolidHandleFragment} from './types/GraphExplorerSolidHandleFragment';\n\nexport interface GraphExplorerOptions {\n  explodeComposites: boolean;\n  preferAssetRendering: boolean;\n}\n\ninterface GraphExplorerProps {\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  options: GraphExplorerOptions;\n  setOptions: (options: GraphExplorerOptions) => void;\n  pipelineOrGraph: GraphExplorerFragment;\n  repoAddress?: RepoAddress;\n  handles: GraphExplorerSolidHandleFragment[];\n  parentHandle?: GraphExplorerSolidHandleFragment;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  isGraph: boolean;\n}\n\nexport const GraphExplorer: React.FC<GraphExplorerProps> = (props) => {\n  const {\n    getInvocations,\n    handles,\n    options,\n    pipelineOrGraph,\n    explorerPath,\n    onChangeExplorerPath,\n    parentHandle,\n    setOptions,\n    repoAddress,\n    isGraph,\n  } = props;\n  const [nameMatch, setNameMatch] = React.useState('');\n\n  const handleQueryChange = (opsQuery: string) => {\n    onChangeExplorerPath({...explorerPath, opsQuery}, 'replace');\n  };\n\n  const handleAdjustPath = React.useMemo(\n    () => (fn: (opNames: string[]) => void) => {\n      const opNames = [...explorerPath.opNames];\n      const retValue = fn(opNames);\n      if (retValue !== undefined) {\n        throw new Error(\n          'handleAdjustPath function is expected to mutate the array and return nothing',\n        );\n      }\n      onChangeExplorerPath({...explorerPath, opNames}, 'push');\n    },\n    [onChangeExplorerPath, explorerPath],\n  );\n\n  // Note: this method handles relative solid paths, eg: {path: ['..', 'OtherSolid']}.\n  // This is important because the DAG component tree doesn't always have access to a handleID,\n  // and we sometimes want to be able to jump to a solid in the parent layer.\n  //\n  const handleClickOp = (arg: OpNameOrPath) => {\n    handleAdjustPath((opNames) => {\n      if ('name' in arg) {\n        opNames[opNames.length ? opNames.length - 1 : 0] = arg.name;\n      } else {\n        if (arg.path[0] !== '..') {\n          opNames.length = 0;\n        }\n        if (arg.path[0] === '..' && opNames[opNames.length - 1] !== '') {\n          opNames.pop(); // remove the last path component indicating selection\n        }\n        while (arg.path[0] === '..') {\n          arg.path.shift();\n          opNames.pop();\n        }\n        opNames.push(...arg.path);\n      }\n    });\n  };\n\n  const handleEnterCompositeSolid = (arg: OpNameOrPath) => {\n    // To animate the rect of the composite solid expanding correctly, we need\n    // to select it before entering it so we can draw the \"initial state\" of the\n    // labeled rectangle.\n    handleClickOp(arg);\n\n    window.requestAnimationFrame(() => {\n      handleAdjustPath((opNames) => {\n        const last = 'name' in arg ? arg.name : arg.path[arg.path.length - 1];\n        opNames[opNames.length - 1] = last;\n        opNames.push('');\n      });\n    });\n  };\n\n  const handleLeaveCompositeSolid = () => {\n    handleAdjustPath((opNames) => {\n      opNames.pop();\n    });\n  };\n\n  const handleClickBackground = () => {\n    handleClickOp({name: ''});\n  };\n\n  const {opsQuery, opNames} = explorerPath;\n\n  const selectedName = opNames[opNames.length - 1];\n  const selectedHandle = handles.find((h) => selectedName === h.solid.name);\n\n  // Run a few assertions on the state of the world and redirect the user\n  // back to safety if they've landed in an invalid place. Note that we can\n  // pop one layer at a time and this renders recursively until we reach a\n  // valid parent.\n  const invalidSelection = selectedName && !selectedHandle;\n  const invalidParent =\n    parentHandle && parentHandle.solid.definition.__typename !== 'CompositeSolidDefinition';\n\n  React.useEffect(() => {\n    if (invalidSelection || invalidParent) {\n      handleAdjustPath((opNames) => {\n        opNames.pop();\n      });\n    }\n  }, [handleAdjustPath, invalidSelection, invalidParent]);\n\n  const solids = React.useMemo(() => handles.map((h) => h.solid), [handles]);\n  const solidsQueryEnabled = !parentHandle && !explorerPath.snapshotId;\n  const showAssetRenderingOption =\n    !isGraph && solids.some((s) => s.definition.assetNodes.length > 0);\n  const explodeCompositesEnabled =\n    !parentHandle &&\n    (options.explodeComposites ||\n      solids.some((f) => f.definition.__typename === 'CompositeSolidDefinition'));\n\n  const queryResultOps = React.useMemo(\n    () =>\n      solidsQueryEnabled\n        ? filterByQuery(solids, opsQuery)\n        : {all: solids, focus: [], applyingEmptyDefault: false},\n    [opsQuery, solids, solidsQueryEnabled],\n  );\n\n  const highlightedOps = React.useMemo(\n    () => queryResultOps.all.filter((s) => s.name.toLowerCase().includes(nameMatch.toLowerCase())),\n    [nameMatch, queryResultOps.all],\n  );\n\n  const parentOp = parentHandle && parentHandle.solid;\n  const {layout, loading, async} = useOpLayout(queryResultOps.all, parentOp);\n\n  const breadcrumbs = React.useMemo(() => {\n    const opNames = explorerPath.opNames;\n    const breadcrumbs = opNames.map((name, idx) => ({\n      text: name,\n      onClick: () => {\n        onChangeExplorerPath({...explorerPath, opNames: opNames.slice(0, idx + 1)}, 'push');\n      },\n    }));\n    // If you're viewing a graph that is part of an asset job, we don't want to let you view\n    // the \"root\" graph becacuse it's not something you defined explicitly. Remove the first item.\n    if (isHiddenAssetGroupJob(explorerPath.pipelineName)) {\n      breadcrumbs.shift();\n    }\n    return breadcrumbs;\n  }, [explorerPath, onChangeExplorerPath]);\n\n  return (\n    <SplitPanelContainer\n      identifier=\"explorer\"\n      firstInitialPercent={70}\n      first={\n        <>\n          {solidsQueryEnabled ? (\n            <QueryOverlay>\n              <GraphQueryInput\n                items={solids}\n                value={explorerPath.opsQuery}\n                placeholder=\"Type an op subset…\"\n                popoverPosition=\"bottom-left\"\n                onChange={handleQueryChange}\n              />\n            </QueryOverlay>\n          ) : breadcrumbs.length > 1 ? (\n            <BreadcrumbsOverlay>\n              <Breadcrumbs currentBreadcrumbRenderer={() => <span />} items={breadcrumbs} />\n            </BreadcrumbsOverlay>\n          ) : null}\n\n          {(showAssetRenderingOption || explodeCompositesEnabled) && (\n            <OptionsOverlay>\n              {showAssetRenderingOption && (\n                <Checkbox\n                  format=\"switch\"\n                  label=\"View as Asset Graph\"\n                  checked={options.preferAssetRendering}\n                  onChange={() => {\n                    onChangeExplorerPath({...explorerPath, opNames: []}, 'replace');\n                    setOptions({\n                      ...options,\n                      preferAssetRendering: !options.preferAssetRendering,\n                    });\n                  }}\n                />\n              )}\n              {explodeCompositesEnabled && (\n                <Checkbox\n                  format=\"switch\"\n                  label=\"Explode graphs\"\n                  checked={options.explodeComposites}\n                  onChange={() => {\n                    handleQueryChange('');\n                    setOptions({\n                      ...options,\n                      explodeComposites: !options.explodeComposites,\n                    });\n                  }}\n                />\n              )}\n            </OptionsOverlay>\n          )}\n\n          <HighlightOverlay>\n            <TextInput\n              name=\"highlighted\"\n              icon=\"search\"\n              value={nameMatch}\n              placeholder=\"Highlight…\"\n              onChange={(e) => setNameMatch(e.target.value)}\n            />\n          </HighlightOverlay>\n\n          {solids.length === 0 ? (\n            <EmptyDAGNotice nodeType=\"op\" isGraph={isGraph} />\n          ) : queryResultOps.applyingEmptyDefault ? (\n            <LargeDAGNotice nodeType=\"op\" />\n          ) : Object.keys(queryResultOps.all).length === 0 ? (\n            <EntirelyFilteredDAGNotice nodeType=\"op\" />\n          ) : undefined}\n\n          {loading || !layout ? (\n            <LoadingNotice async={async} nodeType=\"op\" />\n          ) : (\n            <OpGraph\n              jobName={pipelineOrGraph.name}\n              ops={queryResultOps.all}\n              focusOps={queryResultOps.focus}\n              highlightedOps={highlightedOps}\n              selectedHandleID={selectedHandle && selectedHandle.handleID}\n              selectedOp={selectedHandle && selectedHandle.solid}\n              parentHandleID={parentHandle && parentHandle.handleID}\n              parentOp={parentOp}\n              onClickOp={handleClickOp}\n              onClickBackground={handleClickBackground}\n              onEnterSubgraph={handleEnterCompositeSolid}\n              onLeaveSubgraph={handleLeaveCompositeSolid}\n              layout={layout}\n            />\n          )}\n        </>\n      }\n      second={\n        <RightInfoPanel>\n          <Route\n            // eslint-disable-next-line react/no-children-prop\n            children={({location}: {location: any}) => (\n              <SidebarTabbedContainer\n                pipeline={pipelineOrGraph}\n                explorerPath={explorerPath}\n                opHandleID={selectedHandle && selectedHandle.handleID}\n                parentOpHandleID={parentHandle && parentHandle.handleID}\n                getInvocations={getInvocations}\n                onEnterSubgraph={handleEnterCompositeSolid}\n                onClickOp={handleClickOp}\n                repoAddress={repoAddress}\n                isGraph={isGraph}\n                {...qs.parse(location.search || '', {ignoreQueryPrefix: true})}\n              />\n            )}\n          />\n        </RightInfoPanel>\n      }\n    />\n  );\n};\n\nexport const GRAPH_EXPLORER_FRAGMENT = gql`\n  fragment GraphExplorerFragment on SolidContainer {\n    id\n    name\n    description\n    ...SidebarTabbedContainerPipelineFragment\n  }\n  ${SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT}\n`;\n\nexport const GRAPH_EXPLORER_ASSET_NODE_FRAGMENT = gql`\n  fragment GraphExplorerAssetNodeFragment on AssetNode {\n    id\n    opNames\n    assetKey {\n      path\n    }\n  }\n`;\n\nexport const GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT = gql`\n  fragment GraphExplorerSolidHandleFragment on SolidHandle {\n    handleID\n    solid {\n      name\n      ...OpGraphOpFragment\n    }\n  }\n  ${OP_GRAPH_OP_FRAGMENT}\n`;\n\nexport const RightInfoPanel = styled.div`\n  // Fixes major perofmance hit. To reproduce, add enough content to\n  // the sidebar that it scrolls (via overflow-y below) and then try\n  // to pan the DAG.\n  position: relative;\n\n  height: 100%;\n  min-height: 0;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  background: ${Colors.White};\n`;\n\nexport const RightInfoPanelContent = styled.div`\n  flex: 1;\n  overflow-y: auto;\n`;\n\nexport const OptionsOverlay = styled.div`\n  background-color: ${Color(Colors.White).fade(0.6).toString()};\n  z-index: 2;\n  padding: 15px 20px;\n  display: inline-flex;\n  align-items: stretch;\n  white-space: nowrap;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  gap: 8px;\n`;\n\nexport const HighlightOverlay = styled.div`\n  background-color: ${Color(Colors.White).fade(0.6).toString()};\n  z-index: 2;\n  padding: 8px 12px 0 0;\n  display: inline-flex;\n  align-items: stretch;\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nexport const QueryOverlay = styled.div`\n  z-index: 2;\n  position: absolute;\n  top: 8px;\n  left: 24px;\n  white-space: nowrap;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const BreadcrumbsOverlay = styled.div`\n  background-color: ${Color(Colors.White).fade(0.6).toString()};\n  z-index: 2;\n  padding: 12px 0 0 20px;\n  height: 42px;\n  max-width: calc(100% - 250px);\n  display: inline-flex;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n","import React from 'react';\n\n// Note: The motivation for this is that the SnapshotRoot shouldn't\n// show this tab, and there's not enought context to remove it far down in\n// the component tree.\ntype GraphExplorerJobContextData =\n  | {\n      sidebarTab: React.ReactNode;\n    }\n  | false;\n\nexport const GraphExplorerJobContext = React.createContext<GraphExplorerJobContextData>(false);\n","import {Box, Colors, Icon, NonIdealState, Spinner} from '@dagster-io/ui';\nimport capitalize from 'lodash/capitalize';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport const LargeDAGNotice = ({nodeType}: {nodeType: 'op' | 'asset'}) => (\n  <LargeDAGContainer>\n    <Icon name=\"arrow_upward\" size={24} />\n    <LargeDAGInstructionBox>\n      <p>\n        This is a large DAG that may be difficult to visualize. Type <code>*</code> in the graph\n        filter bar to render the entire thing, or type {nodeType} names and use:\n      </p>\n      <ul style={{marginBottom: 0}}>\n        <li>\n          <code>+</code> to expand a single layer before or after the {nodeType}.\n        </li>\n        <li>\n          <code>*</code> to expand recursively before or after the {nodeType}.\n        </li>\n        <li>\n          <code>AND</code> to render another disconnected fragment.\n        </li>\n      </ul>\n    </LargeDAGInstructionBox>\n  </LargeDAGContainer>\n);\n\nexport const EmptyDAGNotice: React.FC<{isGraph: boolean; nodeType: 'asset' | 'op'}> = ({\n  isGraph,\n  nodeType,\n}) => {\n  return (\n    <CenteredContainer>\n      <NonIdealState\n        icon=\"no-results\"\n        title={isGraph ? 'Empty graph' : 'Empty pipeline'}\n        description={\n          <div>\n            This {isGraph ? 'graph' : 'pipeline'} is empty. {capitalize(nodeType)}s will appear here\n            when they are added to loaded repositories.\n          </div>\n        }\n      />\n    </CenteredContainer>\n  );\n};\n\nexport const EntirelyFilteredDAGNotice: React.FC<{nodeType: 'asset' | 'op'}> = ({nodeType}) => {\n  return (\n    <CenteredContainer>\n      <NonIdealState\n        icon=\"no-results\"\n        title=\"Nothing to display\"\n        description={\n          <div>\n            No {nodeType}s match your query filter. Try removing your filter, typing <code>*</code>{' '}\n            to render the entire graph, or entering another filter string.\n          </div>\n        }\n      />\n    </CenteredContainer>\n  );\n};\n\nexport const LoadingNotice: React.FC<{async: boolean; nodeType: 'asset' | 'op'}> = (props) => {\n  const {async} = props;\n  return (\n    <LoadingContainer>\n      {async ? (\n        <Box margin={{bottom: 24}}>Rendering a large number of {props.nodeType}s, please wait…</Box>\n      ) : null}\n      <Spinner purpose=\"page\" />\n    </LoadingContainer>\n  );\n};\n\nconst LoadingContainer = styled.div`\n  background-color: ${Colors.White};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CenteredContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst LargeDAGContainer = styled.div`\n  width: 45vw;\n  position: absolute;\n  left: 40px;\n  top: 60px;\n  z-index: 2;\n  max-width: 500px;\n  display: flex;\n  flex-direction: column;\n  [role='img'] {\n    opacity: 0.5;\n    margin-left: 10vw;\n  }\n`;\n\nconst LargeDAGInstructionBox = styled.div`\n  padding: 15px 20px;\n  border: 1px solid #fff5c3;\n  margin-top: 20px;\n  color: ${Colors.Gray800};\n  background: #fffbe5;\n  text-align: left;\n  line-height: 1.4rem;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  code {\n    background: #f8ebad;\n    font-weight: 500;\n    padding: 0 4px;\n  }\n`;\n","import {NonIdealState} from '@dagster-io/ui';\nimport React from 'react';\n\ninterface Props {\n  isGraph: boolean;\n  result:\n    | {\n        __typename: 'PipelineSnapshotNotFoundError';\n        message: string;\n      }\n    | {\n        __typename: 'PipelineNotFoundError';\n        message: string;\n      }\n    | {\n        __typename: 'RepositoryNotFoundError';\n        message: string;\n      }\n    | {\n        __typename: 'PythonError';\n        message: string;\n      };\n}\n\nexport const NonIdealPipelineQueryResult: React.FC<Props> = ({isGraph, result}) => {\n  if (result.__typename === 'PipelineSnapshotNotFoundError') {\n    return (\n      <NonIdealState\n        icon=\"error\"\n        title={isGraph ? 'Graph snapshot not found' : 'Pipeline snapshot not found'}\n        description={result.message}\n      />\n    );\n  }\n  if (result.__typename === 'PipelineNotFoundError') {\n    return (\n      <NonIdealState\n        icon=\"error\"\n        title={isGraph ? 'Graph not found' : 'Pipeline not found'}\n        description={result.message}\n      />\n    );\n  }\n  if (result.__typename === 'RepositoryNotFoundError') {\n    return <NonIdealState icon=\"error\" title=\"Repository not found\" description={result.message} />;\n  }\n  if (result.__typename === 'PythonError') {\n    return <NonIdealState icon=\"error\" title=\"Query Error\" description={result.message} />;\n  }\n  return <span />;\n};\n","import {gql, useQuery} from '@apollo/client';\nimport * as React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {AssetGraphExplorer} from '../asset-graph/AssetGraphExplorer';\nimport {AssetLocation} from '../asset-graph/useFindAssetLocation';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {Loading} from '../ui/Loading';\nimport {buildPipelineSelector} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {explodeCompositesInHandleGraph} from './CompositeSupport';\nimport {\n  GraphExplorer,\n  GraphExplorerOptions,\n  GRAPH_EXPLORER_ASSET_NODE_FRAGMENT,\n  GRAPH_EXPLORER_FRAGMENT,\n  GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT,\n} from './GraphExplorer';\nimport {NonIdealPipelineQueryResult} from './NonIdealPipelineQueryResult';\nimport {ExplorerPath, explorerPathFromString, explorerPathToString} from './PipelinePathUtils';\nimport {\n  PipelineExplorerRootQuery,\n  PipelineExplorerRootQueryVariables,\n} from './types/PipelineExplorerRootQuery';\n\nexport const PipelineExplorerSnapshotRoot = () => {\n  const params = useParams();\n  const explorerPath = explorerPathFromString(params['0']);\n  const {pipelineName, snapshotId} = explorerPath;\n  const history = useHistory();\n\n  useDocumentTitle(`Snapshot: ${pipelineName}${snapshotId ? `@${snapshotId.slice(0, 8)}` : ''}`);\n\n  return (\n    <PipelineExplorerContainer\n      explorerPath={explorerPath}\n      onChangeExplorerPath={(path, mode) => {\n        history[mode](`/instance/snapshots/${explorerPathToString(path)}`);\n      }}\n      onNavigateToForeignNode={({assetKey}) => {\n        history.push(assetDetailsPathForKey(assetKey));\n      }}\n    />\n  );\n};\n\nexport const PipelineExplorerContainer: React.FC<{\n  explorerPath: ExplorerPath;\n  onChangeExplorerPath: (path: ExplorerPath, mode: 'replace' | 'push') => void;\n  onNavigateToForeignNode: (node: AssetLocation) => void;\n  repoAddress?: RepoAddress;\n  isGraph?: boolean;\n}> = ({\n  explorerPath,\n  repoAddress,\n  onChangeExplorerPath,\n  onNavigateToForeignNode,\n  isGraph = false,\n}) => {\n  const [options, setOptions] = React.useState<GraphExplorerOptions>({\n    explodeComposites: explorerPath.explodeComposites ?? false,\n    preferAssetRendering: true,\n  });\n\n  const parentNames = explorerPath.opNames.slice(0, explorerPath.opNames.length - 1);\n  const pipelineSelector = buildPipelineSelector(repoAddress || null, explorerPath.pipelineName);\n\n  const pipelineResult = useQuery<PipelineExplorerRootQuery, PipelineExplorerRootQueryVariables>(\n    PIPELINE_EXPLORER_ROOT_QUERY,\n    {\n      variables: {\n        snapshotPipelineSelector: explorerPath.snapshotId ? undefined : pipelineSelector,\n        snapshotId: explorerPath.snapshotId ? explorerPath.snapshotId : undefined,\n        rootHandleID: parentNames.join('.'),\n        requestScopeHandleID: options.explodeComposites ? undefined : parentNames.join('.'),\n      },\n    },\n  );\n\n  return (\n    <Loading<PipelineExplorerRootQuery> queryResult={pipelineResult}>\n      {({pipelineSnapshotOrError: result}) => {\n        if (result.__typename !== 'PipelineSnapshot') {\n          return <NonIdealPipelineQueryResult isGraph={isGraph} result={result} />;\n        }\n\n        const parentHandle = result.solidHandle;\n        const displayedHandles = options.explodeComposites\n          ? explodeCompositesInHandleGraph(result.solidHandles)\n          : result.solidHandles;\n        const assetNodesPresent = result.solidHandles.some(\n          (h) => h.solid.definition.assetNodes.length > 0,\n        );\n        if (options.preferAssetRendering && assetNodesPresent) {\n          return (\n            <AssetGraphExplorer\n              options={options}\n              setOptions={setOptions}\n              fetchOptions={{pipelineSelector}}\n              explorerPath={explorerPath}\n              onChangeExplorerPath={onChangeExplorerPath}\n              onNavigateToForeignNode={onNavigateToForeignNode}\n            />\n          );\n        }\n\n        return (\n          <GraphExplorer\n            options={options}\n            setOptions={setOptions}\n            explorerPath={explorerPath}\n            onChangeExplorerPath={onChangeExplorerPath}\n            pipelineOrGraph={result}\n            repoAddress={repoAddress}\n            handles={displayedHandles}\n            parentHandle={parentHandle ? parentHandle : undefined}\n            isGraph={isGraph}\n            getInvocations={(definitionName) =>\n              displayedHandles\n                .filter((s) => s.solid.definition.name === definitionName)\n                .map((s) => ({handleID: s.handleID}))\n            }\n          />\n        );\n      }}\n    </Loading>\n  );\n};\n\nexport const PIPELINE_EXPLORER_ROOT_QUERY = gql`\n  query PipelineExplorerRootQuery(\n    $snapshotPipelineSelector: PipelineSelector\n    $snapshotId: String\n    $rootHandleID: String!\n    $requestScopeHandleID: String\n  ) {\n    pipelineSnapshotOrError(\n      snapshotId: $snapshotId\n      activePipelineSelector: $snapshotPipelineSelector\n    ) {\n      ... on PipelineSnapshot {\n        id\n        name\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n        ...GraphExplorerFragment\n\n        solidHandle(handleID: $rootHandleID) {\n          ...GraphExplorerSolidHandleFragment\n        }\n        solidHandles(parentHandleID: $requestScopeHandleID) {\n          handleID\n          solid {\n            name\n            definition {\n              assetNodes {\n                id\n                ...GraphExplorerAssetNodeFragment\n              }\n            }\n          }\n          ...GraphExplorerSolidHandleFragment\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${GRAPH_EXPLORER_FRAGMENT}\n  ${GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT}\n  ${GRAPH_EXPLORER_ASSET_NODE_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {Box, Colors, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {PipelineSnapshotLink} from './PipelinePathUtils';\n\nexport interface Props {\n  pipelineName: string;\n  pipelineHrefContext: 'repo-unknown' | RepoAddress | 'no-link';\n  isJob: boolean;\n  snapshotId?: string | null;\n  showIcon?: boolean;\n  truncationThreshold?: number;\n  size?: 'small' | 'normal';\n}\n\nconst DEFAULT_TRUNCATION_THRESHOLD = 40;\nconst TRUNCATION_BUFFER = 5;\n\nexport const PipelineReference: React.FC<Props> = ({\n  pipelineName,\n  pipelineHrefContext,\n  isJob,\n  snapshotId,\n  showIcon,\n  truncationThreshold = DEFAULT_TRUNCATION_THRESHOLD,\n  size = 'normal',\n}) => {\n  const truncatedName =\n    truncationThreshold > 0 && pipelineName.length > truncationThreshold\n      ? `${pipelineName.slice(0, truncationThreshold - TRUNCATION_BUFFER)}…`\n      : pipelineName;\n\n  const pipeline =\n    pipelineHrefContext === 'repo-unknown' ? (\n      <Link to={workspacePipelinePathGuessRepo(pipelineName, isJob)}>{truncatedName}</Link>\n    ) : pipelineHrefContext === 'no-link' ? (\n      <>{truncatedName}</>\n    ) : (\n      <Link\n        to={workspacePipelinePath({\n          repoName: pipelineHrefContext.name,\n          repoLocation: pipelineHrefContext.location,\n          pipelineName,\n          isJob,\n        })}\n      >\n        {truncatedName}\n      </Link>\n    );\n\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', display: 'inline-flex'}}>\n      {showIcon && (\n        <Box margin={{right: 8}}>\n          <Icon color={Colors.Gray400} name=\"job\" />\n        </Box>\n      )}\n      <span>\n        {pipeline}\n        {snapshotId && ' @ '}\n        {snapshotId && (\n          <PipelineSnapshotLink snapshotId={snapshotId} pipelineName={pipelineName} size={size} />\n        )}\n      </span>\n    </Box>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {\n  Box,\n  CursorHistoryControls,\n  NonIdealState,\n  Page,\n  Tag,\n  TokenizingFieldValue,\n  tokenToString,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useParams} from 'react-router-dom';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {\n  FIFTEEN_SECONDS,\n  QueryRefreshCountdown,\n  useQueryRefreshAtInterval,\n} from '../app/QueryRefresh';\nimport {RunTable, RUN_TABLE_RUN_FRAGMENT} from '../runs/RunTable';\nimport {RunsQueryRefetchContext} from '../runs/RunUtils';\nimport {\n  RunFilterTokenType,\n  RunsFilterInput,\n  runsFilterForSearchTokens,\n  useQueryPersistedRunFilters,\n  RunFilterToken,\n} from '../runs/RunsFilterInput';\nimport {useCursorPaginatedQuery} from '../runs/useCursorPaginatedQuery';\nimport {Loading} from '../ui/Loading';\nimport {StickyTableContainer} from '../ui/StickyTableContainer';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {explorerPathFromString} from './PipelinePathUtils';\nimport {PipelineRunsRootQuery, PipelineRunsRootQueryVariables} from './types/PipelineRunsRootQuery';\nimport {useJobTitle} from './useJobTitle';\n\nconst PAGE_SIZE = 25;\nconst ENABLED_FILTERS: RunFilterTokenType[] = ['status', 'tag'];\n\ninterface Props {\n  repoAddress?: RepoAddress;\n}\n\nexport const PipelineRunsRoot: React.FC<Props> = (props) => {\n  const {pipelinePath} = useParams<{pipelinePath: string}>();\n  const {repoAddress = null} = props;\n  const explorerPath = explorerPathFromString(pipelinePath);\n  const {pipelineName, snapshotId} = explorerPath;\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  useJobTitle(explorerPath, isJob);\n\n  const [filterTokens, setFilterTokens] = useQueryPersistedRunFilters(ENABLED_FILTERS);\n  const permanentTokens = React.useMemo(() => {\n    return [\n      isJob ? {token: 'job', value: pipelineName} : {token: 'pipeline', value: pipelineName},\n      snapshotId ? {token: 'snapshotId', value: snapshotId} : null,\n    ].filter(Boolean) as TokenizingFieldValue[];\n  }, [isJob, pipelineName, snapshotId]);\n\n  const allTokens = [...filterTokens, ...permanentTokens];\n\n  const {queryResult, paginationProps} = useCursorPaginatedQuery<\n    PipelineRunsRootQuery,\n    PipelineRunsRootQueryVariables\n  >({\n    query: PIPELINE_RUNS_ROOT_QUERY,\n    pageSize: PAGE_SIZE,\n    variables: {\n      filter: {...runsFilterForSearchTokens(allTokens), pipelineName, snapshotId},\n    },\n    nextCursorForResult: (runs) => {\n      if (runs.pipelineRunsOrError.__typename !== 'Runs') {\n        return undefined;\n      }\n      return runs.pipelineRunsOrError.results[PAGE_SIZE - 1]?.runId;\n    },\n    getResultArray: (data) => {\n      if (!data || data.pipelineRunsOrError.__typename !== 'Runs') {\n        return [];\n      }\n      return data.pipelineRunsOrError.results;\n    },\n  });\n\n  const onAddTag = React.useCallback(\n    (token: RunFilterToken) => {\n      const tokenAsString = tokenToString(token);\n      if (!filterTokens.some((token) => tokenToString(token) === tokenAsString)) {\n        setFilterTokens([...filterTokens, token]);\n      }\n    },\n    [filterTokens, setFilterTokens],\n  );\n\n  const refreshState = useQueryRefreshAtInterval(queryResult, FIFTEEN_SECONDS);\n\n  return (\n    <RunsQueryRefetchContext.Provider value={{refetch: queryResult.refetch}}>\n      <Page>\n        <Loading queryResult={queryResult} allowStaleData={true}>\n          {({pipelineRunsOrError}) => {\n            if (pipelineRunsOrError.__typename !== 'Runs') {\n              return (\n                <Box padding={{vertical: 64}}>\n                  <NonIdealState\n                    icon=\"error\"\n                    title=\"Query Error\"\n                    description={pipelineRunsOrError.message}\n                  />\n                </Box>\n              );\n            }\n            const runs = pipelineRunsOrError.results;\n            const displayed = runs.slice(0, PAGE_SIZE);\n            const {hasNextCursor, hasPrevCursor} = paginationProps;\n            return (\n              <>\n                <Box\n                  flex={{alignItems: 'flex-start', justifyContent: 'space-between'}}\n                  padding={{top: 8, horizontal: 24}}\n                >\n                  <Box flex={{direction: 'row', gap: 8}}>\n                    {permanentTokens.map(({token, value}) => (\n                      <Tag key={token}>{`${token}:${value}`}</Tag>\n                    ))}\n                  </Box>\n                  <QueryRefreshCountdown refreshState={refreshState} />\n                </Box>\n                <StickyTableContainer $top={0}>\n                  <RunTable\n                    runs={displayed}\n                    onAddTag={onAddTag}\n                    actionBarComponents={\n                      <RunsFilterInput\n                        enabledFilters={ENABLED_FILTERS}\n                        tokens={filterTokens}\n                        onChange={setFilterTokens}\n                        loading={queryResult.loading}\n                      />\n                    }\n                  />\n                </StickyTableContainer>\n                {hasNextCursor || hasPrevCursor ? (\n                  <div style={{marginTop: '20px'}}>\n                    <CursorHistoryControls {...paginationProps} />\n                  </div>\n                ) : null}\n              </>\n            );\n          }}\n        </Loading>\n      </Page>\n    </RunsQueryRefetchContext.Provider>\n  );\n};\n\nconst PIPELINE_RUNS_ROOT_QUERY = gql`\n  query PipelineRunsRootQuery($limit: Int, $cursor: String, $filter: RunsFilter!) {\n    pipelineRunsOrError(limit: $limit, cursor: $cursor, filter: $filter) {\n      ... on Runs {\n        results {\n          id\n          ...RunTableRunFragment\n        }\n      }\n      ... on InvalidPipelineRunsFilterError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${RUN_TABLE_RUN_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Collapse} from '@blueprintjs/core';\nimport {Colors, Icon, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\ninterface ISidebarSectionProps {\n  title: string;\n  collapsedByDefault?: boolean;\n}\n\nexport const SidebarSection: React.FC<ISidebarSectionProps> = (props) => {\n  const {title, collapsedByDefault, children} = props;\n  const [open, setOpen] = useStateWithStorage<boolean>(`sidebar-${title}`, (storedValue) =>\n    storedValue === true || storedValue === false ? storedValue : !collapsedByDefault,\n  );\n\n  const onToggle = React.useCallback(() => {\n    setOpen((o) => !o);\n  }, [setOpen]);\n\n  return (\n    <>\n      <CollapsingHeaderBar onClick={onToggle}>\n        {title}\n        <Icon\n          size={24}\n          name=\"arrow_drop_down\"\n          style={{transform: open ? 'rotate(0)' : 'rotate(-90deg)'}}\n        />\n      </CollapsingHeaderBar>\n      <Collapse isOpen={open}>\n        <div>{children}</div>\n      </Collapse>\n    </>\n  );\n};\n\nexport const SidebarTitle = styled.h3`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 0 0 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :first-child:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SectionHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 16px;\n  margin: 2px 0 0 0;\n`;\n\nexport const SectionSmallHeader = styled.h4`\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  margin: 2px 0;\n`;\n\nexport const SidebarSubhead = styled.div`\n  color: ${Colors.Gray400};\n  font-size: 0.7rem;\n`;\n\nexport const SectionItemContainer = styled.div`\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  margin-bottom: 12px;\n  padding-bottom: 12px;\n  font-size: 0.8rem;\n  &:last-child {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\n\nconst CollapsingHeaderBar = styled.div`\n  height: 32px;\n  padding-left: 24px;\n  padding-right: 8px;\n  background: ${Colors.White};\n  border-top: 1px solid ${Colors.KeylineGray};\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  color: ${Colors.Gray900};\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 700;\n  user-select: none;\n`;\n","import {gql} from '@apollo/client';\nimport {Colors, ConfigTypeSchema, Icon, IconWrapper} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\n\nimport {Description} from './Description';\nimport {SectionHeader, SectionItemContainer} from './SidebarComponents';\nimport {SidebarModeInfoFragment} from './types/SidebarModeInfoFragment';\n\nconst NO_DESCRIPTION = '';\n\nexport const SidebarModeSection: React.FC<{\n  mode: SidebarModeInfoFragment;\n}> = ({mode}) => {\n  return (\n    <SectionItemContainer key={mode.name}>\n      <SectionHeader>{mode.name}</SectionHeader>\n      <Description description={mode.description || NO_DESCRIPTION} />\n      {mode.resources.map((resource) => (\n        <ContextResourceContainer key={resource.name}>\n          <Icon name=\"resource\" color={Colors.Gray700} />\n          <div>\n            <ContextResourceHeader>{resource.name}</ContextResourceHeader>\n            <Description description={resource.description || NO_DESCRIPTION} />\n            {resource.configField && (\n              <ConfigTypeSchema\n                type={resource.configField.configType}\n                typesInScope={resource.configField.configType.recursiveConfigTypes}\n              />\n            )}\n          </div>\n        </ContextResourceContainer>\n      ))}\n      {mode.loggers.map((logger) => (\n        <ContextLoggerContainer key={logger.name}>\n          <Icon name=\"resource\" color={Colors.Gray700} />\n          <div>\n            <ContextLoggerHeader>{logger.name}</ContextLoggerHeader>\n            <Description description={logger.description || NO_DESCRIPTION} />\n            {logger.configField && (\n              <ConfigTypeSchema\n                type={logger.configField.configType}\n                typesInScope={logger.configField.configType.recursiveConfigTypes}\n              />\n            )}\n          </div>\n        </ContextLoggerContainer>\n      ))}\n    </SectionItemContainer>\n  );\n};\n\nexport const SIDEBAR_MODE_INFO_FRAGMENT = gql`\n  fragment SidebarModeInfoFragment on Mode {\n    id\n    name\n    description\n    resources {\n      name\n      description\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n    loggers {\n      name\n      description\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n  }\n\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n\nconst ContextResourceHeader = styled(SectionHeader)`\n  font-size: 16px;\n  margin: 4px 0;\n`;\n\nconst ContextResourceContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-top: 12px;\n  & h4 {\n    margin-top: -2px;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n\nconst ContextLoggerHeader = styled(SectionHeader)`\n  font-size: 16px;\n  margin: 4px 0;\n`;\n\nconst ContextLoggerContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-top: 12px;\n  & h4 {\n    margin-top: -2px;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Colors, ConfigTypeSchema, FontFamily, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {breakOnUnderscores} from '../app/Util';\nimport {displayNameForAssetKey, isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {OpTypeSignature, OP_TYPE_SIGNATURE_FRAGMENT} from '../ops/OpTypeSignature';\nimport {pluginForMetadata} from '../plugins';\nimport {CONFIG_TYPE_SCHEMA_FRAGMENT} from '../typeexplorer/ConfigTypeSchema';\nimport {DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT, TypeWithTooltip} from '../typeexplorer/TypeWithTooltip';\nimport {RepoAddress} from '../workspace/types';\n\nimport {Description} from './Description';\nimport {\n  SectionItemContainer,\n  SectionSmallHeader,\n  SidebarSection,\n  SidebarSubhead,\n  SidebarTitle,\n} from './SidebarComponents';\nimport {\n  Invocation,\n  ResourceContainer,\n  ResourceHeader,\n  ShowAllButton,\n  SidebarOpInvocationInfo,\n  OpEdges,\n  OpMappingTable,\n  TypeWrapper,\n} from './SidebarOpHelpers';\nimport {SidebarOpDefinitionFragment} from './types/SidebarOpDefinitionFragment';\n\ninterface SidebarOpDefinitionProps {\n  definition: SidebarOpDefinitionFragment;\n  getInvocations?: (definitionName: string) => {handleID: string}[];\n  showingSubgraph: boolean;\n  onClickInvocation: (arg: SidebarOpInvocationInfo) => void;\n  repoAddress?: RepoAddress;\n}\n\nconst DEFAULT_INVOCATIONS_SHOWN = 20;\n\nexport const SidebarOpDefinition: React.FC<SidebarOpDefinitionProps> = (props) => {\n  const {definition, getInvocations, showingSubgraph, onClickInvocation, repoAddress} = props;\n  const Plugin = pluginForMetadata(definition.metadata);\n  const isComposite = definition.__typename === 'CompositeSolidDefinition';\n  const configField = definition.__typename === 'SolidDefinition' ? definition.configField : null;\n\n  const inputMappings: OpMappingTable = {};\n  const outputMappings: OpMappingTable = {};\n\n  if (showingSubgraph && definition.__typename === 'CompositeSolidDefinition') {\n    definition.inputMappings.forEach(\n      (m) =>\n        (inputMappings[m.definition.name] = [\n          ...(inputMappings[m.definition.name] || []),\n          m.mappedInput,\n        ]),\n    );\n    definition.outputMappings.forEach(\n      (m) =>\n        (outputMappings[m.definition.name] = [\n          ...(outputMappings[m.definition.name] || []),\n          m.mappedOutput,\n        ]),\n    );\n  }\n\n  let requiredResources = null;\n  if (definition.__typename === 'SolidDefinition') {\n    requiredResources = definition.requiredResources;\n  }\n\n  return (\n    <div>\n      <SidebarSection title=\"Definition\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          <SidebarSubhead>{isComposite ? 'Graph' : 'Op'}</SidebarSubhead>\n          <SidebarTitle>{breakOnUnderscores(definition.name)}</SidebarTitle>\n          <OpTypeSignature definition={definition} />\n        </Box>\n      </SidebarSection>\n      {definition.description && (\n        <SidebarSection title=\"Description\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <Description description={definition.description} />\n          </Box>\n        </SidebarSection>\n      )}\n      {definition.metadata && Plugin && Plugin.SidebarComponent && (\n        <SidebarSection title=\"Metadata\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <Plugin.SidebarComponent definition={definition} repoAddress={repoAddress} />\n          </Box>\n        </SidebarSection>\n      )}\n      {configField && (\n        <SidebarSection title=\"Config\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            <ConfigTypeSchema\n              type={configField.configType}\n              typesInScope={configField.configType.recursiveConfigTypes}\n            />\n          </Box>\n        </SidebarSection>\n      )}\n      {requiredResources && (\n        <SidebarSection title=\"Required Resources\">\n          <Box padding={{vertical: 16, horizontal: 24}}>\n            {[...requiredResources].sort().map((requirement) => (\n              <ResourceContainer key={requirement.resourceKey}>\n                <Icon name=\"resource\" color={Colors.Gray700} />\n                <ResourceHeader>{requirement.resourceKey}</ResourceHeader>\n              </ResourceContainer>\n            ))}\n          </Box>\n        </SidebarSection>\n      )}\n      <SidebarSection title=\"Inputs\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          {definition.inputDefinitions.map((inputDef, idx) => (\n            <SectionItemContainer key={idx}>\n              <SectionSmallHeader>{breakOnUnderscores(inputDef.name)}</SectionSmallHeader>\n              <TypeWrapper>\n                <TypeWithTooltip type={inputDef.type} />\n              </TypeWrapper>\n              <Description description={inputDef.description} />\n              <OpEdges title=\"Mapped to:\" items={inputMappings[inputDef.name]} />\n            </SectionItemContainer>\n          ))}\n        </Box>\n      </SidebarSection>\n      <SidebarSection title=\"Outputs\">\n        <Box padding={{vertical: 16, horizontal: 24}}>\n          {definition.outputDefinitions.map((outputDef, idx) => (\n            <SectionItemContainer key={idx}>\n              <SectionSmallHeader>\n                {breakOnUnderscores(outputDef.name)}\n                {outputDef.isDynamic && <span title=\"DynamicOutput\">[*]</span>}\n              </SectionSmallHeader>\n              <TypeWrapper>\n                <TypeWithTooltip type={outputDef.type} />\n              </TypeWrapper>\n              <OpEdges title=\"Mapped from:\" items={outputMappings[outputDef.name]} />\n              <Description description={outputDef.description} />\n            </SectionItemContainer>\n          ))}\n        </Box>\n      </SidebarSection>\n      {definition.assetNodes.length > 0 && (\n        <SidebarSection title=\"Yielded Assets\">\n          {definition.assetNodes.map((node) => (\n            <AssetNodeListItem key={node.id} to={assetDetailsPathForKey(node.assetKey)}>\n              <Icon name=\"asset\" /> {displayNameForAssetKey(node.assetKey)}\n            </AssetNodeListItem>\n          ))}\n        </SidebarSection>\n      )}\n      {getInvocations && (\n        <SidebarSection title=\"All Invocations\">\n          <InvocationList\n            invocations={getInvocations(definition.name)}\n            onClickInvocation={onClickInvocation}\n          />\n        </SidebarSection>\n      )}\n    </div>\n  );\n};\n\nexport const SIDEBAR_SOLID_DEFINITION_FRAGMENT = gql`\n  fragment SidebarOpDefinitionFragment on ISolidDefinition {\n    ...OpTypeSignatureFragment\n    __typename\n    name\n    description\n    metadata {\n      key\n      value\n    }\n    assetNodes {\n      id\n      assetKey {\n        path\n      }\n    }\n    outputDefinitions {\n      name\n      description\n      isDynamic\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    inputDefinitions {\n      name\n      description\n      type {\n        ...DagsterTypeWithTooltipFragment\n      }\n    }\n    ... on SolidDefinition {\n      requiredResources {\n        resourceKey\n      }\n      configField {\n        configType {\n          ...ConfigTypeSchemaFragment\n          recursiveConfigTypes {\n            ...ConfigTypeSchemaFragment\n          }\n        }\n      }\n    }\n    ... on CompositeSolidDefinition {\n      id\n      inputMappings {\n        definition {\n          name\n        }\n        mappedInput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n      outputMappings {\n        definition {\n          name\n        }\n        mappedOutput {\n          definition {\n            name\n          }\n          solid {\n            name\n          }\n        }\n      }\n    }\n  }\n\n  ${DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT}\n  ${OP_TYPE_SIGNATURE_FRAGMENT}\n  ${CONFIG_TYPE_SCHEMA_FRAGMENT}\n`;\n\nconst InvocationList: React.FC<{\n  invocations: SidebarOpInvocationInfo[];\n  onClickInvocation: (arg: SidebarOpInvocationInfo) => void;\n}> = ({invocations, onClickInvocation}) => {\n  const [showAll, setShowAll] = React.useState<boolean>(false);\n  const visible = invocations.filter((i) => !isHiddenAssetGroupJob(i.pipelineName || ''));\n  const clipped = showAll ? visible : visible.slice(0, DEFAULT_INVOCATIONS_SHOWN);\n\n  return (\n    <>\n      {clipped.map((invocation, idx) => (\n        <Invocation\n          key={idx}\n          invocation={invocation}\n          onClick={() => onClickInvocation(invocation)}\n        />\n      ))}\n      {clipped.length < visible.length && (\n        <ShowAllButton onClick={() => setShowAll(true)}>\n          {`Show ${invocations.length - clipped.length} More Invocations`}\n        </ShowAllButton>\n      )}\n    </>\n  );\n};\n\nconst AssetNodeListItem = styled(Link)`\n  user-select: none;\n  padding: 12px 24px;\n  cursor: pointer;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  display: flex;\n  gap: 6px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:hover {\n    background: ${Colors.Gray50};\n  }\n\n  font-family: ${FontFamily.monospace};\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Text} from '@blueprintjs/core';\nimport {Colors, Group, Icon, IconWrapper, Code, FontFamily} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {titleOfIO} from '../app/titleOfIO';\nimport {OpColumn, OpColumnContainer} from '../runs/LogsRowComponents';\n\nimport {SectionHeader} from './SidebarComponents';\n\ntype OpLinkInfo = {\n  solid: {name: string};\n  definition: {name: string};\n};\n\nexport interface SidebarOpInvocationInfo {\n  handleID: string;\n  pipelineName?: string;\n}\n\nexport type OpMappingTable = {\n  [key: string]: OpLinkInfo[];\n};\n\nexport const ShowAllButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${Colors.Blue500};\n  text-decoration: underline;\n  padding-top: 10px;\n  font-size: 0.9rem;\n`;\n\nexport const TypeWrapper = styled.div`\n  margin-bottom: 10px;\n`;\n\nconst OpLink = (props: OpLinkInfo) => (\n  <Link to={`./${props.solid.name}`}>\n    <Code>{titleOfIO(props)}</Code>\n  </Link>\n);\n\nexport const OpEdges = (props: {title: string; items: OpLinkInfo[]}) =>\n  props.items && props.items.length ? (\n    <Text>\n      {props.title}\n      {props.items.map((i, idx) => (\n        <OpLink key={idx} {...i} />\n      ))}\n    </Text>\n  ) : null;\n\nexport const Invocation = (props: {invocation: SidebarOpInvocationInfo; onClick: () => void}) => {\n  const {handleID, pipelineName} = props.invocation;\n  const handlePath = handleID.split('.');\n  return (\n    <InvocationContainer onClick={props.onClick}>\n      {pipelineName && <div style={{color: Colors.Blue700}}>{pipelineName}</div>}\n      <OpColumn stepKey={handlePath.join('.')} />\n    </InvocationContainer>\n  );\n};\n\nexport const DependencyRow = ({\n  from,\n  to,\n  isDynamic,\n}: {\n  from: OpLinkInfo | string;\n  to: OpLinkInfo | string;\n  isDynamic: boolean | null;\n}) => {\n  return (\n    <tr>\n      <Cell>{typeof from === 'string' ? <Code>{from}</Code> : <OpLink {...from} />}</Cell>\n      <td style={{whiteSpace: 'nowrap', textAlign: 'right'}}>\n        <Group direction=\"row\" spacing={2} alignItems=\"center\">\n          {isDynamic && <Icon name=\"op_dynamic\" color={Colors.Gray700} />}\n          <Icon name=\"arrow_forward\" color={Colors.Gray700} />\n        </Group>\n      </td>\n      <Cell>{typeof to === 'string' ? <Code>{to}</Code> : <OpLink {...to} />}</Cell>\n    </tr>\n  );\n};\n\ninterface DependencyHeaderRowProps {\n  label: string;\n  style?: React.CSSProperties;\n}\n\nexport const DependencyHeaderRow: React.FC<DependencyHeaderRowProps> = ({label, ...rest}) => (\n  <tr>\n    <DependencyHeaderCell {...rest}>{label}</DependencyHeaderCell>\n  </tr>\n);\n\nexport const ResourceHeader = styled(SectionHeader)`\n  font-size: 14px;\n`;\n\nconst Cell = styled.td`\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  max-width: 0;\n  width: 48%;\n`;\n\nexport const ResourceContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  & h4 {\n    margin-top: 0;\n  }\n  & ${IconWrapper} {\n    margin-right: 8px;\n  }\n`;\n\nexport const DependencyTable = styled.table`\n  width: 100%;\n`;\n\nconst DependencyHeaderCell = styled.td`\n  font-size: 0.7rem;\n  color: ${Colors.Gray400};\n`;\n\nconst InvocationContainer = styled.div`\n  user-select: none;\n  padding: 12px 24px;\n  cursor: pointer;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n\n  &:last-child {\n    border-bottom: none;\n  }\n\n  &:hover {\n    background: ${Colors.Gray50};\n  }\n\n  font-family: ${FontFamily.monospace};\n\n  ${OpColumnContainer} {\n    margin-left: -12px;\n  }\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, MetadataTable} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {METADATA_ENTRY_FRAGMENT, MetadataEntry} from '../metadata/MetadataEntry';\nimport {PipelineSelector} from '../types/globalTypes';\nimport {Loading} from '../ui/Loading';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\n\nimport {Description} from './Description';\nimport {NonIdealPipelineQueryResult} from './NonIdealPipelineQueryResult';\nimport {SidebarSection} from './SidebarComponents';\nimport {SidebarModeSection, SIDEBAR_MODE_INFO_FRAGMENT} from './SidebarModeSection';\nimport {\n  JobOverviewSidebarQuery,\n  JobOverviewSidebarQueryVariables,\n} from './types/JobOverviewSidebarQuery';\n\nexport const SidebarPipelineOrJobOverview: React.FC<{\n  pipelineSelector: PipelineSelector;\n}> = ({pipelineSelector}) => {\n  const queryResult = useQuery<JobOverviewSidebarQuery, JobOverviewSidebarQueryVariables>(\n    JOB_OVERVIEW_SIDEBAR_QUERY,\n    {\n      fetchPolicy: 'cache-and-network',\n      partialRefetch: true,\n      variables: {pipelineSelector},\n    },\n  );\n\n  const {repositoryName, repositoryLocationName} = pipelineSelector;\n  const repo = useRepository(buildRepoAddress(repositoryName, repositoryLocationName));\n  const isJob = isThisThingAJob(repo, pipelineSelector.pipelineName);\n\n  return (\n    <Loading queryResult={queryResult}>\n      {({pipelineSnapshotOrError}) => {\n        if (pipelineSnapshotOrError.__typename !== 'PipelineSnapshot') {\n          return <NonIdealPipelineQueryResult isGraph={isJob} result={pipelineSnapshotOrError} />;\n        }\n\n        const modes = pipelineSnapshotOrError.modes;\n\n        const metadataRows = pipelineSnapshotOrError.metadataEntries.map((entry) => {\n          return {\n            key: entry.label,\n            value: <MetadataEntry entry={entry} />,\n          };\n        });\n\n        return (\n          <>\n            <SidebarSection title=\"Description\">\n              <Box padding={{vertical: 16, horizontal: 24}}>\n                <Description\n                  description={pipelineSnapshotOrError.description || 'No description provided'}\n                />\n              </Box>\n            </SidebarSection>\n            <SidebarSection title=\"Resources\">\n              <Box padding={{vertical: 16, horizontal: 24}}>\n                {modes.map((mode) => (\n                  <SidebarModeSection mode={mode} key={mode.name} />\n                ))}\n              </Box>\n            </SidebarSection>\n            <SidebarSection title=\"Metadata\">\n              <Box padding={{vertical: 16, horizontal: 24}}>\n                <MetadataTable rows={metadataRows} />\n              </Box>\n            </SidebarSection>\n          </>\n        );\n      }}\n    </Loading>\n  );\n};\n\nconst JOB_OVERVIEW_SIDEBAR_QUERY = gql`\n  query JobOverviewSidebarQuery($pipelineSelector: PipelineSelector!) {\n    pipelineSnapshotOrError(activePipelineSelector: $pipelineSelector) {\n      ... on PipelineSnapshot {\n        id\n        name\n        description\n        modes {\n          id\n          ...SidebarModeInfoFragment\n        }\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on PipelineSnapshotNotFoundError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${SIDEBAR_MODE_INFO_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\n\nimport {ExplorerPath} from './PipelinePathUtils';\n\nexport const useJobTitle = (explorerPath: ExplorerPath, isJob: boolean) => {\n  const {pipelineName} = explorerPath;\n\n  const value = React.useMemo(() => {\n    if (isJob) {\n      return `Job: ${pipelineName}`;\n    }\n    return `Pipeline: ${pipelineName}`;\n  }, [isJob, pipelineName]);\n\n  useDocumentTitle(value);\n};\n","import {Button, DialogBody, DialogFooter, Dialog, Icon} from '@dagster-io/ui';\nimport startCase from 'lodash/startCase';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\n\nexport const SidebarComponent: React.FC<IPluginSidebarProps> = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const onOpen = () => setOpen(true);\n    document.addEventListener('show-kind-info', onOpen);\n    return () => document.removeEventListener('show-kind-info', onOpen);\n  }, []);\n\n  const metadata = props.definition.metadata\n    .filter((m) => m.key !== 'kind')\n    .sort((a, b) => a.key.localeCompare(b.key));\n\n  if (metadata.length === 0) {\n    return <span />;\n  }\n\n  return (\n    <div>\n      <Button icon={<Icon name=\"content_copy\" />} onClick={() => setOpen(true)}>\n        View metadata\n      </Button>\n      <Dialog\n        title={`Metadata: ${props.definition.name}`}\n        isOpen={open}\n        onClose={() => setOpen(false)}\n      >\n        <DialogBody>\n          <div\n            style={{\n              maxHeight: 400,\n              overflow: 'scroll',\n            }}\n          >\n            <table className=\"bp3-html-table bp3-html-table-striped\" style={{width: '100%'}}>\n              <thead>\n                <tr>\n                  <th>Key</th>\n                  <th>Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {metadata.map(({key, value}) => (\n                  <tr key={key}>\n                    <td>{startCase(key)}</td>\n                    <td>\n                      <code style={{whiteSpace: 'pre-wrap'}}>{value}</code>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </DialogBody>\n        <DialogFooter>\n          <Button onClick={() => setOpen(false)}>Close</Button>\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n","import {Button, DialogBody, DialogFooter, Dialog, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {IPluginSidebarProps} from '../plugins';\n\nexport const SidebarComponent: React.FC<IPluginSidebarProps> = (props) => {\n  const {rootServerURI} = React.useContext(AppContext);\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const onOpen = () => setOpen(true);\n    document.addEventListener('show-kind-info', onOpen);\n    return () => document.removeEventListener('show-kind-info', onOpen);\n  }, []);\n\n  const metadata = props.definition.metadata;\n  const notebookPath = metadata.find((m) => m.key === 'notebook_path');\n  const repoLocName = props.repoAddress?.location;\n\n  if (!notebookPath) {\n    return <span />;\n  }\n\n  return (\n    <div>\n      <Button icon={<Icon name=\"content_copy\" />} onClick={() => setOpen(true)}>\n        View Notebook\n      </Button>\n      <Dialog\n        icon=\"info\"\n        onClose={() => setOpen(false)}\n        style={{width: '80vw', maxWidth: 900}}\n        title={notebookPath.value.split('/').pop()}\n        usePortal={true}\n        isOpen={open}\n      >\n        <DialogBody>\n          <iframe\n            title={notebookPath.value}\n            src={`${rootServerURI}/dagit/notebook?path=${encodeURIComponent(\n              notebookPath.value,\n            )}&repoLocName=${repoLocName}`}\n            sandbox=\"\"\n            style={{border: 0, background: 'white'}}\n            seamless={true}\n            width=\"100%\"\n            height={500}\n          />\n        </DialogBody>\n        <DialogFooter>\n          <Button onClick={() => setOpen(false)}>Close</Button>\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n","import {Button, DialogFooter, Dialog, Icon, StyledReadOnlyCodeMirror} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {IPluginSidebarProps} from '../plugins';\n\nexport const SidebarComponent: React.FC<IPluginSidebarProps> = (props) => {\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const onClose = () => setOpen(true);\n    document.addEventListener('show-kind-info', onClose);\n    return () => document.removeEventListener('show-kind-info', onClose);\n  }, []);\n\n  const metadata = props.definition.metadata;\n  const sql = metadata.find((m) => m.key === 'sql');\n  if (!sql) {\n    return <span />;\n  }\n\n  return (\n    <div>\n      <Button icon={<Icon name=\"content_copy\" />} onClick={() => setOpen(true)}>\n        View SQL\n      </Button>\n      <Dialog\n        icon=\"info\"\n        onClose={() => setOpen(false)}\n        style={{width: '80vw', maxWidth: 900}}\n        title={`SQL: ${props.definition.name}`}\n        isOpen={open}\n      >\n        <StyledReadOnlyCodeMirror options={{lineNumbers: true, mode: 'sql'}} value={sql.value} />\n        <DialogFooter topBorder>\n          <Button intent=\"primary\" onClick={() => setOpen(false)}>\n            Close\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n","import * as generic from '../plugins/generic';\nimport * as ipynb from '../plugins/ipynb';\nimport * as sql from '../plugins/sql';\nimport {RepoAddress} from '../workspace/types';\n\nconst plugins = {\n  sql,\n  ipynb,\n  snowflake: sql,\n};\n\nexport interface IPluginSidebarProps {\n  definition: {\n    name: string;\n    metadata: {\n      key: string;\n      value: string;\n    }[];\n  };\n  repoAddress?: RepoAddress;\n}\n\ninterface IPluginInterface {\n  SidebarComponent: React.ComponentClass<IPluginSidebarProps> | React.SFC<IPluginSidebarProps>;\n}\n\nexport function pluginForMetadata(\n  metadata: {key: string; value: string}[],\n): IPluginInterface | null {\n  const kindMetadata = metadata.find((m) => m.key === 'kind');\n  if (!kindMetadata) {\n    return null;\n  }\n  return plugins[kindMetadata.value] || generic;\n}\n","export enum LogLevel {\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  CRITICAL = 'CRITICAL',\n  EVENT = 'EVENT', // structured events\n}\n\nexport const DefaultLogLevels = ['INFO', 'WARNING', 'ERROR', 'CRITICAL', 'EVENT'];\n","import {Colors, FontFamily} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {TimezoneContext} from '../app/time/TimezoneContext';\nimport {browserTimezone} from '../app/time/browserTimezone';\n\nimport {LogLevel} from './LogLevel';\nimport {ColumnWidthsContext} from './LogsScrollingTableHeader';\n\nconst bgcolorForLevel = (level: LogLevel) =>\n  ({\n    [LogLevel.DEBUG]: Colors.White,\n    [LogLevel.INFO]: Colors.White,\n    [LogLevel.EVENT]: Colors.White,\n    [LogLevel.WARNING]: Colors.Yellow50,\n    [LogLevel.ERROR]: Colors.Red50,\n    [LogLevel.CRITICAL]: Colors.Red50,\n  }[level]);\n\nexport const Row = styled.div<{level: LogLevel; highlighted: boolean}>`\n  font-size: 0.9em;\n  width: 100%;\n  height: 100%;\n  max-height: 17em;\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  overflow: hidden;\n  border-top: 1px solid ${Colors.KeylineGray};\n  background: ${({highlighted, level}) => (highlighted ? '#ffe39f' : bgcolorForLevel(level))};\n  &:hover {\n    background: ${({highlighted}) => (highlighted ? '#ffe39f' : 'white')};\n  }\n  color: ${(props) =>\n    ({\n      [LogLevel.DEBUG]: Colors.Gray400,\n      [LogLevel.INFO]: Colors.Gray900,\n      [LogLevel.EVENT]: Colors.Gray900,\n      [LogLevel.WARNING]: Colors.Yellow700,\n      [LogLevel.ERROR]: Colors.Red500,\n      [LogLevel.CRITICAL]: Colors.Red500,\n    }[props.level])};\n`;\n\nexport const StructuredContent = styled.div`\n  background: rgba(255, 255, 255, 0.5);\n  color: ${Colors.Gray900};\n  box-sizing: border-box;\n  border-left: 1px solid ${Colors.KeylineGray};\n  word-break: break-word;\n  white-space: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  flex: 1;\n  align-self: stretch;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`;\n\n// Step Key Column\n//\n// Renders the left column with the step key broken into hierarchical components.\n// Manually implements middle text truncation since we can count on monospace font\n// rendering being fairly consistent.\n//\nexport const OpColumn = (props: {stepKey: string | false | null}) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  const parts = String(props.stepKey).split('.');\n  return (\n    <OpColumnContainer style={{width: widths.solid}}>\n      {props.stepKey\n        ? parts.map((p, idx) => (\n            <div\n              key={idx}\n              data-tooltip={p}\n              data-tooltip-style={OpColumnTooltipStyle}\n              style={{\n                marginLeft: Math.max(0, idx * 15 - 9),\n                fontWeight: idx === parts.length - 1 ? 600 : 300,\n              }}\n            >\n              {idx > 0 ? '↳' : ''}\n              {p.length > 30 - idx * 2\n                ? `${p.substr(0, 16 - idx * 2)}…${p.substr(p.length - 14)}`\n                : p}\n            </div>\n          ))\n        : '-'}\n    </OpColumnContainer>\n  );\n};\n\nexport const OpColumnContainer = styled.div`\n  width: 250px;\n  flex-shrink: 0;\n  padding: 4px 12px;\n`;\n\nconst OpColumnTooltipStyle = JSON.stringify({\n  fontSize: '0.9em',\n  fontFamily: FontFamily.monospace,\n  color: Colors.Dark,\n  background: Colors.White,\n  border: `1px solid ${Colors.Gray100}`,\n  top: -8,\n  left: 1,\n});\n\n// Timestamp Column\n\nexport const TimestampColumn: React.FC<{time: string | null}> = React.memo((props) => {\n  const location = useLocation();\n  const widths = React.useContext(ColumnWidthsContext);\n  const [timezone] = React.useContext(TimezoneContext);\n  const timeString = () => {\n    const {time} = props;\n    if (time) {\n      const timeNumber = Number(time);\n      const locale = navigator.language;\n      const main = new Date(timeNumber).toLocaleTimeString(locale, {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone: timezone === 'Automatic' ? browserTimezone() : timezone,\n      });\n      const fractionalSec = (timeNumber % 1000) / 1000;\n      return `${main}${fractionalSec\n        .toLocaleString(locale, {\n          minimumFractionDigits: 3,\n          maximumFractionDigits: 3,\n        })\n        .slice(1)}`;\n    }\n    return '';\n  };\n\n  const href = `${location.pathname}?${qs.stringify({focusedTime: props.time})}`;\n\n  return (\n    <TimestampColumnContainer style={{width: widths.timestamp}}>\n      <Link to={href}>{timeString()}</Link>\n    </TimestampColumnContainer>\n  );\n});\n\nconst TimestampColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding: 4px 4px 4px 12px;\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${Colors.Gray400};\n  }\n\n  a:hover,\n  a:active {\n    text-decoration: underline;\n  }\n`;\n\nexport const EventTypeColumn: React.FC = (props) => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <EventTypeColumnContainer style={{width: widths.eventType}}>\n      {props.children}\n    </EventTypeColumnContainer>\n  );\n};\n\nconst EventTypeColumnContainer = styled.div`\n  flex-shrink: 0;\n  color: ${Colors.Gray400};\n  padding: 4px;\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\n\nconst OverflowFade = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 40px;\n  user-select: none;\n  pointer-events: none;\n  background: linear-gradient(to bottom, rgba(245, 248, 250, 0) 0%, rgba(245, 248, 250, 255) 100%);\n`;\n\nconst OverflowButtonContainer = styled.div`\n  position: absolute;\n  bottom: 6px;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst OverflowButton = styled.button`\n  border: 0;\n  cursor: pointer;\n  user-select: none;\n  font-size: 12px;\n  font-weight: 500;\n  background: rgba(100, 100, 100, 0.7);\n  border-radius: 4px;\n  line-height: 32px;\n  padding: 0 12px;\n  color: ${Colors.White};\n  &:hover {\n    background: rgba(100, 100, 100, 0.85);\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n  }\n\n  &:active {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nexport class CellTruncationProvider extends React.Component<\n  {\n    style: React.CSSProperties;\n    onExpand?: () => void;\n    forceExpandability?: boolean;\n  },\n  {isOverflowing: boolean}\n> {\n  state = {\n    isOverflowing: false,\n  };\n\n  private contentContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidMount() {\n    this.detectOverflow();\n  }\n\n  componentDidUpdate() {\n    this.detectOverflow();\n  }\n\n  detectOverflow() {\n    const child =\n      this.contentContainerRef.current && this.contentContainerRef.current.firstElementChild;\n\n    if (!child) {\n      return;\n    }\n\n    const isOverflowing = child.scrollHeight > this.props.style.height!;\n    if (isOverflowing !== this.state.isOverflowing) {\n      this.setState({isOverflowing});\n    }\n  }\n\n  defaultExpand() {\n    const message =\n      this.contentContainerRef.current && this.contentContainerRef.current.textContent;\n    message &&\n      showCustomAlert({\n        body: <div style={{whiteSpace: 'pre-wrap'}}>{message}</div>,\n      });\n  }\n\n  onView = () => {\n    const {onExpand} = this.props;\n    onExpand ? onExpand() : this.defaultExpand();\n  };\n\n  render() {\n    const style = {...this.props.style, overflow: 'hidden'};\n\n    return (\n      <div style={style}>\n        <div ref={this.contentContainerRef}>{this.props.children}</div>\n        {(this.state.isOverflowing || this.props.forceExpandability) && (\n          <>\n            <OverflowFade />\n            <OverflowButtonContainer>\n              <OverflowButton onClick={this.onView}>View full message</OverflowButton>\n            </OverflowButtonContainer>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent} from '@blueprintjs/core';\nimport {Box, Colors, Tag} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\n\nimport {assertUnreachable} from '../app/Util';\nimport {PythonErrorFragment} from '../app/types/PythonErrorFragment';\nimport {displayNameForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\nimport {\n  LogRowStructuredContentTable,\n  MetadataEntries,\n  MetadataEntryLink,\n} from '../metadata/MetadataEntry';\nimport {MetadataEntryFragment} from '../metadata/types/MetadataEntryFragment';\nimport {DagsterEventType, ErrorSource} from '../types/globalTypes';\n\nimport {EventTypeColumn} from './LogsRowComponents';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {LogsRowStructuredFragment} from './types/LogsRowStructuredFragment';\n\ninterface IStructuredContentProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n}\n\nexport const LogsRowStructuredContent: React.FC<IStructuredContentProps> = ({node, metadata}) => {\n  const location = useLocation();\n  const eventType = node.eventType as string;\n  switch (node.__typename) {\n    case 'ExecutionStepFailureEvent':\n      return (\n        <FailureContent\n          eventType={eventType}\n          error={node.error}\n          metadataEntries={node?.failureMetadata?.metadataEntries}\n          errorSource={node.errorSource}\n          message={node.error ? undefined : node.message}\n        />\n      );\n\n    case 'ExecutionStepUpForRetryEvent':\n      return <StepUpForRetryContent error={node.error} message={node.message} />;\n\n    case 'ExecutionStepStartEvent':\n      if (!node.stepKey || metadata.logCaptureSteps) {\n        return <DefaultContent message={node.message} eventType={eventType} />;\n      } else {\n        const currentQuery = qs.parse(location.search);\n        const updatedQuery = {\n          ...currentQuery,\n          logType: 'stdout',\n          logs: `query:${node.stepKey}`,\n          selection: node.stepKey,\n        };\n        const href = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n        return (\n          <DefaultContent message={node.message} eventType={eventType}>\n            <LogRowStructuredContentTable\n              rows={[\n                {\n                  label: 'step_logs',\n                  item: (\n                    <Link to={href} style={{color: 'inherit'}}>\n                      View Raw Step Output\n                    </Link>\n                  ),\n                },\n              ]}\n            />\n          </DefaultContent>\n        );\n      }\n    case 'ExecutionStepSkippedEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(173, 185, 152, 0.3)\"\n        />\n      );\n\n    case 'ExecutionStepRestartEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n\n    case 'ExecutionStepSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'ExecutionStepInputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.typeCheck.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'ExecutionStepOutputEvent':\n      return (\n        <DefaultContent\n          message={\n            node.message + (node.typeCheck.description ? ' ' + node.typeCheck.description : '')\n          }\n          eventType={eventType}\n          eventIntent={node.typeCheck.success ? 'success' : 'warning'}\n        >\n          <>\n            <MetadataEntries entries={node.typeCheck.metadataEntries} />\n            <MetadataEntries entries={node.metadataEntries} />\n          </>\n        </DefaultContent>\n      );\n    case 'StepExpectationResultEvent':\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventIntent={node.expectationResult.success ? 'success' : 'warning'}\n        >\n          <MetadataEntries entries={node.expectationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'MaterializationEvent':\n      return (\n        <AssetMetadataContent\n          message={node.message}\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'ObservationEvent':\n      return (\n        <AssetMetadataContent\n          message=\"\"\n          assetKey={node.assetKey}\n          metadataEntries={node.metadataEntries}\n          eventType={eventType}\n          timestamp={node.timestamp}\n        />\n      );\n    case 'AssetMaterializationPlannedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'ObjectStoreOperationEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.operationResult.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HandledOutputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LoadedInputEvent':\n      return (\n        <DefaultContent message={node.message} eventType={eventType}>\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'HookCompletedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookSkippedEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'HookErroredEvent':\n      return <FailureContent eventType={eventType} error={node.error} />;\n    case 'AlertStartEvent':\n      return <DefaultContent eventType={eventType} message={node.message} />;\n    case 'AlertSuccessEvent':\n      return <DefaultContent eventType={eventType} message={node.message} eventIntent=\"success\" />;\n    case 'AlertFailureEvent':\n      return <DefaultContent eventType={eventType} message={node.message} eventIntent=\"warning\" />;\n    case 'ResourceInitFailureEvent':\n    case 'RunFailureEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"danger\" />;\n    case 'RunSuccessEvent':\n      return <DefaultContent message={node.message} eventType={eventType} eventIntent=\"success\" />;\n    case 'RunStartEvent':\n    case 'RunEnqueuedEvent':\n    case 'RunDequeuedEvent':\n    case 'RunStartingEvent':\n    case 'RunCancelingEvent':\n    case 'ResourceInitStartedEvent':\n    case 'ResourceInitSuccessEvent':\n    case 'StepWorkerStartedEvent':\n    case 'StepWorkerStartingEvent':\n      return <DefaultContent message={node.message} eventType={eventType} />;\n    case 'RunCanceledEvent':\n      return <FailureContent message={node.message} eventType={eventType} />;\n    case 'EngineEvent':\n      if (node.error) {\n        return <FailureContent message={node.message} error={node.error} eventType={eventType} />;\n      }\n      return (\n        <DefaultContent\n          message={node.message}\n          eventType={eventType}\n          eventColor=\"rgba(27,164,206,0.2)\"\n        >\n          <MetadataEntries entries={node.metadataEntries} />\n        </DefaultContent>\n      );\n    case 'LogMessageEvent':\n      return <DefaultContent message={node.message} />;\n    case 'LogsCapturedEvent':\n      const currentQuery = qs.parse(location.search, {ignoreQueryPrefix: true});\n      const updatedQuery = {...currentQuery, logType: 'stdout', logKey: node.stepKey};\n      const rawLogsUrl = `${location.pathname}?${qs.stringify(updatedQuery)}`;\n      const rawLogsLink = (\n        <Link to={rawLogsUrl} style={{color: 'inherit'}}>\n          View stdout / stderr\n        </Link>\n      );\n      const rows = node.stepKey\n        ? [\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ]\n        : [\n            {\n              label: 'step_keys',\n              item: <>{JSON.stringify(node.stepKeys)}</>,\n            },\n            {\n              label: 'captured_logs',\n              item: rawLogsLink,\n            },\n          ];\n      return (\n        <DefaultContent eventType={eventType} message={node.message}>\n          <LogRowStructuredContentTable rows={rows} />\n        </DefaultContent>\n      );\n    default:\n      // This allows us to check that the switch is exhaustive because the union type should\n      // have been narrowed following each successive case to `never` at this point.\n      return assertUnreachable(node);\n  }\n};\n\n// Structured Content Renderers\n\nconst DefaultContent: React.FC<{\n  message: string;\n  eventType?: string;\n  eventColor?: string;\n  eventIntent?: Intent;\n  metadataEntries?: MetadataEntryFragment[];\n  children?: React.ReactElement;\n}> = ({message, eventType, eventColor, eventIntent, children}) => {\n  return (\n    <>\n      <EventTypeColumn>\n        {eventType && (\n          <Tag\n            intent={eventIntent}\n            style={\n              eventColor\n                ? {\n                    fontSize: '0.9em',\n                    color: 'black',\n                    background: eventColor,\n                  }\n                : {\n                    fontSize: '0.9em',\n                  }\n            }\n          >\n            {eventTypeToDisplayType(eventType)}\n          </Tag>\n        )}\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {message}\n        {children}\n      </Box>\n    </>\n  );\n};\n\nconst FailureContent: React.FC<{\n  message?: string;\n  eventType: string;\n  error?: PythonErrorFragment | null;\n  errorSource?: ErrorSource | null;\n  metadataEntries?: MetadataEntryFragment[];\n}> = ({message, error, errorSource, eventType, metadataEntries}) => {\n  let contextMessage = null;\n  let errorMessage = null;\n  let errorStack = null;\n  let errorCause = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n\n    // omit the outer stack for user code errors with a cause\n    // as the outer stack is just framework code\n    if (error.stack.length && !(errorSource === ErrorSource.USER_CODE_ERROR && error.cause)) {\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    }\n\n    if (error.cause) {\n      let errorCauseStack = null;\n      if (error.cause.stack.length) {\n        errorCauseStack = (\n          <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.cause.stack}`}</span>\n        );\n      }\n\n      errorCause = (\n        <>\n          {`The above exception was caused by the following exception:\\n`}\n          <span style={{color: Colors.Red500}}>{`${error.cause.message}`}</span>\n          {errorCauseStack}\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"danger\">\n          {eventTypeToDisplayType(eventType)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        <MetadataEntries entries={metadataEntries} />\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst StepUpForRetryContent: React.FC<{\n  message?: string;\n  error?: PythonErrorFragment | null;\n}> = ({message, error}) => {\n  let contextMessage = null;\n  let errorCause = null;\n  let errorMessage = null;\n  let errorStack = null;\n\n  if (message) {\n    contextMessage = (\n      <>\n        <span>{message}</span>\n        <br />\n      </>\n    );\n  }\n\n  if (error) {\n    // If no cause, this was a `raise RetryRequest` inside the op. Show the trace for the main error.\n    if (!error.cause) {\n      errorMessage = <span style={{color: Colors.Red500}}>{`${error.message}`}</span>;\n      errorStack = <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.stack}`}</span>;\n    } else {\n      // If there is a cause, this was a different exception. Show that instead.\n      errorCause = (\n        <>\n          {`The retry request was caused by the following exception:\\n`}\n          <span style={{color: Colors.Red500}}>{`${error.cause.message}`}</span>\n          <span style={{color: Colors.Red500}}>{`\\nStack Trace:\\n${error.cause.stack}`}</span>\n        </>\n      );\n    }\n  }\n\n  return (\n    <>\n      <EventTypeColumn>\n        <Tag minimal intent=\"warning\">\n          {eventTypeToDisplayType(DagsterEventType.STEP_UP_FOR_RETRY)}\n        </Tag>\n      </EventTypeColumn>\n      <Box padding={{horizontal: 12}} style={{flex: 1}}>\n        {contextMessage}\n        {errorMessage}\n        {errorStack}\n        {errorCause}\n      </Box>\n    </>\n  );\n};\n\nconst AssetMetadataContent: React.FC<{\n  message: string;\n  assetKey: AssetKey | null;\n  metadataEntries: MetadataEntryFragment[];\n  eventType: string;\n  timestamp: string;\n}> = ({message, assetKey, metadataEntries, eventType, timestamp}) => {\n  if (!assetKey) {\n    return (\n      <DefaultContent message={message} eventType={eventType}>\n        <MetadataEntries entries={metadataEntries} />\n      </DefaultContent>\n    );\n  }\n\n  const to = assetDetailsPathForKey(assetKey, {asOf: timestamp});\n\n  const assetDashboardLink = (\n    <span style={{marginLeft: 10}}>\n      [<MetadataEntryLink to={to}>View Asset</MetadataEntryLink>]\n    </span>\n  );\n\n  return (\n    <DefaultContent message={message} eventType={eventType}>\n      <>\n        <LogRowStructuredContentTable\n          rows={[\n            {\n              label: 'asset_key',\n              item: (\n                <>\n                  {displayNameForAssetKey(assetKey)}\n                  {assetDashboardLink}\n                </>\n              ),\n            },\n          ]}\n          styles={{paddingBottom: 0}}\n        />\n        <MetadataEntries entries={metadataEntries} />\n      </>\n    </DefaultContent>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {setHighlightedGanttChartTime} from '../gantt/GanttChart';\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {LogLevel} from '../types/globalTypes';\n\nimport {CellTruncationProvider} from './CellTruncationProvider';\nimport {\n  EventTypeColumn,\n  Row,\n  OpColumn,\n  StructuredContent,\n  TimestampColumn,\n} from './LogsRowComponents';\nimport {LogsRowStructuredContent} from './LogsRowStructuredContent';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {LogsRowStructuredFragment} from './types/LogsRowStructuredFragment';\nimport {LogsRowUnstructuredFragment} from './types/LogsRowUnstructuredFragment';\n\ninterface StructuredProps {\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\ninterface StructuredState {\n  expanded: boolean;\n}\n\nexport class Structured extends React.Component<StructuredProps, StructuredState> {\n  onExpand = () => {\n    const {node, metadata} = this.props;\n\n    if (node.__typename === 'ExecutionStepFailureEvent') {\n      showCustomAlert({\n        title: 'Error',\n        body: (\n          <PythonErrorInfo\n            error={node.error ? node.error : node}\n            failureMetadata={node.failureMetadata}\n            errorSource={node.errorSource}\n          />\n        ),\n      });\n    } else if (node.__typename === 'ExecutionStepUpForRetryEvent') {\n      showCustomAlert({\n        title: 'Step Retry',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else if (\n      (node.__typename === 'EngineEvent' && node.error) ||\n      (node.__typename === 'RunFailureEvent' && node.error) ||\n      node.__typename === 'HookErroredEvent' ||\n      node.__typename === 'ResourceInitFailureEvent'\n    ) {\n      showCustomAlert({\n        title: 'Error',\n        body: <PythonErrorInfo error={node.error ? node.error : node} />,\n      });\n    } else {\n      showCustomAlert({\n        title: node.stepKey || 'Info',\n        body: (\n          <StructuredContent>\n            <LogsRowStructuredContent node={node} metadata={metadata} />\n          </StructuredContent>\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <StructuredMemoizedContent\n          node={this.props.node}\n          metadata={this.props.metadata}\n          highlighted={this.props.highlighted}\n        />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_STRUCTURED_FRAGMENT = gql`\n  fragment LogsRowStructuredFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      eventType\n      timestamp\n      level\n      stepKey\n    }\n    ... on DisplayableEvent {\n      label\n      description\n      metadataEntries {\n        ...MetadataEntryFragment\n      }\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ErrorEvent {\n      error {\n        ...PythonErrorFragment\n      }\n    }\n    ... on MaterializationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ObservationEvent {\n      assetKey {\n        path\n      }\n    }\n    ... on ExecutionStepFailureEvent {\n      errorSource\n      failureMetadata {\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepInputEvent {\n      inputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ExecutionStepOutputEvent {\n      outputName\n      typeCheck {\n        label\n        description\n        success\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on StepExpectationResultEvent {\n      expectationResult {\n        success\n        label\n        description\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on HandledOutputEvent {\n      outputName\n      managerKey\n    }\n    ... on LoadedInputEvent {\n      inputName\n      managerKey\n      upstreamOutputName\n      upstreamStepKey\n    }\n    ... on LogsCapturedEvent {\n      logKey\n      stepKeys\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst StructuredMemoizedContent: React.FC<{\n  node: LogsRowStructuredFragment;\n  metadata: IRunMetadataDict;\n  highlighted: boolean;\n}> = React.memo(({node, metadata, highlighted}) => (\n  <Row\n    level={LogLevel.INFO}\n    onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n    onMouseLeave={() => setHighlightedGanttChartTime(null)}\n    highlighted={highlighted}\n  >\n    <OpColumn stepKey={'stepKey' in node && node.stepKey} />\n    <StructuredContent>\n      <LogsRowStructuredContent node={node} metadata={metadata} />\n    </StructuredContent>\n    <TimestampColumn time={'timestamp' in node ? node.timestamp : null} />\n  </Row>\n));\n\nStructuredMemoizedContent.displayName = 'StructuredMemoizedContent';\n\ninterface UnstructuredProps {\n  node: LogsRowUnstructuredFragment;\n  style: React.CSSProperties;\n  highlighted: boolean;\n}\n\nexport class Unstructured extends React.Component<UnstructuredProps> {\n  onExpand = () => {\n    showCustomAlert({\n      title: 'Log',\n      body: <div style={{whiteSpace: 'pre-wrap'}}>{this.props.node.message}</div>,\n    });\n  };\n\n  render() {\n    return (\n      <CellTruncationProvider style={this.props.style} onExpand={this.onExpand}>\n        <UnstructuredMemoizedContent node={this.props.node} highlighted={this.props.highlighted} />\n      </CellTruncationProvider>\n    );\n  }\n}\n\nexport const LOGS_ROW_UNSTRUCTURED_FRAGMENT = gql`\n  fragment LogsRowUnstructuredFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      level\n      stepKey\n    }\n  }\n`;\n\nconst UnstructuredMemoizedContent: React.FC<{\n  node: LogsRowUnstructuredFragment;\n  highlighted: boolean;\n}> = React.memo(({node, highlighted}) => (\n  <Row\n    level={node.level}\n    onMouseEnter={() => setHighlightedGanttChartTime(node.timestamp)}\n    onMouseLeave={() => setHighlightedGanttChartTime(null)}\n    highlighted={highlighted}\n  >\n    <OpColumn stepKey={node.stepKey} />\n    <EventTypeColumn>\n      <span style={{marginLeft: 8}}>{node.level}</span>\n    </EventTypeColumn>\n    <Box padding={{horizontal: 12}} style={{flex: 1}}>\n      {node.message}\n    </Box>\n    <TimestampColumn time={node.timestamp} />\n  </Row>\n));\n\nUnstructuredMemoizedContent.displayName = 'UnstructuredMemoizedContent';\n","import {gql} from '@apollo/client';\nimport {Colors, NonIdealState} from '@dagster-io/ui';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport {CellMeasurer, CellMeasurerCache, List, ListRowProps, ScrollParams} from 'react-virtualized';\nimport styled from 'styled-components/macro';\n\nimport {LogFilter, LogsProviderLogs} from './LogsProvider';\nimport {\n  LOGS_ROW_STRUCTURED_FRAGMENT,\n  LOGS_ROW_UNSTRUCTURED_FRAGMENT,\n  Structured,\n  Unstructured,\n} from './LogsRow';\nimport {ColumnWidthsProvider, Headers} from './LogsScrollingTableHeader';\nimport {IRunMetadataDict} from './RunMetadataProvider';\nimport {eventTypeToDisplayType} from './getRunFilterProviders';\nimport {logNodeLevel} from './logNodeLevel';\nimport {RunDagsterRunEventFragment} from './types/RunDagsterRunEventFragment';\n\nconst LOGS_PADDING_BOTTOM = 50;\n\ninterface ILogsScrollingTableProps {\n  logs: LogsProviderLogs;\n  filter: LogFilter;\n  filterStepKeys: string[];\n\n  // We use this string to know whether the changes to `nodes` require us to\n  // re-layout the entire table. Appending new rows can be done very fast, but\n  // removing some rows requires the whole list be \"reflowed\" again. Checking\n  // `nodes` for equality doesn't let us optimize for the append- case.\n  filterKey: string;\n  metadata: IRunMetadataDict;\n}\n\ninterface ILogsScrollingTableSizedProps {\n  width: number;\n  height: number;\n\n  filteredNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n  textMatchNodes: (RunDagsterRunEventFragment & {clientsideKey: string})[];\n\n  filterKey: string;\n  loading: boolean;\n  focusedTime: number;\n  metadata: IRunMetadataDict;\n}\n\nfunction filterLogs(logs: LogsProviderLogs, filter: LogFilter, filterStepKeys: string[]) {\n  const filteredNodes = logs.allNodes.filter((node) => {\n    // These events are used to determine which assets a run will materialize and are not intended\n    // to be displayed in Dagit. Pagination is offset based, so we remove these logs client-side.\n    if (node.__typename === 'AssetMaterializationPlannedEvent') {\n      return false;\n    }\n    const l = logNodeLevel(node);\n    if (!filter.levels[l]) {\n      return false;\n    }\n    if (filter.sinceTime && Number(node.timestamp) < filter.sinceTime) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasTextFilter = !!(filter.logQuery.length && filter.logQuery[0].value !== '');\n\n  const textMatchNodes = hasTextFilter\n    ? filteredNodes.filter((node) => {\n        return (\n          filter.logQuery.length > 0 &&\n          filter.logQuery.every((f) => {\n            if (f.token === 'query') {\n              return node.stepKey && filterStepKeys.includes(node.stepKey);\n            }\n            if (f.token === 'step') {\n              return node.stepKey && node.stepKey === f.value;\n            }\n            if (f.token === 'type') {\n              return node.eventType && f.value === eventTypeToDisplayType(node.eventType);\n            }\n            return node.message.toLowerCase().includes(f.value.toLowerCase());\n          })\n        );\n      })\n    : [];\n\n  return {\n    filteredNodes: hasTextFilter && filter.hideNonMatches ? textMatchNodes : filteredNodes,\n    textMatchNodes,\n  };\n}\n\nexport const LogsScrollingTable: React.FC<ILogsScrollingTableProps> = (props) => {\n  const {filterKey, filterStepKeys, metadata, filter, logs} = props;\n  const table = React.useRef<LogsScrollingTableSized>(null);\n\n  return (\n    <ColumnWidthsProvider onWidthsChanged={() => table.current && table.current.didResize()}>\n      <Headers />\n      <div style={{flex: 1, minHeight: 0, marginTop: -1}}>\n        <AutoSizer>\n          {({width, height}) => (\n            <LogsScrollingTableSized\n              width={width}\n              height={height}\n              ref={table}\n              filterKey={filterKey}\n              loading={logs.loading}\n              metadata={metadata}\n              focusedTime={filter.focusedTime}\n              {...filterLogs(logs, filter, filterStepKeys)}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </ColumnWidthsProvider>\n  );\n};\n\nexport const LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT = gql`\n  fragment LogsScrollingTableMessageFragment on DagsterRunEvent {\n    __typename\n    ...LogsRowStructuredFragment\n    ...LogsRowUnstructuredFragment\n  }\n\n  ${LOGS_ROW_STRUCTURED_FRAGMENT}\n  ${LOGS_ROW_UNSTRUCTURED_FRAGMENT}\n`;\n\nclass LogsScrollingTableSized extends React.Component<ILogsScrollingTableSizedProps> {\n  list = React.createRef<List>();\n\n  get listEl() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = this.list.current && ReactDOM.findDOMNode(this.list.current);\n    if (!(el instanceof HTMLElement)) {\n      return null;\n    }\n    return el;\n  }\n\n  cache = new CellMeasurerCache({\n    defaultHeight: 30,\n    fixedWidth: true,\n    keyMapper: (rowIndex) =>\n      this.props.filteredNodes ? this.props.filteredNodes[rowIndex].clientsideKey : '',\n  });\n\n  isAtBottomOrZero = true;\n  scrollToBottomObserver: MutationObserver | null = null;\n\n  componentDidMount() {\n    this.attachScrollToBottomObserver();\n    if (this.props.focusedTime) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: ILogsScrollingTableSizedProps) {\n    if (!this.list.current) {\n      return;\n    }\n\n    if (this.props.width !== prevProps.width) {\n      this.didResize();\n    }\n    if (this.props.filterKey !== prevProps.filterKey) {\n      this.list.current.recomputeGridSize();\n    }\n\n    if (\n      this.props.focusedTime &&\n      this.props.filteredNodes?.length !== prevProps.filteredNodes?.length\n    ) {\n      window.requestAnimationFrame(() => {\n        this.scrollToTime(this.props.focusedTime);\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.scrollToBottomObserver) {\n      this.scrollToBottomObserver.disconnect();\n    }\n  }\n\n  didResize() {\n    this.cache.clearAll();\n    this.forceUpdate();\n  }\n\n  attachScrollToBottomObserver() {\n    const el = this.listEl;\n    if (!el) {\n      console.warn(`No container, LogsScrollingTable must render listEl`);\n      return;\n    }\n\n    let lastHeight: string | null = null;\n\n    this.scrollToBottomObserver = new MutationObserver(() => {\n      const rowgroupEl = el.querySelector('[role=rowgroup]') as HTMLElement;\n      if (!rowgroupEl) {\n        lastHeight = null;\n        return;\n      }\n      if (rowgroupEl.style.height === lastHeight) {\n        return;\n      }\n      if (!this.isAtBottomOrZero) {\n        return;\n      }\n\n      lastHeight = rowgroupEl.style.height;\n      el.scrollTop = el.scrollHeight - el.clientHeight;\n    });\n\n    this.scrollToBottomObserver.observe(el, {\n      attributes: true,\n      subtree: true,\n    });\n  }\n\n  onScroll = ({scrollTop, scrollHeight, clientHeight}: ScrollParams) => {\n    const atTopAndStarting = scrollTop === 0 && scrollHeight <= clientHeight;\n\n    // Note: The distance to the bottom can go negative if you scroll into the padding at the bottom of the list.\n    // react-virtualized seems to be faking these numbers (they're different than what you get if you inspect the el)\n    const distanceToBottom = scrollHeight - clientHeight - scrollTop;\n    const atBottom = distanceToBottom < 5;\n\n    this.isAtBottomOrZero = atTopAndStarting || atBottom;\n  };\n\n  scrollToTime = (ms: number) => {\n    if (!this.props.filteredNodes || !this.list.current) {\n      return;\n    }\n\n    // Stop the table from attempting to return to the bottom-of-feed\n    // if more logs arrive.\n    this.isAtBottomOrZero = false;\n\n    // Find the row immediately at or after the provided timestamp\n    const target: {index: number; alignment: 'center'} = {\n      index: this.props.filteredNodes.findIndex((n) => Number(n.timestamp) >= ms),\n      alignment: 'center',\n    };\n    if (target.index === -1) {\n      target.index = this.props.filteredNodes.length - 1;\n    }\n\n    // Move to the offset. For some reason, this takes multiple iterations but not multiple renders.\n    // It seems react-virtualized may be using default row height for rows more than X rows away and\n    // the number gets more accurate as we scroll, which is very annoying.\n    let offset = 0;\n    let iterations = 0;\n    while (offset !== this.list.current.getOffsetForRow(target)) {\n      offset = this.list.current.getOffsetForRow(target);\n      this.list.current.scrollToPosition(offset);\n      iterations += 1;\n      if (iterations > 20) {\n        break;\n      }\n    }\n  };\n\n  rowRenderer = ({parent, index, style}: ListRowProps) => {\n    if (!this.props.filteredNodes) {\n      return;\n    }\n    const node = this.props.filteredNodes[index];\n    const focusedTimeMatch = Number(node.timestamp) === this.props.focusedTime;\n    const textMatch = !!this.props.textMatchNodes?.includes(node);\n\n    const metadata = this.props.metadata;\n    if (!node) {\n      return <span />;\n    }\n    const isLastRow = index === this.props.filteredNodes.length - 1;\n    const lastRowStyles = isLastRow\n      ? {\n          borderBottom: `1px solid ${Colors.Gray100}`,\n        }\n      : {};\n\n    return (\n      <CellMeasurer cache={this.cache} index={index} parent={parent} key={node.clientsideKey}>\n        {node.__typename === 'LogMessageEvent' ? (\n          <Unstructured\n            node={node}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        ) : (\n          <Structured\n            node={node}\n            metadata={metadata}\n            style={{...style, width: this.props.width, ...lastRowStyles}}\n            highlighted={textMatch || focusedTimeMatch}\n          />\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  noContentRenderer = () => {\n    if (this.props.filteredNodes) {\n      return <NonIdealState icon=\"no-results\" title=\"No logs to display\" />;\n    }\n    return <span />;\n  };\n\n  render() {\n    const {filteredNodes, height, loading, width} = this.props;\n    return (\n      <div>\n        {loading ? (\n          <ListEmptyState>\n            <NonIdealState icon=\"spinner\" title=\"Fetching logs...\" />\n          </ListEmptyState>\n        ) : null}\n        <List\n          ref={this.list}\n          deferredMeasurementCache={this.cache}\n          rowCount={filteredNodes?.length || 0}\n          noContentRenderer={this.noContentRenderer}\n          rowHeight={this.cache.rowHeight}\n          rowRenderer={this.rowRenderer}\n          width={width}\n          height={height}\n          overscanRowCount={10}\n          style={{paddingBottom: LOGS_PADDING_BOTTOM}}\n          onScroll={this.onScroll}\n        />\n      </div>\n    );\n  }\n}\n\nclass AutoSizer extends React.Component<{\n  children: (size: {width: number; height: number}) => React.ReactNode;\n}> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  resizeObserver: any | undefined;\n\n  componentDidMount() {\n    this.measure();\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (el && el instanceof HTMLElement && 'ResizeObserver' in window) {\n      const RO = window['ResizeObserver'] as any;\n      this.resizeObserver = new RO((entries: any) => {\n        this.setState({\n          width: entries[0].contentRect.width,\n          height: entries[0].contentRect.height,\n        });\n      });\n      this.resizeObserver.observe(el);\n    }\n  }\n\n  componentDidUpdate() {\n    this.measure();\n  }\n\n  componentWillUnmount() {\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n  }\n\n  measure() {\n    // eslint-disable-next-line react/no-find-dom-node\n    const el = ReactDOM.findDOMNode(this);\n    if (!el || !(el instanceof HTMLElement)) {\n      return;\n    }\n    if (el.clientWidth !== this.state.width || el.clientHeight !== this.state.height) {\n      this.setState({width: el.clientWidth, height: el.clientHeight});\n    }\n  }\n\n  render() {\n    return <div style={{width: '100%', height: '100%'}}>{this.props.children(this.state)}</div>;\n  }\n}\n\nconst ListEmptyState = styled.div`\n  background-color: rgba(255, 255, 255, 0.7);\n  z-index: 100;\n  position: absolute;\n  width: 100%;\n  height: calc(100% - 50px);\n`;\n","import {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {getJSONForKey} from '../hooks/useStateWithStorage';\n\nconst ColumnWidthsStorageKey = 'ColumnWidths';\nconst ColumnWidths = Object.assign(\n  {\n    eventType: 140,\n    solid: 150,\n    timestamp: 117,\n  },\n  getJSONForKey(ColumnWidthsStorageKey),\n);\n\nconst MIN_COLUMN_WIDTH = 40;\n\nexport const ColumnWidthsContext = React.createContext({\n  ...ColumnWidths,\n  onChange: (_: typeof ColumnWidths) => {},\n});\n\nexport class ColumnWidthsProvider extends React.Component<\n  {onWidthsChanged: (widths: typeof ColumnWidths) => void},\n  typeof ColumnWidths\n> {\n  state = ColumnWidths;\n\n  onWidthsChangedFromContext = (columnWidths: typeof ColumnWidths) => {\n    window.localStorage.setItem(ColumnWidthsStorageKey, JSON.stringify(columnWidths));\n    this.props.onWidthsChanged(columnWidths);\n    this.setState(columnWidths);\n  };\n\n  render() {\n    return (\n      <ColumnWidthsContext.Provider\n        value={{\n          ...this.state,\n          onChange: this.onWidthsChangedFromContext,\n        }}\n      >\n        {this.props.children}\n      </ColumnWidthsContext.Provider>\n    );\n  }\n}\n\ninterface HeaderProps extends React.HTMLProps<HTMLDivElement> {\n  width: number;\n  handleSide?: 'left' | 'right';\n  onResize?: (width: number) => void;\n}\n\ninterface HeaderState {\n  isDragging: boolean;\n  width: number;\n  screenX: number;\n}\n\nclass Header extends React.Component<HeaderProps, HeaderState> {\n  state = {\n    isDragging: false,\n    width: 0,\n    screenX: 0,\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseDown = (m: React.MouseEvent<HTMLDivElement>) => {\n    const {width} = this.props;\n    this.setState({\n      isDragging: true,\n      screenX: m.screenX,\n      width,\n    });\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseMove = (evt: MouseEvent) => {\n    const {onResize, handleSide} = this.props;\n    const {isDragging, width, screenX} = this.state;\n    if (!evt.screenX || !isDragging || !onResize) {\n      return;\n    }\n    const dir = handleSide === 'left' ? -1 : 1;\n    onResize(Math.max(MIN_COLUMN_WIDTH, width + (evt.screenX - screenX) * dir));\n  };\n\n  onMouseUp = () => {\n    const {isDragging} = this.state;\n    isDragging && this.setState({isDragging: false});\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  };\n\n  render() {\n    const isDraggable = !!this.props.onResize;\n\n    return (\n      <HeaderContainer style={{width: this.props.width}}>\n        <HeaderDragHandle\n          onMouseDown={isDraggable ? this.onMouseDown : undefined}\n          isDraggable={isDraggable}\n          isDragging={this.state.isDragging}\n          side={this.props.handleSide || 'right'}\n        >\n          <div />\n        </HeaderDragHandle>\n        <HeaderLabel>{this.props.children}</HeaderLabel>\n      </HeaderContainer>\n    );\n  }\n}\n\nexport const Headers = () => {\n  const widths = React.useContext(ColumnWidthsContext);\n  return (\n    <HeadersContainer>\n      <Header width={widths.solid} onResize={(width) => widths.onChange({...widths, solid: width})}>\n        Op\n      </Header>\n      <Header\n        width={widths.eventType}\n        onResize={(width) => widths.onChange({...widths, eventType: width})}\n      >\n        Event Type\n      </Header>\n      <HeaderContainer style={{flex: 1}}>Info</HeaderContainer>\n      <Header\n        handleSide=\"left\"\n        width={widths.timestamp}\n        onResize={(width) => widths.onChange({...widths, timestamp: width})}\n      >\n        Timestamp\n      </Header>\n    </HeadersContainer>\n  );\n};\n\nconst HeadersContainer = styled.div`\n  display: flex;\n  color: ${Colors.Gray400};\n  text-transform: uppercase;\n  font-size: 12px;\n  border-bottom: 1px solid ${Colors.KeylineGray};\n  z-index: 2;\n`;\n\nconst HeaderContainer = styled.div`\n  flex-shrink: 0;\n  position: relative;\n  user-select: none;\n  display: inline-block;\n  padding: 0 12px;\n  line-height: 32px;\n`;\n\n// eslint-disable-next-line no-unexpected-multiline\nconst HeaderDragHandle = styled.div<{\n  side: 'left' | 'right';\n  isDraggable: boolean;\n  isDragging: boolean;\n}>`\n  width: 1px;\n  height: 20000px;\n  position: absolute;\n  cursor: ${({isDraggable}) => (isDraggable ? 'ew-resize' : 'default')};\n  z-index: 2;\n  ${({side}) => (side === 'right' ? `right: -2px;` : `left: -2px;`)}\n  padding: 0 2px;\n  & > div {\n    width: 1px;\n    height: 100%;\n    background: ${({isDragging}) => (isDragging ? Colors.Gray400 : Colors.KeylineGray)};\n  }\n`;\n\nconst HeaderLabel = styled.div`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n","import * as React from 'react';\nimport {Prompt} from 'react-router-dom';\n\nimport {useOnBeforeUnload} from '../hooks/useOnBeforeUnload';\n\ninterface Props {\n  message: string;\n}\n\nexport const NavigationBlock = (props: Props) => {\n  useOnBeforeUnload();\n  return <Prompt message={props.message} />;\n};\n","import * as React from 'react';\n\nexport const useOnBeforeUnload = () => {\n  React.useEffect(() => {\n    const handler = (e: BeforeUnloadEvent) => {\n      e.preventDefault();\n      e.returnValue = '';\n    };\n\n    window.addEventListener('beforeunload', handler);\n    return () => {\n      window.removeEventListener('beforeunload', handler);\n    };\n  }, []);\n};\n","import {Box, Button, Group, IconName, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {LaunchButtonConfiguration, LaunchButtonDropdown} from '../launchpad/LaunchButton';\nimport {buildRepoPath} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\n\nimport {IRunMetadataDict, IStepState} from './RunMetadataProvider';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {DagsterTag} from './RunTag';\nimport {ReExecutionStyle} from './RunUtils';\nimport {StepSelection} from './StepSelection';\nimport {TerminationDialog, TerminationState} from './TerminationDialog';\nimport {RunFragment} from './types/RunFragment';\n\ninterface RunActionButtonsProps {\n  run: RunFragment;\n  selection: StepSelection;\n  graph: GraphQueryItem[];\n  metadata: IRunMetadataDict;\n  onLaunch: (style: ReExecutionStyle) => Promise<void>;\n}\n\nexport const CancelRunButton: React.FC<{run: RunFragment}> = ({run}) => {\n  const {id: runId, canTerminate} = run;\n  const [showDialog, setShowDialog] = React.useState<boolean>(false);\n  const closeDialog = React.useCallback(() => setShowDialog(false), []);\n\n  const onComplete = React.useCallback(\n    (terminationState: TerminationState) => {\n      const {errors} = terminationState;\n      const error = runId && errors[runId];\n      if (error && 'message' in error) {\n        SharedToaster.show({\n          message: error.message,\n          icon: 'error',\n          intent: 'danger',\n        });\n      }\n    },\n    [runId],\n  );\n\n  if (!runId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Button\n        icon={<Icon name=\"cancel\" />}\n        intent=\"danger\"\n        disabled={showDialog}\n        onClick={() => setShowDialog(true)}\n      >\n        Terminate\n      </Button>\n      <TerminationDialog\n        isOpen={showDialog}\n        onClose={closeDialog}\n        onComplete={onComplete}\n        selectedRuns={{[runId]: canTerminate}}\n      />\n    </>\n  );\n};\n\nfunction stepSelectionWithState(selection: StepSelection, metadata: IRunMetadataDict) {\n  const stepStates = selection.keys.map(\n    (key) => (key && metadata.steps[key]?.state) || IStepState.PREPARING,\n  );\n\n  return {\n    ...selection,\n    present: selection.keys.length > 0,\n    failed: selection.keys.length && stepStates.includes(IStepState.FAILED),\n    finished: stepStates.every((stepState) =>\n      [IStepState.FAILED, IStepState.SUCCEEDED].includes(stepState),\n    ),\n  };\n}\n\nfunction stepSelectionFromRunTags(\n  run: RunFragment,\n  graph: GraphQueryItem[],\n  metadata: IRunMetadataDict,\n) {\n  const tag = run.tags.find((t) => t.key === DagsterTag.StepSelection);\n  if (!tag) {\n    return null;\n  }\n  return stepSelectionWithState(\n    {keys: filterByQuery(graph, tag.value).all.map((k) => k.name), query: tag.value},\n    metadata,\n  );\n}\n\nexport const canRunAllSteps = (run: RunFragment) => doneStatuses.has(run.status);\nexport const canRunFromFailure = (run: RunFragment) =>\n  run.executionPlan && failedStatuses.has(run.status);\n\nexport const RunActionButtons: React.FC<RunActionButtonsProps> = (props) => {\n  const {metadata, graph, onLaunch, run} = props;\n  const artifactsPersisted = run?.executionPlan?.artifactsPersisted;\n  const {canLaunchPipelineReexecution} = usePermissions();\n  const pipelineError = usePipelineAvailabilityErrorForRun(run);\n\n  const selection = stepSelectionWithState(props.selection, metadata);\n\n  const currentRunSelection = stepSelectionFromRunTags(run, graph, metadata);\n  const currentRunIsFromFailure = run.tags?.some(\n    (t) => t.key === DagsterTag.IsResumeRetry && t.value === 'true',\n  );\n\n  const full: LaunchButtonConfiguration = {\n    icon: 'cached',\n    scope: '*',\n    title: 'All steps in root run',\n    tooltip: 'Re-execute the pipeline run from scratch',\n    disabled: !canRunAllSteps(run),\n    onClick: () => onLaunch({type: 'all'}),\n  };\n\n  const same: LaunchButtonConfiguration = {\n    icon: 'linear_scale',\n    scope: currentRunSelection?.query || '*',\n    title: 'Same steps',\n    disabled: !currentRunSelection || !(currentRunSelection.finished || currentRunSelection.failed),\n    tooltip: (\n      <div>\n        {!currentRunSelection || !currentRunSelection.present\n          ? 'Re-executes the same step subset used for this run if one was present.'\n          : !currentRunSelection.finished\n          ? 'Wait for all of the steps to finish to re-execute the same subset.'\n          : 'Re-execute the same step subset used for this run:'}\n        <StepSelectionDescription selection={currentRunSelection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection: currentRunSelection!}),\n  };\n\n  const selected: LaunchButtonConfiguration = {\n    icon: 'op',\n    scope: selection.query,\n    title: selection.keys.length > 1 ? 'Selected steps' : 'Selected step',\n    disabled: !selection.present || !(selection.finished || selection.failed),\n    tooltip: (\n      <div>\n        {!selection.present\n          ? 'Select a step or type a step subset to re-execute.'\n          : !selection.finished\n          ? 'Wait for the steps to finish to re-execute them.'\n          : 'Re-execute the selected steps with existing configuration:'}\n        <StepSelectionDescription selection={selection} />\n      </div>\n    ),\n    onClick: () => onLaunch({type: 'selection', selection}),\n  };\n\n  const fromSelected: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From selected',\n    disabled: !canRunAllSteps(run) || selection.keys.length !== 1,\n    tooltip: 'Re-execute the pipeline downstream from the selected steps',\n    onClick: () => {\n      if (!run.executionPlan) {\n        console.warn('Run execution plan must be present to launch from-selected execution');\n        return Promise.resolve();\n      }\n      const selectionAndDownstreamQuery = selection.keys.map((k) => `${k}*`).join(',');\n      const selectionKeys = filterByQuery(graph, selectionAndDownstreamQuery).all.map(\n        (node) => node.name,\n      );\n\n      return onLaunch({\n        type: 'selection',\n        selection: {\n          keys: selectionKeys,\n          query: selectionAndDownstreamQuery,\n        },\n      });\n    },\n  };\n\n  const fromFailureEnabled = canRunFromFailure(run);\n\n  const fromFailure: LaunchButtonConfiguration = {\n    icon: 'arrow_forward',\n    title: 'From failure',\n    disabled: !fromFailureEnabled,\n    tooltip: !fromFailureEnabled\n      ? 'Retry is only enabled when the pipeline has failed.'\n      : 'Retry the pipeline run, skipping steps that completed successfully',\n    onClick: () => onLaunch({type: 'from-failure'}),\n  };\n\n  if (!artifactsPersisted) {\n    [selected, same, fromFailure, fromSelected].forEach((option) => {\n      option.disabled = true;\n      option.title =\n        'Retry and re-execute are only enabled on persistent storage. Try rerunning with a different storage configuration.';\n    });\n  }\n\n  const options = [full, same, selected, fromSelected, fromFailure];\n  const preferredRerun = selection.present\n    ? selected\n    : fromFailureEnabled && currentRunIsFromFailure\n    ? fromFailure\n    : currentRunSelection?.present\n    ? same\n    : null;\n\n  const primary = artifactsPersisted && preferredRerun ? preferredRerun : full;\n\n  const tooltip = () => {\n    if (pipelineError?.tooltip) {\n      return pipelineError?.tooltip;\n    }\n    return canLaunchPipelineReexecution ? undefined : DISABLED_MESSAGE;\n  };\n\n  return (\n    <Group direction=\"row\" spacing={8}>\n      <Box flex={{direction: 'row'}}>\n        <LaunchButtonDropdown\n          runCount={1}\n          primary={primary}\n          options={options}\n          title={\n            primary.scope === '*'\n              ? `Re-execute all (*)`\n              : primary.scope\n              ? `Re-execute (${primary.scope})`\n              : `Re-execute ${primary.title}`\n          }\n          tooltip={tooltip()}\n          icon={pipelineError?.icon}\n          disabled={pipelineError?.disabled || !canLaunchPipelineReexecution}\n        />\n      </Box>\n      {!doneStatuses.has(run.status) ? <CancelRunButton run={run} /> : null}\n    </Group>\n  );\n};\n\nfunction usePipelineAvailabilityErrorForRun(\n  run: RunFragment | null | undefined,\n): null | {tooltip?: string | JSX.Element; icon?: IconName; disabled: boolean} {\n  const repoMatch = useRepositoryForRun(run);\n\n  // The run hasn't loaded, so no error.\n  if (!run) {\n    return null;\n  }\n\n  if (!run.pipelineSnapshotId) {\n    return {\n      icon: 'error',\n      tooltip: `\"${run.pipelineName}\" could not be found.`,\n      disabled: true,\n    };\n  }\n\n  if (repoMatch) {\n    const {type: matchType} = repoMatch;\n\n    // The run matches the repository and active snapshot ID for the pipeline. This is the best\n    // we can do, so consider it safe to run as-is.\n    if (matchType === 'origin-and-snapshot') {\n      return null;\n    }\n\n    // Beyond this point, we're just trying our best. Warn the user that behavior might not be what\n    // they expect.\n\n    if (matchType === 'origin-only') {\n      // Only the repo is a match.\n      return {\n        icon: 'warning',\n        tooltip: `The workspace version of \"${run.pipelineName}\" may be different than the one used for the original run.`,\n        disabled: false,\n      };\n    }\n\n    if (matchType === 'snapshot-only') {\n      // Only the snapshot ID matched, but not the repo.\n      return {\n        icon: 'warning',\n        tooltip: (\n          <Group direction=\"column\" spacing={4}>\n            <div>{`The original run loaded \"${run.pipelineName}\" from a different repository.`}</div>\n            {run.repositoryOrigin ? (\n              <div>\n                Original repository:{' '}\n                <strong>\n                  {run.repositoryOrigin.repositoryName}@\n                  {run.repositoryOrigin.repositoryLocationName}\n                </strong>\n              </div>\n            ) : null}\n          </Group>\n        ),\n        disabled: false,\n      };\n    }\n\n    // Only the pipeline name matched. This could be from any repo in the workspace.\n    return {\n      icon: 'warning',\n      tooltip: `The pipeline \"${run.pipelineName}\" may be a different version from the original pipeline run.`,\n      disabled: false,\n    };\n  }\n\n  // We could not find a repo that contained this pipeline. Inform the user that they should\n  // load the missing repository.\n  const repoForRun = run.repositoryOrigin?.repositoryName;\n  const repoLocationForRun = run.repositoryOrigin?.repositoryLocationName;\n\n  const tooltip = (\n    <Group direction=\"column\" spacing={8}>\n      <div>{`\"${run.pipelineName}\" is not available in the current workspace.`}</div>\n      {repoForRun && repoLocationForRun ? (\n        <div>{`Load repository ${buildRepoPath(\n          repoForRun,\n          repoLocationForRun,\n        )} and try again.`}</div>\n      ) : null}\n    </Group>\n  );\n\n  return {\n    icon: 'error',\n    tooltip,\n    disabled: true,\n  };\n}\n\nconst StepSelectionDescription: React.FC<{selection: StepSelection | null}> = ({selection}) => (\n  <div style={{paddingLeft: '10px'}}>\n    {(selection?.keys || []).map((step) => (\n      <span key={step} style={{display: 'block'}}>{`* ${step}`}</span>\n    ))}\n  </div>\n);\n","import {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  Dialog,\n  DialogFooter,\n  Icon,\n  Table,\n  Tag,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {displayNameForAssetKey, tokenForAssetKey} from '../asset-graph/Utils';\nimport {assetDetailsPathForKey} from '../assets/assetDetailsPathForKey';\nimport {AssetKey} from '../assets/types';\n\nconst MAX_ASSET_TAGS = 3;\n\nexport const RunAssetKeyTags: React.FC<{\n  assetKeys: AssetKey[] | null;\n  clickableTags?: boolean;\n}> = React.memo(({assetKeys, clickableTags}) => {\n  const [showMore, setShowMore] = React.useState(false);\n\n  if (!assetKeys || !assetKeys.length) {\n    return null;\n  }\n\n  const assetCount = assetKeys.length;\n  const displayed = assetCount <= MAX_ASSET_TAGS ? assetKeys : [];\n  const hidden = assetCount - displayed.length;\n\n  if (clickableTags) {\n    return (\n      <>\n        {displayed.map((assetKey, ii) => (\n          <Link to={assetDetailsPathForKey(assetKey)} key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n            <Tag intent=\"none\" interactive icon=\"asset\">\n              {displayNameForAssetKey(assetKey)}\n            </Tag>\n          </Link>\n        ))}\n        {hidden > 0 && (\n          <ButtonLink onClick={() => setShowMore(true)}>\n            <Tag intent=\"none\" icon=\"asset\">\n              {hidden} assets\n            </Tag>\n          </ButtonLink>\n        )}\n        <Dialog\n          title=\"Assets in Run\"\n          onClose={() => setShowMore(false)}\n          style={{minWidth: '400px', maxWidth: '80vw', maxHeight: '70vh'}}\n          isOpen={showMore}\n        >\n          {showMore ? (\n            <Box\n              padding={{bottom: 12}}\n              border={{side: 'bottom', color: Colors.KeylineGray, width: 1}}\n              style={{overflowY: 'auto'}}\n              background={Colors.White}\n            >\n              <Table>\n                <thead>\n                  <tr>\n                    <th>Asset key</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {assetKeys.map((assetKey, ii) => (\n                    <tr key={`${tokenForAssetKey(assetKey)}-${ii}`}>\n                      <td>\n                        <Link\n                          to={assetDetailsPathForKey(assetKey)}\n                          key={tokenForAssetKey(assetKey)}\n                        >\n                          {displayNameForAssetKey(assetKey)}\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </Box>\n          ) : null}\n          <DialogFooter>\n            <Button intent=\"primary\" autoFocus onClick={() => setShowMore(false)}>\n              OK\n            </Button>\n          </DialogFooter>\n        </Dialog>\n      </>\n    );\n  }\n\n  return (\n    <Box flex={{direction: 'row', gap: 8, wrap: 'wrap', alignItems: 'center'}}>\n      <Icon color={Colors.Gray400} name=\"asset\" size={16} />\n      {`${displayed.map(displayNameForAssetKey).join(', ')}${\n        hidden > 0 ? ` + ${hidden} more` : ''\n      }`}\n    </Box>\n  );\n});\n","import * as React from 'react';\n\nimport {RunFragment} from './types/RunFragment';\n\nconst initialContext = undefined;\nexport const RunContext = React.createContext<RunFragment | undefined>(initialContext);\n","import {gql} from '@apollo/client';\nimport {\n  Button,\n  Colors,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  MetadataTable,\n  Popover,\n  Tooltip,\n  Subheading,\n  Box,\n  StyledReadOnlyCodeMirror,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {AppContext} from '../app/AppContext';\nimport {SharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {RunStatus} from '../types/globalTypes';\nimport {AnchorButton} from '../ui/AnchorButton';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {RunTags} from './RunTags';\nimport {TimeElapsed} from './TimeElapsed';\nimport {RunDetailsFragment} from './types/RunDetailsFragment';\nimport {RunFragment} from './types/RunFragment';\n\nexport const timingStringForStatus = (status?: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    case RunStatus.CANCELING:\n      return 'Canceling…';\n    case RunStatus.FAILURE:\n      return 'Failed';\n    case RunStatus.NOT_STARTED:\n      return 'Waiting to start…';\n    case RunStatus.STARTED:\n      return 'Started…';\n    case RunStatus.STARTING:\n      return 'Starting…';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    default:\n      return 'None';\n  }\n};\n\nconst LoadingOrValue: React.FC<{\n  loading: boolean;\n  children: () => React.ReactNode;\n}> = ({loading, children}) =>\n  loading ? <div style={{color: Colors.Gray400}}>Loading…</div> : <div>{children()}</div>;\n\nconst TIME_FORMAT = {showSeconds: true, showTimezone: false};\n\nexport const RunDetails: React.FC<{\n  loading: boolean;\n  run: RunDetailsFragment | undefined;\n}> = ({loading, run}) => {\n  return (\n    <MetadataTable\n      spacing={0}\n      rows={[\n        {\n          key: 'Started',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimestampDisplay timestamp={run.startTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Ended',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.endTime) {\n                  return <TimestampDisplay timestamp={run.endTime} timeFormat={TIME_FORMAT} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n        {\n          key: 'Duration',\n          value: (\n            <LoadingOrValue loading={loading}>\n              {() => {\n                if (run?.startTime) {\n                  return <TimeElapsed startUnix={run.startTime} endUnix={run.endTime} />;\n                }\n                return (\n                  <div style={{color: Colors.Gray400}}>{timingStringForStatus(run?.status)}</div>\n                );\n              }}\n            </LoadingOrValue>\n          ),\n        },\n      ]}\n    />\n  );\n};\n\nexport const RunConfigDialog: React.FC<{run: RunFragment; isJob: boolean}> = ({run, isJob}) => {\n  const [showDialog, setShowDialog] = React.useState(false);\n  const {rootServerURI} = React.useContext(AppContext);\n  const {runConfigYaml} = run;\n  const copy = useCopyToClipboard();\n\n  const copyConfig = () => {\n    copy(runConfigYaml);\n    SharedToaster.show({\n      intent: 'success',\n      icon: 'copy_to_clipboard_done',\n      message: 'Copied!',\n    });\n  };\n\n  return (\n    <div>\n      <Group direction=\"row\" spacing={8}>\n        <AnchorButton\n          icon={<Icon name=\"edit\" />}\n          to={workspacePathFromRunDetails({\n            id: run.id,\n            repositoryName: run.repositoryOrigin?.repositoryName,\n            repositoryLocationName: run.repositoryOrigin?.repositoryLocationName,\n            pipelineName: run.pipelineName,\n            isJob,\n          })}\n        >\n          Open in Launchpad\n        </AnchorButton>\n        <Button icon={<Icon name=\"tag\" />} onClick={() => setShowDialog(true)}>\n          View tags and config\n        </Button>\n        <Popover\n          position=\"bottom-right\"\n          content={\n            <Menu>\n              <Tooltip\n                content=\"Loadable in dagit-debug\"\n                position=\"bottom-right\"\n                targetTagName=\"div\"\n              >\n                <MenuItem\n                  text=\"Download debug file\"\n                  icon={<Icon name=\"download_for_offline\" />}\n                  onClick={() => window.open(`${rootServerURI}/download_debug/${run.runId}`)}\n                />\n              </Tooltip>\n            </Menu>\n          }\n        >\n          <Button icon={<Icon name=\"expand_more\" />} />\n        </Popover>\n      </Group>\n      <Dialog\n        isOpen={showDialog}\n        onClose={() => setShowDialog(false)}\n        style={{width: '800px'}}\n        title=\"Run configuration\"\n      >\n        <Box flex={{direction: 'column', gap: 20}}>\n          <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n            <Subheading>Tags</Subheading>\n            <div>\n              <RunTags tags={run.tags} mode={isJob ? null : run.mode} />\n            </div>\n          </Box>\n          <div>\n            <Box\n              border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n              padding={{left: 24, bottom: 16}}\n            >\n              <Subheading>Config</Subheading>\n            </Box>\n            <StyledReadOnlyCodeMirror\n              value={runConfigYaml}\n              options={{lineNumbers: true, mode: 'yaml'}}\n            />\n          </div>\n        </Box>\n        <DialogFooter topBorder>\n          <Button onClick={() => copyConfig()} intent=\"none\">\n            Copy config\n          </Button>\n          <Button onClick={() => setShowDialog(false)} intent=\"primary\">\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </div>\n  );\n};\n\nexport const RUN_DETAILS_FRAGMENT = gql`\n  fragment RunDetailsFragment on Run {\n    id\n    startTime\n    endTime\n    status\n  }\n`;\n","import {gql} from '@apollo/client';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {EXECUTION_PLAN_TO_GRAPH_FRAGMENT} from '../gantt/toGraphQueryItems';\n\nimport {LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT} from './LogsScrollingTable';\nimport {RUN_DETAILS_FRAGMENT} from './RunDetails';\nimport {RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT} from './RunMetadataProvider';\n\nexport const RUN_FRAGMENT_FOR_REPOSITORY_MATCH = gql`\n  fragment RunFragmentForRepositoryMatch on Run {\n    id\n    pipelineName\n    pipelineSnapshotId\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n  }\n`;\n\nexport const RunFragments = {\n  RunFragment: gql`\n    fragment RunFragment on Run {\n      id\n      runConfigYaml\n      runId\n      canTerminate\n      status\n      mode\n      tags {\n        key\n        value\n      }\n      assets {\n        id\n        key {\n          path\n        }\n      }\n      rootRunId\n      parentRunId\n      pipelineName\n      solidSelection\n      assetSelection {\n        ... on AssetKey {\n          path\n        }\n      }\n      pipelineSnapshotId\n      executionPlan {\n        artifactsPersisted\n        ...ExecutionPlanToGraphFragment\n      }\n      stepKeysToExecute\n      ...RunFragmentForRepositoryMatch\n      ...RunDetailsFragment\n      updateTime\n      stepStats {\n        stepKey\n        status\n        startTime\n        endTime\n        attempts {\n          startTime\n          endTime\n        }\n        markers {\n          startTime\n          endTime\n        }\n      }\n    }\n\n    ${EXECUTION_PLAN_TO_GRAPH_FRAGMENT}\n    ${RUN_FRAGMENT_FOR_REPOSITORY_MATCH}\n    ${RUN_DETAILS_FRAGMENT}\n  `,\n  RunDagsterRunEventFragment: gql`\n    fragment RunDagsterRunEventFragment on DagsterRunEvent {\n      ... on MessageEvent {\n        message\n        timestamp\n        level\n        stepKey\n      }\n\n      ...LogsScrollingTableMessageFragment\n      ...RunMetadataProviderMessageFragment\n    }\n\n    ${RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT}\n    ${LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT}\n    ${PYTHON_ERROR_FRAGMENT}\n  `,\n};\n","import {gql} from '@apollo/client';\nimport * as React from 'react';\n\nimport {METADATA_ENTRY_FRAGMENT} from '../metadata/MetadataEntry';\nimport {StepEventStatus} from '../types/globalTypes';\n\nimport {LogsProviderLogs} from './LogsProvider';\nimport {RunContext} from './RunContext';\nimport {RunFragment} from './types/RunFragment';\nimport {RunMetadataProviderMessageFragment} from './types/RunMetadataProviderMessageFragment';\n\nexport enum IStepState {\n  PREPARING = 'preparing',\n  RETRY_REQUESTED = 'retry-requested',\n  RUNNING = 'running',\n  SUCCEEDED = 'succeeded',\n  SKIPPED = 'skipped',\n  FAILED = 'failed',\n  UNKNOWN = 'unknown', // run exited without step reaching a final state\n}\n\nconst BOX_EXIT_STATES = [\n  IStepState.RETRY_REQUESTED,\n  IStepState.SUCCEEDED,\n  IStepState.FAILED,\n  IStepState.UNKNOWN,\n];\n\ninterface IMarker {\n  key: string;\n  start?: number;\n  end?: number;\n}\n\nexport interface IStepAttempt {\n  start: number;\n  end?: number;\n  exitState?: IStepState;\n}\n\nexport interface IStepMetadata {\n  // current state\n  state: IStepState;\n\n  // execution start and stop (user-code) inclusive of all retries\n  start?: number;\n  end?: number;\n\n  // current state + prev state transition times\n  transitions: {\n    state: IStepState;\n    time: number;\n  }[];\n\n  // transition times organized into start+stop+exit state pairs.\n  // This is the metadata used to render boxes on the realtime vi.z\n  attempts: IStepAttempt[];\n\n  // accumulated metadata\n  markers: IMarker[];\n}\n\nexport interface ILogCaptureInfo {\n  logKey: string;\n  stepKeys: string[];\n  pid?: string;\n}\n\nexport interface IRunMetadataDict {\n  firstLogAt: number;\n  mostRecentLogAt: number;\n  startingProcessAt?: number;\n  startedProcessAt?: number;\n  startedPipelineAt?: number;\n  exitedAt?: number;\n  processId?: number;\n  globalMarkers: IMarker[];\n  steps: {\n    [stepKey: string]: IStepMetadata;\n  };\n  logCaptureSteps?: {\n    [logKey: string]: ILogCaptureInfo;\n  };\n}\n\nexport const EMPTY_RUN_METADATA: IRunMetadataDict = {\n  firstLogAt: 0,\n  mostRecentLogAt: 0,\n  globalMarkers: [],\n  steps: {},\n};\n\nexport const extractLogCaptureStepsFromLegacySteps = (stepKeys: string[]) => {\n  const logCaptureSteps = {};\n  stepKeys.forEach(\n    (stepKey) => (logCaptureSteps[stepKey] = {logKey: stepKey, stepKeys: [stepKey]}),\n  );\n  return logCaptureSteps;\n};\n\nconst fromTimestamp = (ts: number | null) => (ts ? Math.floor(ts * 1000) : undefined);\nfunction extractMetadataFromRun(run?: RunFragment): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n  if (!run) {\n    return metadata;\n  }\n  if (run.startTime) {\n    metadata.startedPipelineAt = fromTimestamp(run.startTime);\n  }\n  if (run.endTime) {\n    metadata.exitedAt = fromTimestamp(run.endTime);\n  }\n\n  run.stepStats.forEach((stepStat) => {\n    metadata.steps[stepStat.stepKey] = {\n      // state:\n      // current state\n      state: stepStatusToStepState(stepStat.status),\n\n      // execution start and stop (user-code) inclusive of all retries\n      start: fromTimestamp(stepStat.startTime),\n      end: fromTimestamp(stepStat.endTime),\n\n      // current state + prev state transition times\n      transitions: [],\n\n      // transition times organized into start+stop+exit state pairs.\n      // This is the metadata used to render boxes on the realtime vi.z\n      attempts: stepStat.attempts.map(\n        (attempt, idx) =>\n          ({\n            start: fromTimestamp(attempt.startTime),\n            end: fromTimestamp(attempt.endTime),\n            exitState:\n              idx === stepStat.attempts.length - 1\n                ? stepStatusToStepState(stepStat.status)\n                : IStepState.RETRY_REQUESTED,\n          } as IStepAttempt),\n      ),\n\n      // accumulated metadata\n      markers: stepStat.markers.map((marker, idx) => ({\n        start: fromTimestamp(marker.startTime),\n        end: fromTimestamp(marker.endTime),\n        key: `marker_${idx}`,\n      })),\n    };\n  });\n\n  return metadata;\n}\n\nconst stepStatusToStepState = (status: StepEventStatus | null) => {\n  switch (status) {\n    case StepEventStatus.SUCCESS:\n      return IStepState.SUCCEEDED;\n    case StepEventStatus.FAILURE:\n      return IStepState.FAILED;\n    case StepEventStatus.SKIPPED:\n      return IStepState.SKIPPED;\n    default:\n      return IStepState.UNKNOWN;\n  }\n};\n\nexport function extractMetadataFromLogs(\n  logs: RunMetadataProviderMessageFragment[],\n): IRunMetadataDict {\n  const metadata: IRunMetadataDict = {\n    firstLogAt: 0,\n    mostRecentLogAt: 0,\n    globalMarkers: [],\n    steps: {},\n  };\n\n  // Returns the most recent marker with the given `key` without an end time\n  const upsertMarker = (set: IMarker[], key: string) => {\n    let marker = set.find((f) => f.key === key && !f.end);\n    if (!marker) {\n      marker = {key};\n      set.unshift(marker);\n    }\n    return marker;\n  };\n\n  const upsertState = (step: IStepMetadata, time: number, state: IStepState) => {\n    step.transitions.push({time, state});\n    step.state = state;\n    step.attempts = [];\n  };\n\n  logs.forEach((log) => {\n    const timestamp = Number.parseInt(log.timestamp, 10);\n\n    metadata.firstLogAt = metadata.firstLogAt\n      ? Math.min(metadata.firstLogAt, timestamp)\n      : timestamp;\n    metadata.mostRecentLogAt = Math.max(metadata.mostRecentLogAt, timestamp);\n\n    if (log.__typename === 'RunStartEvent') {\n      metadata.startedPipelineAt = timestamp;\n    }\n    if (\n      log.__typename === 'RunFailureEvent' ||\n      log.__typename === 'RunSuccessEvent' ||\n      log.__typename === 'RunCanceledEvent'\n    ) {\n      metadata.exitedAt = timestamp;\n      for (const step of Object.values(metadata.steps)) {\n        if (step.state === IStepState.RUNNING) {\n          upsertState(step, timestamp, IStepState.UNKNOWN);\n        }\n      }\n    }\n\n    if (\n      log.__typename === 'EngineEvent' ||\n      log.__typename === 'ResourceInitFailureEvent' ||\n      log.__typename === 'ResourceInitStartedEvent' ||\n      log.__typename === 'ResourceInitSuccessEvent' ||\n      log.__typename === 'StepWorkerStartedEvent' ||\n      log.__typename === 'StepWorkerStartingEvent'\n    ) {\n      if (log.markerStart) {\n        upsertMarker(metadata.globalMarkers, log.markerStart).start = timestamp;\n      }\n      if (log.markerEnd) {\n        upsertMarker(metadata.globalMarkers, log.markerEnd).end = timestamp;\n      }\n    }\n\n    if (log.__typename === 'LogsCapturedEvent') {\n      if (!metadata.logCaptureSteps) {\n        metadata.logCaptureSteps = {};\n      }\n      metadata.logCaptureSteps[log.logKey] = {\n        logKey: log.logKey,\n        stepKeys: log.stepKeys || [],\n        pid: String(log.pid),\n      };\n    }\n\n    if (log.stepKey) {\n      const stepKey = log.stepKey;\n      const step =\n        metadata.steps[stepKey] ||\n        ({\n          state: IStepState.PREPARING,\n          attempts: [],\n          transitions: [\n            {\n              state: IStepState.PREPARING,\n              time: timestamp,\n            },\n          ],\n          start: undefined,\n          end: undefined,\n          markers: [],\n        } as IStepMetadata);\n\n      if (log.__typename === 'ExecutionStepStartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n        step.start = timestamp;\n      } else if (log.__typename === 'ExecutionStepSuccessEvent') {\n        upsertState(step, timestamp, IStepState.SUCCEEDED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepSkippedEvent') {\n        upsertState(step, timestamp, IStepState.SKIPPED);\n      } else if (log.__typename === 'ExecutionStepFailureEvent') {\n        upsertState(step, timestamp, IStepState.FAILED);\n        step.end = Math.max(timestamp, step.end || 0);\n      } else if (log.__typename === 'ExecutionStepUpForRetryEvent') {\n        // We only get one event when the step fails/aborts and is queued for retry,\n        // but we create an \"exit\" state separate from the \"preparing for retry\" state\n        // so that the box representing the attempt doesn't have a final state = preparing.\n        // That'd be more confusing.\n        upsertState(step, timestamp, IStepState.RETRY_REQUESTED);\n        upsertState(step, timestamp + 1, IStepState.PREPARING);\n      } else if (log.__typename === 'ExecutionStepRestartEvent') {\n        upsertState(step, timestamp, IStepState.RUNNING);\n      } else if (log.__typename === 'ObjectStoreOperationEvent') {\n        // this indicates the step was skipped and its previous intermediates were copied\n        // so we will drop the step because we didn't execute it\n        if (log.operationResult.op === 'CP_OBJECT') {\n          return;\n        }\n      }\n\n      metadata.steps[stepKey] = step;\n    }\n  });\n\n  // Post processing\n\n  for (const step of Object.values(metadata.steps)) {\n    // Sort step transitions because logs may not arrive in order\n    step.transitions = step.transitions.sort((a, b) => a.time - b.time);\n\n    // Build step \"attempts\" from transitions\n    // - Each time we see a \"RUNNING\" step transition, we create a new attempt box unless one is open already.\n    // - Each time we see a final step transition, we set it as the end state of the current attempt.\n\n    let attempt: IStepAttempt | null = null;\n    for (const t of step.transitions) {\n      if ((!attempt || attempt.end) && t.state === IStepState.RUNNING) {\n        attempt = {start: t.time};\n        step.attempts.push(attempt);\n      }\n      if (attempt && BOX_EXIT_STATES.includes(t.state)) {\n        attempt.end = t.time;\n        attempt.exitState = t.state;\n      }\n    }\n  }\n  return metadata;\n}\n\ninterface IRunMetadataProviderProps {\n  logs: LogsProviderLogs;\n  children: (metadata: IRunMetadataDict) => React.ReactElement<any>;\n}\n\nexport const RunMetadataProvider: React.FC<IRunMetadataProviderProps> = ({logs, children}) => {\n  const run = React.useContext(RunContext);\n  const runMetadata = React.useMemo(() => extractMetadataFromRun(run), [run]);\n  const metadata = React.useMemo(\n    () => (logs.loading ? runMetadata : extractMetadataFromLogs(logs.allNodes)),\n    [logs, runMetadata],\n  );\n  return <>{children(metadata)}</>;\n};\n\nexport const RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT = gql`\n  fragment RunMetadataProviderMessageFragment on DagsterRunEvent {\n    __typename\n    ... on MessageEvent {\n      message\n      timestamp\n      stepKey\n    }\n    ... on MarkerEvent {\n      markerStart\n      markerEnd\n    }\n    ... on ObjectStoreOperationEvent {\n      operationResult {\n        op\n        metadataEntries {\n          ...MetadataEntryFragment\n        }\n      }\n    }\n    ... on LogsCapturedEvent {\n      logKey\n      stepKeys\n      pid\n    }\n  }\n  ${METADATA_ENTRY_FRAGMENT}\n`;\n","import {gql, useQuery} from '@apollo/client';\nimport {Box, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\n\nimport {RunStatsQuery, RunStatsQueryVariables} from './types/RunStatsQuery';\n\nexport const RunStats = ({runId}: {runId: string}) => {\n  const stats = useQuery<RunStatsQuery, RunStatsQueryVariables>(RUN_STATS_QUERY, {\n    variables: {runId},\n  });\n\n  if (stats.loading || !stats.data) {\n    return (\n      <RunStatsDetailsContainer>\n        <Box padding={24} flex={{justifyContent: 'center'}}>\n          <Spinner purpose=\"section\" />\n        </Box>\n      </RunStatsDetailsContainer>\n    );\n  }\n\n  const result = stats.data.pipelineRunOrError;\n\n  if (result.__typename !== 'Run') {\n    return <PythonErrorInfo error={result} />;\n  }\n  if (result.stats.__typename !== 'RunStatsSnapshot') {\n    return <PythonErrorInfo error={result.stats} />;\n  }\n\n  const runPath = `/instance/runs/${runId}`;\n  return (\n    <RunStatsDetailsContainer>\n      <Link\n        to={`${runPath}?logs=type:STEP_SUCCESS`}\n      >{`${result.stats.stepsSucceeded} steps succeeded`}</Link>\n      <Link to={`${runPath}?logs=type:STEP_FAILURE`}>\n        {`${result.stats.stepsFailed} steps failed`}\n      </Link>\n      <Link\n        to={`${runPath}?logs=type:ASSET_MATERIALIZATION`}\n      >{`${result.stats.materializations} materializations`}</Link>\n      <Link\n        to={`${runPath}?logs=type:STEP_EXPECTATION_RESULT`}\n      >{`${result.stats.expectations} expectations passed`}</Link>\n    </RunStatsDetailsContainer>\n  );\n};\n\nconst RUN_STATS_QUERY = gql`\n  query RunStatsQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      __typename\n      ...PythonErrorFragment\n      ... on RunNotFoundError {\n        message\n      }\n      ... on Run {\n        id\n        runId\n        pipelineName\n        stats {\n          ... on RunStatsSnapshot {\n            id\n            stepsSucceeded\n            stepsFailed\n            expectations\n            materializations\n          }\n          ...PythonErrorFragment\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunStatsDetailsContainer = styled.div`\n  min-width: 200px;\n  padding: 12px;\n  color: white;\n  font-size: 12px;\n  & > a {\n    display: block;\n  }\n`;\n","import {Colors, Popover, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled, {css, keyframes} from 'styled-components/macro';\n\nimport {RunStatus} from '../types/globalTypes';\n\nimport {RunStats} from './RunStats';\nimport {inProgressStatuses, queuedStatuses} from './RunStatuses';\n\nconst RUN_STATUS_COLORS = {\n  QUEUED: Colors.Blue200,\n  NOT_STARTED: Colors.Gray600,\n  STARTING: Colors.Gray400,\n  MANAGED: Colors.Gray400,\n  STARTED: Colors.Blue500,\n  SUCCESS: Colors.Green500,\n  FAILURE: Colors.Red500,\n  CANCELING: Colors.Red500,\n  CANCELED: Colors.Red500,\n\n  // Not technically a RunStatus, but useful.\n  SCHEDULED: Colors.Blue200,\n};\n\nexport const RunStatusWithStats: React.FC<RunStatusProps & {runId: string}> = React.memo(\n  ({runId, ...rest}) => (\n    <Popover\n      position=\"bottom\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n    >\n      <RunStatusIndicator {...rest} />\n    </Popover>\n  ),\n);\n\ninterface RunStatusProps {\n  status: RunStatus | 'SCHEDULED';\n  size?: number;\n}\n\nexport const RunStatusIndicator: React.FC<RunStatusProps> = React.memo(({status, size}) => {\n  if (status === 'STARTED') {\n    return <Spinner purpose=\"caption-text\" />;\n  }\n  if (status === 'SCHEDULED') {\n    return <RunStatusDot status={status} size={size || 12} />;\n  }\n  return (\n    <RunStatusDot\n      status={status}\n      size={size || 12}\n      pulse={inProgressStatuses.has(status) || queuedStatuses.has(status)}\n    />\n  );\n});\n\nconst pulseAnimation = keyframes`\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(0.7);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n`;\n\nexport const RunStatusDot = styled.div<{\n  status: RunStatus | 'SCHEDULED';\n  size: number;\n  pulse?: boolean;\n}>`\n  width: ${({size}) => size}px;\n  height: ${({size}) => size}px;\n  border-radius: ${({size}) => size / 2}px;\n  transition: filter 200ms linear;\n  ${({pulse}) =>\n    pulse\n      ? css`\n          animation: ${pulseAnimation} 2s infinite;\n        `\n      : null}\n\n  background: ${({status}) => RUN_STATUS_COLORS[status]};\n  &:hover {\n    animation: none;\n    filter: brightness(0.7);\n  }\n`;\n","import {Box, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {assertUnreachable} from '../app/Util';\nimport {RunStatus} from '../types/globalTypes';\n\nimport {RunStats} from './RunStats';\nimport {RunStatusIndicator} from './RunStatusDots';\n\nconst statusToIntent = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.MANAGED:\n    case RunStatus.CANCELING:\n      return 'none';\n    case RunStatus.SUCCESS:\n      return 'success';\n    case RunStatus.STARTING:\n      return 'none';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n      return 'danger';\n    case RunStatus.STARTED:\n      return 'primary';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nconst statusToString = (status: RunStatus) => {\n  switch (status) {\n    case RunStatus.QUEUED:\n      return 'Queued';\n    case RunStatus.SUCCESS:\n      return 'Success';\n    case RunStatus.STARTING:\n      return 'Starting';\n    case RunStatus.NOT_STARTED:\n      return 'Not started';\n    case RunStatus.FAILURE:\n      return 'Failure';\n    case RunStatus.STARTED:\n      return 'Started';\n    case RunStatus.MANAGED:\n      return 'Managed';\n    case RunStatus.CANCELING:\n      return 'Canceling';\n    case RunStatus.CANCELED:\n      return 'Canceled';\n    default:\n      return assertUnreachable(status);\n  }\n};\n\nexport const RunStatusTag = (props: {status: RunStatus}) => {\n  const {status} = props;\n  return (\n    <Tag intent={statusToIntent(status)}>\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n        <RunStatusIndicator status={status} size={10} />\n        <div>{statusToString(status)}</div>\n      </Box>\n    </Tag>\n  );\n};\n\ninterface Props {\n  runId: string;\n  status: RunStatus;\n}\n\nexport const RunStatusTagWithStats = (props: Props) => {\n  const {runId, status} = props;\n  return (\n    <Popover\n      position=\"bottom-left\"\n      interactionKind=\"hover\"\n      content={<RunStats runId={runId} />}\n      hoverOpenDelay={100}\n      usePortal\n    >\n      <RunStatusTag status={status} />\n    </Popover>\n  );\n};\n","import {RunStatus} from '../types/globalTypes';\n\nexport const queuedStatuses = new Set([RunStatus.QUEUED]);\n\nexport const inProgressStatuses = new Set([\n  RunStatus.STARTED,\n  RunStatus.STARTING,\n  RunStatus.CANCELING,\n]);\n\nexport const successStatuses = new Set([RunStatus.SUCCESS]);\nexport const failedStatuses = new Set([RunStatus.FAILURE, RunStatus.CANCELED]);\nexport const canceledStatuses = new Set([RunStatus.CANCELING, RunStatus.CANCELED]);\n\nexport const doneStatuses = new Set([RunStatus.FAILURE, RunStatus.SUCCESS, RunStatus.CANCELED]);\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {DELETE_MUTATION} from './RunUtils';\nimport {\n  Delete,\n  Delete_deletePipelineRun_RunNotFoundError,\n  Delete_deletePipelineRun_PythonError,\n  Delete_deletePipelineRun_UnauthorizedError,\n  DeleteVariables,\n} from './types/Delete';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n  onTerminateInstead: () => void;\n  selectedRuns: SelectedRuns;\n}\n\ntype SelectedRuns = {[id: string]: boolean};\n\ntype Error =\n  | Delete_deletePipelineRun_PythonError\n  | Delete_deletePipelineRun_UnauthorizedError\n  | Delete_deletePipelineRun_RunNotFoundError\n  | undefined;\n\ntype DeletionDialogState = {\n  step: 'initial' | 'deleting' | 'completed';\n  frozenRuns: SelectedRuns;\n  deletion: {completed: number; errors: {[id: string]: Error}};\n};\n\ntype DeletionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'deletion-success'}\n  | {type: 'deletion-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst initializeState = (frozenRuns: SelectedRuns): DeletionDialogState => {\n  return {\n    step: 'initial',\n    frozenRuns,\n    deletion: {completed: 0, errors: {}},\n  };\n};\n\nconst deletionDialogReducer = (\n  prevState: DeletionDialogState,\n  action: DeletionDialogAction,\n): DeletionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'deleting'};\n    case 'deletion-success': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {...deletion, completed: deletion.completed + 1},\n      };\n    }\n    case 'deletion-error': {\n      const {deletion} = prevState;\n      return {\n        ...prevState,\n        step: 'deleting',\n        deletion: {\n          ...deletion,\n          completed: deletion.completed + 1,\n          errors: {...deletion.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const DeletionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, onTerminateInstead, selectedRuns} = props;\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    deletionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const runIDs = Object.keys(state.frozenRuns);\n  const count = runIDs.length;\n  const terminatableCount = runIDs.filter((id) => state.frozenRuns[id]).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [destroy] = useMutation<Delete, DeleteVariables>(DELETE_MUTATION);\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await destroy({variables: {runId}});\n\n      if (data?.deletePipelineRun.__typename === 'DeletePipelineRunSuccess') {\n        dispatch({type: 'deletion-success'});\n      } else {\n        dispatch({type: 'deletion-error', id: runId, error: data?.deletePipelineRun});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete();\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{`${count} ${count === 1 ? 'run' : 'runs'} will be deleted.`}</div>\n            <div>\n              Deleting runs will not prevent them from continuing to execute, and may result in\n              unexpected behavior.\n            </div>\n            {terminatableCount ? (\n              <div>\n                {terminatableCount > 1 ? (\n                  <>\n                    {`${terminatableCount} of these runs can be terminated. `}\n                    <strong>\n                      Please consider terminating these runs instead of deleting them.\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    {`1 run can be terminated instead. `}\n                    <strong>Please consider terminating this run instead of deleting it.</strong>\n                  </>\n                )}\n              </div>\n            ) : null}\n            <div>Do you wish to continue with deletion?</div>\n          </Group>\n        );\n      case 'deleting':\n      case 'completed':\n        const value = count > 0 ? state.deletion.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>Deleting…</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'deleting' ? (\n              <NavigationBlock message=\"Deletion in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`Yes, delete ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n            {terminatableCount ? (\n              <Button intent=\"primary\" onClick={onTerminateInstead}>\n                {`Terminate ${`${terminatableCount} ${\n                  terminatableCount === 1 ? 'run' : 'runs'\n                }`} instead`}\n              </Button>\n            ) : null}\n          </>\n        );\n      case 'deleting':\n        return (\n          <Button intent=\"danger\" disabled>\n            Deleting…\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'deleting') {\n      return <div>Please do not close the window or navigate away during deletion.</div>;\n    }\n\n    const errors = state.deletion.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.deletion.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"center\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>{`Successfully deleted ${successCount} ${\n              successCount === 1 ? 'run' : 'runs'\n            }.`}</div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"center\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>{`Could not delete ${errorCount} ${errorCount === 1 ? 'run' : 'runs'}.`}</div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'deleting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Delete runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {Button, Colors, DialogBody, DialogFooter, Dialog, Group, Icon, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {ReexecutionStrategy} from '../types/globalTypes';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {LAUNCH_PIPELINE_REEXECUTION_MUTATION} from './RunUtils';\nimport {\n  LaunchPipelineReexecution,\n  LaunchPipelineReexecutionVariables,\n  LaunchPipelineReexecution_launchPipelineReexecution_InvalidStepError,\n  LaunchPipelineReexecution_launchPipelineReexecution_PipelineNotFoundError,\n  LaunchPipelineReexecution_launchPipelineReexecution_PythonError,\n  LaunchPipelineReexecution_launchPipelineReexecution_RunConfigValidationInvalid,\n  LaunchPipelineReexecution_launchPipelineReexecution_InvalidSubsetError,\n} from './types/LaunchPipelineReexecution';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (reexecutionState: ReexecutionState) => void;\n  selectedRuns: {[id: string]: string};\n  reexecutionStrategy: ReexecutionStrategy;\n}\n\ntype Error =\n  | LaunchPipelineReexecution_launchPipelineReexecution_InvalidStepError\n  | LaunchPipelineReexecution_launchPipelineReexecution_PipelineNotFoundError\n  | LaunchPipelineReexecution_launchPipelineReexecution_RunConfigValidationInvalid\n  | LaunchPipelineReexecution_launchPipelineReexecution_InvalidSubsetError\n  | LaunchPipelineReexecution_launchPipelineReexecution_PythonError\n  | undefined;\n\nconst errorText = (error: Error) => {\n  if (!error) {\n    return 'Unknown error';\n  }\n  switch (error.__typename) {\n    case 'ConflictingExecutionParamsError':\n      return 'Conflicting execution parameters';\n    case 'InvalidOutputError':\n      return 'Invalid output';\n    case 'InvalidStepError':\n      return 'Invalid step';\n    case 'NoModeProvidedError':\n      return 'No mode provided';\n    case 'PipelineNotFoundError':\n      return 'Job not found in workspace';\n    case 'PresetNotFoundError':\n      return 'Preset not found';\n    case 'PythonError':\n      return error.message;\n    case 'RunConfigValidationInvalid':\n      return 'Run config invalid';\n    case 'RunConflict':\n      return 'Run conflict';\n    case 'UnauthorizedError':\n      return 'Re-execution not authorized';\n    case 'InvalidSubsetError':\n      return 'Invalid op subset: ' + error.message;\n    default:\n      return 'Unknown error';\n  }\n};\n\nexport type ReexecutionState = {completed: number; errors: {[id: string]: Error}};\n\ntype ReexecutionDialogState = {\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'reexecuting' | 'completed';\n  reexecution: ReexecutionState;\n};\n\ntype SelectedRuns = {[id: string]: string};\n\nconst initializeState = (selectedRuns: SelectedRuns): ReexecutionDialogState => {\n  return {\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    reexecution: {completed: 0, errors: {}},\n  };\n};\n\ntype ReexecutionDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'start'}\n  | {type: 'reexecution-success'}\n  | {type: 'reexecution-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst reexecutionDialogReducer = (\n  prevState: ReexecutionDialogState,\n  action: ReexecutionDialogAction,\n): ReexecutionDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'start':\n      return {...prevState, step: 'reexecuting'};\n    case 'reexecution-success': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {...reexecution, completed: reexecution.completed + 1},\n      };\n    }\n    case 'reexecution-error': {\n      const {reexecution} = prevState;\n      return {\n        ...prevState,\n        step: 'reexecuting',\n        reexecution: {\n          ...reexecution,\n          completed: reexecution.completed + 1,\n          errors: {...reexecution.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const ReexecutionDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, reexecutionStrategy, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // re-executing. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    reexecutionDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [reexecute] = useMutation<LaunchPipelineReexecution, LaunchPipelineReexecutionVariables>(\n    LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  );\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await reexecute({\n        variables: {\n          reexecutionParams: {\n            parentRunId: runId,\n            strategy: reexecutionStrategy,\n          },\n        },\n      });\n\n      if (data?.launchPipelineReexecution.__typename === 'LaunchRunSuccess') {\n        dispatch({type: 'reexecution-success'});\n      } else {\n        dispatch({type: 'reexecution-error', id: runId, error: data?.launchPipelineReexecution});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.reexecution);\n  };\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for re-execution.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        const message = () => {\n          if (reexecutionStrategy === ReexecutionStrategy.ALL_STEPS) {\n            return (\n              <span>\n                {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n                <strong>with all steps</strong>. Do you wish to continue?\n              </span>\n            );\n          }\n          return (\n            <span>\n              {`${count} ${count === 1 ? 'run' : 'runs'} will be re-executed `}\n              <strong>from failure</strong>. Do you wish to continue?\n            </span>\n          );\n        };\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>{message()}</div>\n          </Group>\n        );\n      case 'reexecuting':\n      case 'completed':\n        const value = count > 0 ? state.reexecution.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'reexecuting' ? (\n              <NavigationBlock message=\"Re-execution in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"primary\" onClick={mutate}>\n              {`Re-execute ${`${count} ${count === 1 ? 'run' : 'runs'}`}`}\n            </Button>\n          </>\n        );\n      case 'reexecuting':\n        return (\n          <Button intent=\"primary\" disabled>\n            {`Re-executing ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'reexecuting') {\n      return <div>Please do not close the window or navigate away during re-execution.</div>;\n    }\n\n    const errors = state.reexecution.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.reexecution.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {`Successfully requested re-execution for ${successCount} ${\n                successCount === 1 ? 'run' : `runs`\n              }.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {`Could not request re-execution for ${errorCount} ${\n                  errorCount === 1 ? 'run' : 'runs'\n                }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8} alignItems=\"baseline\">\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errorText(errors[runId])}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'reexecuting';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title={\n        reexecutionStrategy === ReexecutionStrategy.ALL_STEPS\n          ? 'Re-execute runs'\n          : 'Re-execute runs from failure'\n      }\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {gql, useLazyQuery, useMutation} from '@apollo/client';\nimport {\n  Button,\n  Icon,\n  MenuDivider,\n  MenuExternalLink,\n  MenuItem,\n  Menu,\n  Popover,\n  Tooltip,\n  DialogFooter,\n  Dialog,\n  StyledReadOnlyCodeMirror,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {AppContext} from '../app/AppContext';\nimport {SharedToaster} from '../app/DomUtils';\nimport {usePermissions} from '../app/Permissions';\nimport {useCopyToClipboard} from '../app/browser';\nimport {ReexecutionStrategy} from '../types/globalTypes';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob} from '../workspace/WorkspaceContext';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\nimport {workspacePathFromRunDetails} from '../workspace/workspacePath';\n\nimport {DeletionDialog} from './DeletionDialog';\nimport {ReexecutionDialog} from './ReexecutionDialog';\nimport {RUN_FRAGMENT_FOR_REPOSITORY_MATCH} from './RunFragments';\nimport {doneStatuses, failedStatuses} from './RunStatuses';\nimport {\n  LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n  RunsQueryRefetchContext,\n  getReexecutionVariables,\n  handleLaunchResult,\n} from './RunUtils';\nimport {TerminationDialog} from './TerminationDialog';\nimport {\n  LaunchPipelineReexecution,\n  LaunchPipelineReexecutionVariables,\n} from './types/LaunchPipelineReexecution';\nimport {\n  PipelineEnvironmentYamlQuery,\n  PipelineEnvironmentYamlQueryVariables,\n} from './types/PipelineEnvironmentYamlQuery';\nimport {RunTableRunFragment} from './types/RunTableRunFragment';\n\nexport const RunActionsMenu: React.FC<{\n  run: RunTableRunFragment;\n}> = React.memo(({run}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'config'\n  >('none');\n\n  const {rootServerURI} = React.useContext(AppContext);\n  const {canTerminatePipelineExecution, canDeletePipelineRun} = usePermissions();\n  const history = useHistory();\n\n  const copyConfig = useCopyToClipboard();\n\n  const [reexecute] = useMutation<LaunchPipelineReexecution, LaunchPipelineReexecutionVariables>(\n    LAUNCH_PIPELINE_REEXECUTION_MUTATION,\n    {\n      onCompleted: refetch,\n    },\n  );\n\n  const [loadEnv, {called, loading, data}] = useLazyQuery<\n    PipelineEnvironmentYamlQuery,\n    PipelineEnvironmentYamlQueryVariables\n  >(PIPELINE_ENVIRONMENT_YAML_QUERY, {\n    variables: {runId: run.runId},\n  });\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    refetch();\n  };\n\n  const pipelineRun =\n    data?.pipelineRunOrError?.__typename === 'Run' ? data?.pipelineRunOrError : null;\n  const runConfigYaml = pipelineRun?.runConfigYaml;\n\n  const repoMatch = useRepositoryForRun(pipelineRun);\n  const isFinished = doneStatuses.has(run.status);\n  const isJob = !!(repoMatch && isThisThingAJob(repoMatch?.match, run.pipelineName));\n\n  const infoReady = called ? !loading : false;\n  return (\n    <>\n      <Popover\n        content={\n          <Menu>\n            <MenuItem\n              text={loading ? 'Loading Configuration...' : 'View Configuration...'}\n              disabled={!runConfigYaml}\n              icon=\"open_in_new\"\n              onClick={() => setVisibleDialog('config')}\n            />\n            <MenuDivider />\n            <>\n              <Tooltip\n                content={OPEN_LAUNCHPAD_UNKNOWN}\n                position=\"bottom\"\n                disabled={infoReady}\n                targetTagName=\"div\"\n              >\n                <MenuLink\n                  text=\"Open in Launchpad...\"\n                  disabled={!infoReady}\n                  icon=\"edit\"\n                  to={workspacePathFromRunDetails({\n                    id: run.id,\n                    pipelineName: run.pipelineName,\n                    repositoryName: repoMatch?.match.repository.name,\n                    repositoryLocationName: repoMatch?.match.repositoryLocation.name,\n                    isJob,\n                  })}\n                />\n              </Tooltip>\n              <Tooltip\n                content=\"Re-execute is unavailable because the pipeline is not present in the current workspace.\"\n                position=\"bottom\"\n                disabled={infoReady && !!repoMatch}\n                targetTagName=\"div\"\n              >\n                <MenuItem\n                  text=\"Re-execute\"\n                  disabled={!infoReady || !repoMatch}\n                  icon=\"refresh\"\n                  onClick={async () => {\n                    if (repoMatch && runConfigYaml) {\n                      const result = await reexecute({\n                        variables: getReexecutionVariables({\n                          run: {...run, runConfigYaml},\n                          style: {type: 'all'},\n                          repositoryLocationName: repoMatch.match.repositoryLocation.name,\n                          repositoryName: repoMatch.match.repository.name,\n                        }),\n                      });\n                      handleLaunchResult(run.pipelineName, result, history, {\n                        behavior: 'open',\n                      });\n                    }\n                  }}\n                />\n              </Tooltip>\n              {isFinished || !canTerminatePipelineExecution ? null : (\n                <MenuItem\n                  icon=\"cancel\"\n                  text=\"Terminate\"\n                  onClick={() => setVisibleDialog('terminate')}\n                />\n              )}\n              <MenuDivider />\n            </>\n            <MenuExternalLink\n              text=\"Download Debug File\"\n              icon=\"download_for_offline\"\n              download\n              href={`${rootServerURI}/download_debug/${run.runId}`}\n            />\n            {canDeletePipelineRun ? (\n              <MenuItem\n                icon=\"delete\"\n                text=\"Delete\"\n                intent=\"danger\"\n                onClick={() => setVisibleDialog('delete')}\n              />\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n        onOpening={() => {\n          if (!called) {\n            loadEnv();\n          }\n        }}\n      >\n        <Button icon={<Icon name=\"expand_more\" />} />\n      </Popover>\n      {canTerminatePipelineExecution ? (\n        <TerminationDialog\n          isOpen={visibleDialog === 'terminate'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      {canDeletePipelineRun ? (\n        <DeletionDialog\n          isOpen={visibleDialog === 'delete'}\n          onClose={closeDialogs}\n          onComplete={onComplete}\n          onTerminateInstead={() => setVisibleDialog('terminate')}\n          selectedRuns={{[run.id]: run.canTerminate}}\n        />\n      ) : null}\n      <Dialog\n        isOpen={visibleDialog === 'config'}\n        title=\"Config\"\n        canOutsideClickClose\n        canEscapeKeyClose\n        onClose={closeDialogs}\n      >\n        <StyledReadOnlyCodeMirror\n          value={runConfigYaml || ''}\n          options={{lineNumbers: true, mode: 'yaml'}}\n        />\n        <DialogFooter topBorder>\n          <Button\n            intent=\"none\"\n            onClick={() => {\n              copyConfig(runConfigYaml || '');\n              SharedToaster.show({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n          <Button intent=\"primary\" onClick={closeDialogs}>\n            OK\n          </Button>\n        </DialogFooter>\n      </Dialog>\n    </>\n  );\n});\n\nexport const RunBulkActionsMenu: React.FC<{\n  selected: RunTableRunFragment[];\n  clearSelection: () => void;\n}> = React.memo(({selected, clearSelection}) => {\n  const {refetch} = React.useContext(RunsQueryRefetchContext);\n  const {\n    canTerminatePipelineExecution,\n    canDeletePipelineRun,\n    canLaunchPipelineReexecution,\n  } = usePermissions();\n  const [visibleDialog, setVisibleDialog] = React.useState<\n    'none' | 'terminate' | 'delete' | 'reexecute-from-failure' | 'reexecute'\n  >('none');\n\n  if (!canTerminatePipelineExecution && !canDeletePipelineRun) {\n    return null;\n  }\n\n  const unfinishedRuns = selected.filter((r) => !doneStatuses.has(r?.status));\n  const unfinishedIDs = unfinishedRuns.map((r) => r.id);\n  const unfinishedMap = unfinishedRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.canTerminate}),\n    {},\n  );\n\n  const selectedIDs = selected.map((run) => run.runId);\n  const deletionMap = selected.reduce((accum, run) => ({...accum, [run.id]: run.canTerminate}), {});\n\n  const failedRuns = selected.filter((r) => failedStatuses.has(r?.status));\n  const failedMap = failedRuns.reduce((accum, run) => ({...accum, [run.id]: run.id}), {});\n\n  const reexecutableRuns = selected.filter((r) => doneStatuses.has(r?.status));\n  const reexecutableMap = reexecutableRuns.reduce(\n    (accum, run) => ({...accum, [run.id]: run.id}),\n    {},\n  );\n\n  const closeDialogs = () => {\n    setVisibleDialog('none');\n  };\n\n  const onComplete = () => {\n    clearSelection();\n    refetch();\n  };\n\n  return (\n    <>\n      <Popover\n        content={\n          <Menu>\n            {canTerminatePipelineExecution ? (\n              <MenuItem\n                icon=\"cancel\"\n                text={`Terminate ${unfinishedIDs.length} ${\n                  unfinishedIDs.length === 1 ? 'run' : 'runs'\n                }`}\n                disabled={unfinishedIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('terminate');\n                }}\n              />\n            ) : null}\n            {canDeletePipelineRun ? (\n              <MenuItem\n                icon=\"delete\"\n                intent=\"danger\"\n                text={`Delete ${selectedIDs.length} ${selectedIDs.length === 1 ? 'run' : 'runs'}`}\n                disabled={selectedIDs.length === 0}\n                onClick={() => {\n                  setVisibleDialog('delete');\n                }}\n              />\n            ) : null}\n            {canLaunchPipelineReexecution ? (\n              <>\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${reexecutableRuns.length} ${\n                    reexecutableRuns.length === 1 ? 'run' : 'runs'\n                  }`}\n                  disabled={reexecutableRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute');\n                  }}\n                />\n                <MenuItem\n                  icon=\"refresh\"\n                  text={`Re-execute ${failedRuns.length} ${\n                    failedRuns.length === 1 ? 'run' : 'runs'\n                  } from failure`}\n                  disabled={failedRuns.length === 0}\n                  onClick={() => {\n                    setVisibleDialog('reexecute-from-failure');\n                  }}\n                />\n              </>\n            ) : null}\n          </Menu>\n        }\n        position=\"bottom-right\"\n      >\n        <Button disabled={selected.length === 0} rightIcon={<Icon name=\"expand_more\" />}>\n          Actions\n        </Button>\n      </Popover>\n      <TerminationDialog\n        isOpen={visibleDialog === 'terminate'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={unfinishedMap}\n      />\n      <DeletionDialog\n        isOpen={visibleDialog === 'delete'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        onTerminateInstead={() => setVisibleDialog('terminate')}\n        selectedRuns={deletionMap}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute-from-failure'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={failedMap}\n        reexecutionStrategy={ReexecutionStrategy.FROM_FAILURE}\n      />\n      <ReexecutionDialog\n        isOpen={visibleDialog === 'reexecute'}\n        onClose={closeDialogs}\n        onComplete={onComplete}\n        selectedRuns={reexecutableMap}\n        reexecutionStrategy={ReexecutionStrategy.ALL_STEPS}\n      />\n    </>\n  );\n});\n\nconst OPEN_LAUNCHPAD_UNKNOWN =\n  'Launchpad is unavailable because the pipeline is not present in the current repository.';\n\n// Avoid fetching envYaml on load in Runs page. It is slow.\nconst PIPELINE_ENVIRONMENT_YAML_QUERY = gql`\n  query PipelineEnvironmentYamlQuery($runId: ID!) {\n    pipelineRunOrError(runId: $runId) {\n      ... on Run {\n        id\n        pipelineName\n        pipelineSnapshotId\n        runConfigYaml\n        ...RunFragmentForRepositoryMatch\n      }\n    }\n  }\n  ${RUN_FRAGMENT_FOR_REPOSITORY_MATCH}\n`;\n","import {gql} from '@apollo/client';\nimport {Box, Checkbox, Colors, Icon, NonIdealState, Table, Mono} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {usePermissions} from '../app/Permissions';\nimport {isHiddenAssetGroupJob} from '../asset-graph/Utils';\nimport {useSelectionReducer} from '../hooks/useSelectionReducer';\nimport {PipelineSnapshotLink} from '../pipelines/PipelinePathUtils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunsFilter} from '../types/globalTypes';\nimport {\n  findRepositoryAmongOptions,\n  isThisThingAJob,\n  useRepositoryOptions,\n} from '../workspace/WorkspaceContext';\nimport {buildRepoAddress} from '../workspace/buildRepoAddress';\nimport {useRepositoryForRun} from '../workspace/useRepositoryForRun';\nimport {workspacePipelinePath, workspacePipelinePathGuessRepo} from '../workspace/workspacePath';\n\nimport {RunActionsMenu, RunBulkActionsMenu} from './RunActionsMenu';\nimport {RunAssetKeyTags} from './RunAssetKeyTags';\nimport {RunStatusTagWithStats} from './RunStatusTag';\nimport {RunTags} from './RunTags';\nimport {\n  assetKeysForRun,\n  RunStateSummary,\n  RunTime,\n  RUN_TIME_FRAGMENT,\n  titleForRun,\n} from './RunUtils';\nimport {RunFilterToken} from './RunsFilterInput';\nimport {RunTableRunFragment} from './types/RunTableRunFragment';\n\ninterface RunTableProps {\n  runs: RunTableRunFragment[];\n  filter?: RunsFilter;\n  onAddTag?: (token: RunFilterToken) => void;\n  nonIdealState?: React.ReactNode;\n  actionBarComponents?: React.ReactNode;\n  highlightedIds?: string[];\n  additionalColumnHeaders?: React.ReactNode[];\n  additionalColumnsForRow?: (run: RunTableRunFragment) => React.ReactNode[];\n}\n\nexport const RunTable = (props: RunTableProps) => {\n  const {runs, filter, onAddTag, nonIdealState, highlightedIds, actionBarComponents} = props;\n  const allIds = runs.map((r) => r.runId);\n\n  const [{checkedIds}, {onToggleFactory, onToggleAll}] = useSelectionReducer(allIds);\n\n  const {canTerminatePipelineExecution, canDeletePipelineRun} = usePermissions();\n  const canTerminateOrDelete = canTerminatePipelineExecution || canDeletePipelineRun;\n\n  const {options} = useRepositoryOptions();\n\n  if (runs.length === 0) {\n    const anyFilter = Object.keys(filter || {}).length;\n    return (\n      <div>\n        {actionBarComponents ? (\n          <Box padding={{vertical: 8, left: 24, right: 12}}>{actionBarComponents}</Box>\n        ) : null}\n        <Box margin={{vertical: 32}}>\n          {nonIdealState || (\n            <NonIdealState\n              icon=\"run\"\n              title={anyFilter ? 'No matching runs' : 'No runs to display'}\n              description={\n                anyFilter\n                  ? 'No runs were found for this filter.'\n                  : 'Use the Launchpad to launch a run.'\n              }\n            />\n          )}\n        </Box>\n      </div>\n    );\n  }\n\n  let anyPipelines = false;\n  for (const run of runs) {\n    const {repositoryOrigin} = run;\n    if (repositoryOrigin) {\n      const repoAddress = buildRepoAddress(\n        repositoryOrigin.repositoryName,\n        repositoryOrigin.repositoryLocationName,\n      );\n      const repo = findRepositoryAmongOptions(options, repoAddress);\n      if (!repo || !isThisThingAJob(repo, run.pipelineName)) {\n        anyPipelines = true;\n        break;\n      }\n    }\n  }\n\n  const selectedFragments = runs.filter((run) => checkedIds.has(run.runId));\n\n  return (\n    <>\n      <Box flex={{alignItems: 'center', gap: 12}} padding={{vertical: 8, left: 24, right: 12}}>\n        {actionBarComponents}\n        <div style={{flex: 1}} />\n        <RunBulkActionsMenu\n          selected={selectedFragments}\n          clearSelection={() => onToggleAll(false)}\n        />\n      </Box>\n\n      <Table>\n        <thead>\n          <tr>\n            <th style={{width: 42, paddingTop: 0, paddingBottom: 0}}>\n              {canTerminateOrDelete ? (\n                <Checkbox\n                  indeterminate={checkedIds.size > 0 && checkedIds.size !== runs.length}\n                  checked={checkedIds.size === runs.length}\n                  onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                    if (e.target instanceof HTMLInputElement) {\n                      onToggleAll(e.target.checked);\n                    }\n                  }}\n                />\n              ) : null}\n            </th>\n            <th style={{width: 120}}>Status</th>\n            <th style={{width: 90}}>Run ID</th>\n            <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n            <th style={{width: 90}}>Snapshot ID</th>\n            <th style={{width: 190}}>Timing</th>\n            {props.additionalColumnHeaders}\n            <th style={{width: 52}} />\n          </tr>\n        </thead>\n        <tbody>\n          {runs.map((run) => (\n            <RunRow\n              canTerminateOrDelete={canTerminateOrDelete}\n              run={run}\n              key={run.runId}\n              onAddTag={onAddTag}\n              checked={checkedIds.has(run.runId)}\n              additionalColumns={props.additionalColumnsForRow?.(run)}\n              onToggleChecked={onToggleFactory(run.runId)}\n              isHighlighted={highlightedIds && highlightedIds.includes(run.runId)}\n            />\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport const RUN_TABLE_RUN_FRAGMENT = gql`\n  fragment RunTableRunFragment on Run {\n    id\n    runId\n    status\n    stepKeysToExecute\n    canTerminate\n    mode\n    rootRunId\n    parentRunId\n    pipelineSnapshotId\n    pipelineName\n    repositoryOrigin {\n      id\n      repositoryName\n      repositoryLocationName\n    }\n    solidSelection\n    assetSelection {\n      ... on AssetKey {\n        path\n      }\n    }\n    status\n    tags {\n      key\n      value\n    }\n    ...RunTimeFragment\n  }\n\n  ${RUN_TIME_FRAGMENT}\n`;\n\nconst RunRow: React.FC<{\n  run: RunTableRunFragment;\n  canTerminateOrDelete: boolean;\n  onAddTag?: (token: RunFilterToken) => void;\n  checked?: boolean;\n  onToggleChecked?: (values: {checked: boolean; shiftKey: boolean}) => void;\n  additionalColumns?: React.ReactNode[];\n  isHighlighted?: boolean;\n}> = ({\n  run,\n  canTerminateOrDelete,\n  onAddTag,\n  checked,\n  onToggleChecked,\n  additionalColumns,\n  isHighlighted,\n}) => {\n  const {pipelineName} = run;\n  const repo = useRepositoryForRun(run);\n\n  const isJob = React.useMemo(() => {\n    if (repo) {\n      const pipelinesAndJobs = repo.match.repository.pipelines;\n      const match = pipelinesAndJobs.find((pipelineOrJob) => pipelineOrJob.name === pipelineName);\n      return !!match?.isJob;\n    }\n    return false;\n  }, [repo, pipelineName]);\n\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\n    if (e.target instanceof HTMLInputElement) {\n      const {checked} = e.target;\n      const shiftKey =\n        e.nativeEvent instanceof MouseEvent && e.nativeEvent.getModifierState('Shift');\n      onToggleChecked && onToggleChecked({checked, shiftKey});\n    }\n  };\n\n  return (\n    <Row key={run.runId} highlighted={!!isHighlighted}>\n      <td>\n        {canTerminateOrDelete && onToggleChecked ? (\n          <Checkbox checked={!!checked} onChange={onChange} />\n        ) : null}\n      </td>\n      <td>\n        <RunStatusTagWithStats status={run.status} runId={run.runId} />\n      </td>\n      <td>\n        <Link to={`/instance/runs/${run.runId}`}>\n          <Mono>{titleForRun(run)}</Mono>\n        </Link>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 5}}>\n          {isHiddenAssetGroupJob(run.pipelineName) ? (\n            <RunAssetKeyTags assetKeys={assetKeysForRun(run)} />\n          ) : (\n            <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n              <PipelineReference\n                isJob={isJob}\n                showIcon\n                pipelineName={run.pipelineName}\n                pipelineHrefContext=\"no-link\"\n              />\n              <Link\n                to={\n                  repo\n                    ? workspacePipelinePath({\n                        repoName: repo.match.repository.name,\n                        repoLocation: repo.match.repositoryLocation.name,\n                        pipelineName: run.pipelineName,\n                        isJob,\n                      })\n                    : workspacePipelinePathGuessRepo(run.pipelineName)\n                }\n              >\n                <Icon name=\"open_in_new\" color={Colors.Blue500} />\n              </Link>\n            </Box>\n          )}\n          <RunTags\n            tags={run.tags}\n            mode={isJob ? (run.mode !== 'default' ? run.mode : null) : run.mode}\n            onAddTag={onAddTag}\n          />\n        </Box>\n      </td>\n      <td>\n        <PipelineSnapshotLink\n          snapshotId={run.pipelineSnapshotId || ''}\n          pipelineName={run.pipelineName}\n          size=\"normal\"\n        />\n      </td>\n      <td>\n        <RunTime run={run} />\n        <RunStateSummary run={run} />\n      </td>\n      {additionalColumns}\n      <td>\n        <RunActionsMenu run={run} />\n      </td>\n    </Row>\n  );\n};\n\nconst Row = styled.tr<{highlighted: boolean}>`\n  ${({highlighted}) =>\n    highlighted ? `box-shadow: inset 3px 3px #bfccd6, inset -3px -3px #bfccd6;` : null}\n`;\n","import {Box, Caption, Colors, Popover, Tag} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nexport enum DagsterTag {\n  Namespace = 'dagster/',\n  Backfill = 'dagster/backfill',\n  SolidSelection = 'dagster/solid_selection',\n  StepSelection = 'dagster/step_selection',\n  PartitionSet = 'dagster/partition_set',\n  Partition = 'dagster/partition',\n  IsResumeRetry = 'dagster/is_resume_retry',\n  PresetName = 'dagster/preset_name',\n  ParentRunId = 'dagster/parent_run_id',\n  RootRunId = 'dagster/root_run_id',\n  ScheduleName = 'dagster/schedule_name',\n  SensorName = 'dagster/sensor_name',\n}\n\nexport type TagType = {\n  key: string;\n  value: string;\n};\n\ntype TagAction = {\n  label: React.ReactNode;\n  onClick: (tag: TagType) => void;\n};\n\ninterface IRunTagProps {\n  tag: TagType;\n  actions?: TagAction[];\n}\n\nexport const RunTag = ({tag, actions}: IRunTagProps) => {\n  const {key, value} = tag;\n  const isDagsterTag = key.startsWith(DagsterTag.Namespace);\n\n  const displayedKey = React.useMemo(() => {\n    if (isDagsterTag) {\n      switch (key) {\n        case DagsterTag.Backfill:\n          return 'Backfill';\n        case DagsterTag.ScheduleName:\n        case DagsterTag.SensorName:\n          return null;\n        default:\n          return key.slice(DagsterTag.Namespace.length);\n      }\n    }\n    return key;\n  }, [isDagsterTag, key]);\n\n  const icon = React.useMemo(() => {\n    switch (key) {\n      case DagsterTag.ScheduleName:\n        return 'schedule';\n      case DagsterTag.SensorName:\n        return 'sensors';\n      case DagsterTag.Backfill:\n        return 'settings_backup_restore';\n      default:\n        return null;\n    }\n  }, [key]);\n\n  const tagElement = (\n    <Tag intent={isDagsterTag ? 'none' : 'primary'} interactive icon={icon || undefined}>\n      {displayedKey ? `${displayedKey}: ${value}` : value}\n    </Tag>\n  );\n\n  if (actions?.length) {\n    return (\n      <Popover\n        content={<TagActions actions={actions} tag={tag} />}\n        hoverOpenDelay={100}\n        hoverCloseDelay={100}\n        placement=\"top\"\n        interactionKind=\"hover\"\n      >\n        {tagElement}\n      </Popover>\n    );\n  }\n\n  return tagElement;\n};\n\nconst TagActions = ({tag, actions}: {tag: TagType; actions: TagAction[]}) => (\n  <ActionContainer background={Colors.Gray900} flex={{direction: 'row'}}>\n    {actions.map(({label, onClick}, ii) => (\n      <TagButton key={ii} onClick={() => onClick(tag)}>\n        <Caption>{label}</Caption>\n      </TagButton>\n    ))}\n  </ActionContainer>\n);\n\nconst ActionContainer = styled(Box)`\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nconst TagButton = styled.button`\n  border: none;\n  background: ${Colors.Dark};\n  color: ${Colors.Gray100};\n  cursor: pointer;\n  padding: 8px 12px;\n  text-align: left;\n\n  :not(:last-child) {\n    box-shadow: -1px 0 0 inset ${Colors.Gray600};\n  }\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    background-color: ${Colors.Gray800};\n    color: ${Colors.White};\n  }\n`;\n","import {Box} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {useCopyToClipboard} from '../app/browser';\nimport {__ASSET_JOB_PREFIX} from '../asset-graph/Utils';\n\nimport {DagsterTag, RunTag, TagType} from './RunTag';\nimport {RunFilterToken} from './RunsFilterInput';\n\n// Sort these tags to the start of the list.\nexport const priorityTagSet = new Set([\n  DagsterTag.ScheduleName as string,\n  DagsterTag.SensorName as string,\n  DagsterTag.Backfill as string,\n]);\n\nexport const RunTags: React.FC<{\n  tags: TagType[];\n  mode: string | null;\n  onAddTag?: (token: RunFilterToken) => void;\n}> = React.memo(({tags, onAddTag, mode}) => {\n  const copy = useCopyToClipboard();\n\n  const actions = React.useMemo(() => {\n    const list = [\n      {\n        label: 'Copy tag',\n        onClick: (tag: TagType) => {\n          copy(`${tag.key}:${tag.value}`);\n          SharedToaster.show({intent: 'success', message: 'Copied tag!'});\n        },\n      },\n    ];\n\n    if (onAddTag) {\n      list.push({\n        label: 'Add tag to filter',\n        onClick: (tag: TagType) => {\n          onAddTag({token: 'tag', value: `${tag.key}=${tag.value}`});\n        },\n      });\n    }\n\n    return list;\n  }, [copy, onAddTag]);\n\n  const displayedTags = React.useMemo(() => {\n    const priority = [];\n    const others = [];\n    for (const tag of tags) {\n      if (\n        tag.value.startsWith(__ASSET_JOB_PREFIX) &&\n        (tag.key === DagsterTag.PartitionSet || tag.key === DagsterTag.StepSelection)\n      ) {\n        continue;\n      } else if (priorityTagSet.has(tag.key)) {\n        priority.push(tag);\n      } else {\n        others.push(tag);\n      }\n    }\n    return [...priority, ...others];\n  }, [tags]);\n\n  if (!tags.length) {\n    return null;\n  }\n\n  return (\n    <Box flex={{direction: 'row', wrap: 'wrap', gap: 4}}>\n      {mode ? <RunTag tag={{key: 'mode', value: mode}} /> : null}\n      {displayedTags.map((tag, idx) => (\n        <RunTag tag={tag} key={idx} actions={actions} />\n      ))}\n    </Box>\n  );\n});\n","import {gql} from '@apollo/client';\nimport {History} from 'history';\nimport qs from 'qs';\nimport * as React from 'react';\n\nimport {Mono} from '../../../ui/src';\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {SharedToaster} from '../app/DomUtils';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {Timestamp} from '../app/time/Timestamp';\nimport {AssetKey} from '../assets/types';\nimport {ExecutionParams, RunStatus} from '../types/globalTypes';\n\nimport {DagsterTag} from './RunTag';\nimport {StepSelection} from './StepSelection';\nimport {TimeElapsed} from './TimeElapsed';\nimport {LaunchPipelineExecution} from './types/LaunchPipelineExecution';\nimport {LaunchPipelineReexecution} from './types/LaunchPipelineReexecution';\nimport {RunFragment} from './types/RunFragment';\nimport {RunTableRunFragment} from './types/RunTableRunFragment';\nimport {RunTimeFragment} from './types/RunTimeFragment';\n\nexport function titleForRun(run: {runId: string}) {\n  return run.runId.split('-').shift();\n}\n\nexport function assetKeysForRun(run: {\n  assetSelection: {path: string[]}[] | null;\n  stepKeysToExecute: string[] | null;\n}): AssetKey[] {\n  // Note: The fallback logic here is only necessary for Dagit <0.15.0 and should be removed\n  // soon, because stepKeysToExecute and asset keys do not map 1:1 for multi-component asset\n  // paths.\n  return run.assetSelection || run.stepKeysToExecute?.map((s) => ({path: [s]})) || [];\n}\n\nexport function linkToRunEvent(\n  run: {runId: string},\n  event: {timestamp?: string; stepKey: string | null},\n) {\n  return `/instance/runs/${run.runId}?${qs.stringify({\n    focusedTime: event.timestamp ? Number(event.timestamp) : undefined,\n    selection: event.stepKey,\n    logs: `step:${event.stepKey}`,\n  })}`;\n}\n\nexport const RunsQueryRefetchContext = React.createContext<{\n  refetch: () => void;\n}>({refetch: () => {}});\n\nexport function useDidLaunchEvent(cb: () => void, delay = 1500) {\n  React.useEffect(() => {\n    const handler = () => {\n      setTimeout(cb, delay);\n    };\n    document.addEventListener('run-launched', handler);\n    return () => {\n      document.removeEventListener('run-launched', handler);\n    };\n  }, [cb, delay]);\n}\n\nexport type LaunchBehavior = 'open' | 'open-in-new-tab' | 'toast';\n\nexport function handleLaunchResult(\n  pipelineName: string,\n  result: void | {data?: LaunchPipelineExecution | LaunchPipelineReexecution | null},\n  history: History<unknown>,\n  options: {behavior: LaunchBehavior; preserveQuerystring?: boolean},\n) {\n  const obj =\n    result && result.data && 'launchPipelineExecution' in result.data\n      ? result.data.launchPipelineExecution\n      : result && result.data && 'launchPipelineReexecution' in result.data\n      ? result.data.launchPipelineReexecution\n      : null;\n\n  if (!obj) {\n    showCustomAlert({body: `No data was returned. Did Dagit crash?`});\n    return;\n  }\n\n  if (obj.__typename === 'LaunchRunSuccess') {\n    const pathname = `/instance/runs/${obj.run.runId}`;\n    const search = options.preserveQuerystring ? history.location.search : '';\n\n    if (options.behavior === 'open-in-new-tab') {\n      window.open(history.createHref({pathname, search}), '_blank');\n    } else if (options.behavior === 'open') {\n      history.push({pathname, search});\n    } else {\n      SharedToaster.show({\n        intent: 'success',\n        message: (\n          <div>\n            Launched run <Mono>{obj.run.runId.slice(0, 8)}</Mono>\n          </div>\n        ),\n        action: {\n          text: 'View',\n          onClick: () => history.push({pathname, search}),\n        },\n      });\n    }\n    document.dispatchEvent(new CustomEvent('run-launched'));\n  } else if (obj.__typename === 'InvalidSubsetError') {\n    showCustomAlert({body: obj.message});\n  } else if (obj.__typename === 'PythonError') {\n    showCustomAlert({\n      title: 'Error',\n      body: <PythonErrorInfo error={obj} />,\n    });\n  } else {\n    let message = `${pipelineName} cannot be executed with the provided config.`;\n\n    if ('errors' in obj) {\n      message += ` Please fix the following errors:\\n\\n${obj.errors\n        .map((error) => error.message)\n        .join('\\n\\n')}`;\n    }\n\n    showCustomAlert({body: message});\n  }\n}\n\nfunction getBaseExecutionMetadata(run: RunFragment | RunTableRunFragment) {\n  const hiddenTagKeys: string[] = [DagsterTag.IsResumeRetry, DagsterTag.StepSelection];\n\n  return {\n    parentRunId: run.runId,\n    rootRunId: run.rootRunId ? run.rootRunId : run.runId,\n    tags: [\n      // Clean up tags related to run grouping once we decide its persistence\n      // https://github.com/dagster-io/dagster/issues/2495\n      ...run.tags\n        .filter((tag) => !hiddenTagKeys.includes(tag.key))\n        .map((tag) => ({\n          key: tag.key,\n          value: tag.value,\n        })),\n      // pass resume/retry indicator via tags\n      // pass run group info via tags\n      {\n        key: DagsterTag.ParentRunId,\n        value: run.runId,\n      },\n      {\n        key: DagsterTag.RootRunId,\n        value: run.rootRunId ? run.rootRunId : run.runId,\n      },\n    ],\n  };\n}\n\nexport type ReExecutionStyle =\n  | {type: 'all'}\n  | {type: 'from-failure'}\n  | {type: 'selection'; selection: StepSelection};\n\nexport function getReexecutionVariables(input: {\n  run: (RunFragment | RunTableRunFragment) & {runConfigYaml: string};\n  style: ReExecutionStyle;\n  repositoryLocationName: string;\n  repositoryName: string;\n}) {\n  const {run, style, repositoryLocationName, repositoryName} = input;\n\n  if (!run || !run.pipelineSnapshotId) {\n    return undefined;\n  }\n\n  const executionParams: ExecutionParams = {\n    mode: run.mode,\n    runConfigData: run.runConfigYaml,\n    executionMetadata: getBaseExecutionMetadata(run),\n    selector: {\n      repositoryLocationName,\n      repositoryName,\n      pipelineName: run.pipelineName,\n      solidSelection: run.solidSelection,\n      assetSelection: run.assetSelection\n        ? run.assetSelection.map((asset_key) => ({\n            path: asset_key.path,\n          }))\n        : null,\n    },\n  };\n\n  if (style.type === 'from-failure') {\n    executionParams.executionMetadata?.tags?.push({\n      key: DagsterTag.IsResumeRetry,\n      value: 'true',\n    });\n  }\n  if (style.type === 'selection') {\n    executionParams.stepKeys = style.selection.keys;\n    executionParams.executionMetadata?.tags?.push({\n      key: DagsterTag.StepSelection,\n      value: style.selection.query,\n    });\n  }\n  return {executionParams};\n}\n\nexport const LAUNCH_PIPELINE_EXECUTION_MUTATION = gql`\n  mutation LaunchPipelineExecution($executionParams: ExecutionParams!) {\n    launchPipelineExecution(executionParams: $executionParams) {\n      __typename\n      ... on LaunchRunSuccess {\n        run {\n          id\n          runId\n          pipelineName\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on InvalidSubsetError {\n        message\n      }\n      ... on RunConfigValidationInvalid {\n        errors {\n          message\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const DELETE_MUTATION = gql`\n  mutation Delete($runId: String!) {\n    deletePipelineRun(runId: $runId) {\n      __typename\n      ...PythonErrorFragment\n      ... on UnauthorizedError {\n        message\n      }\n      ... on RunNotFoundError {\n        message\n      }\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const TERMINATE_MUTATION = gql`\n  mutation Terminate($runId: String!, $terminatePolicy: TerminateRunPolicy) {\n    terminatePipelineExecution(runId: $runId, terminatePolicy: $terminatePolicy) {\n      __typename\n      ... on TerminateRunFailure {\n        message\n      }\n      ... on RunNotFoundError {\n        message\n      }\n      ... on TerminateRunSuccess {\n        run {\n          id\n          runId\n          canTerminate\n        }\n      }\n      ... on UnauthorizedError {\n        message\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nexport const LAUNCH_PIPELINE_REEXECUTION_MUTATION = gql`\n  mutation LaunchPipelineReexecution(\n    $executionParams: ExecutionParams\n    $reexecutionParams: ReexecutionParams\n  ) {\n    launchPipelineReexecution(\n      executionParams: $executionParams\n      reexecutionParams: $reexecutionParams\n    ) {\n      __typename\n      ... on LaunchRunSuccess {\n        run {\n          id\n          runId\n          pipelineName\n          rootRunId\n          parentRunId\n        }\n      }\n      ... on PipelineNotFoundError {\n        message\n      }\n      ... on InvalidSubsetError {\n        message\n      }\n      ... on RunConfigValidationInvalid {\n        errors {\n          message\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\ninterface RunTimeProps {\n  run: RunTimeFragment;\n}\n\nexport const RunTime: React.FC<RunTimeProps> = React.memo(({run}) => {\n  const {startTime, updateTime} = run;\n\n  return (\n    <div>\n      {startTime ? (\n        <Timestamp timestamp={{unix: startTime}} />\n      ) : updateTime ? (\n        <Timestamp timestamp={{unix: updateTime}} />\n      ) : null}\n    </div>\n  );\n});\n\nexport const RunStateSummary: React.FC<RunTimeProps> = React.memo(({run}) => {\n  // kind of a hack, but we manually set the start time to the end time in the graphql resolver\n  // for this case, so check for start/end time equality for the failed to start condition\n  const failedToStart =\n    run.status === RunStatus.FAILURE && (!run.startTime || run.startTime === run.endTime);\n\n  return failedToStart ? (\n    <div>Failed to start</div>\n  ) : run.status === RunStatus.CANCELED ? (\n    <div>Canceled</div>\n  ) : run.status === RunStatus.CANCELING ? (\n    <div>Canceling…</div>\n  ) : run.status === RunStatus.QUEUED ? (\n    <div>Queued…</div>\n  ) : !run.startTime ? (\n    <div>Starting…</div>\n  ) : (\n    <TimeElapsed startUnix={run.startTime} endUnix={run.endTime} />\n  );\n});\n\nexport const RUN_TIME_FRAGMENT = gql`\n  fragment RunTimeFragment on Run {\n    id\n    runId\n    status\n    startTime\n    endTime\n    updateTime\n  }\n`;\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  SuggestionProvider,\n  TokenizingField,\n  TokenizingFieldValue,\n  tokensAsStringArray,\n  tokenizedValuesFromStringArray,\n} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\nimport {RunStatus, RunsFilter} from '../types/globalTypes';\nimport {DagsterRepoOption, useRepositoryOptions} from '../workspace/WorkspaceContext';\n\nimport {\n  RunsSearchSpaceQuery,\n  RunsSearchSpaceQuery_pipelineRunTags,\n} from './types/RunsSearchSpaceQuery';\n\ntype PipelineRunTags = RunsSearchSpaceQuery_pipelineRunTags[];\n\nexport type RunFilterTokenType = 'id' | 'status' | 'pipeline' | 'job' | 'snapshotId' | 'tag';\n\nexport type RunFilterToken = {\n  token?: RunFilterTokenType;\n  value: string;\n};\n\nconst RUN_PROVIDERS_EMPTY = [\n  {\n    token: 'id',\n    values: () => [],\n  },\n  {\n    token: 'status',\n    values: () => [],\n  },\n  {\n    token: 'pipeline',\n    values: () => [],\n  },\n  {\n    token: 'job',\n    values: () => [],\n  },\n  {\n    token: 'tag',\n    values: () => [],\n  },\n  {\n    token: 'snapshotId',\n    values: () => [],\n  },\n];\n\n/**\n * This React hook provides run filtering state similar to React.useState(), but syncs\n * the value to the URL query string so that reloading the page / navigating \"back\"\n * maintains your view as expected.\n *\n * @param enabledFilters: This is useful if you want to ignore some filters that could\n * be provided (eg pipeline:, which is not relevant within pipeline scoped views.)\n */\nexport function useQueryPersistedRunFilters(enabledFilters?: RunFilterTokenType[]) {\n  return useQueryPersistedState<RunFilterToken[]>(\n    React.useMemo(\n      () => ({\n        encode: (tokens) => ({q: tokensAsStringArray(tokens), cursor: undefined}),\n        decode: ({q = []}) =>\n          tokenizedValuesFromStringArray(q, RUN_PROVIDERS_EMPTY).filter(\n            (t) =>\n              !t.token || !enabledFilters || enabledFilters.includes(t.token as RunFilterTokenType),\n          ) as RunFilterToken[],\n      }),\n      [enabledFilters],\n    ),\n  );\n}\n\nexport function runsPathWithFilters(filterTokens: RunFilterToken[]) {\n  return `/instance/runs?${qs.stringify(\n    {q: tokensAsStringArray(filterTokens)},\n    {arrayFormat: 'brackets'},\n  )}`;\n}\n\nexport function runsFilterForSearchTokens(search: TokenizingFieldValue[]) {\n  if (!search[0]) {\n    return {};\n  }\n\n  const obj: RunsFilter = {};\n\n  for (const item of search) {\n    if (item.token === 'pipeline' || item.token === 'job') {\n      obj.pipelineName = item.value;\n    } else if (item.token === 'id') {\n      obj.runIds = obj.runIds || [];\n      obj.runIds.push(item.value);\n    } else if (item.token === 'status') {\n      obj.statuses = obj.statuses || [];\n      obj.statuses.push(item.value as RunStatus);\n    } else if (item.token === 'snapshotId') {\n      obj.snapshotId = item.value;\n    } else if (item.token === 'tag') {\n      const [key, value] = item.value.split('=');\n      if (obj.tags) {\n        obj.tags.push({key, value});\n      } else {\n        obj.tags = [{key, value}];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction searchSuggestionsForRuns(\n  repositoryOptions: DagsterRepoOption[],\n  pipelineRunTags?: PipelineRunTags,\n  enabledFilters?: RunFilterTokenType[],\n): SuggestionProvider[] {\n  const pipelineNames = new Set<string>();\n  const jobNames = new Set<string>();\n\n  for (const option of repositoryOptions) {\n    const {repository} = option;\n    for (const pipeline of repository.pipelines) {\n      if (pipeline.isJob) {\n        jobNames.add(pipeline.name);\n      } else {\n        pipelineNames.add(pipeline.name);\n      }\n    }\n  }\n\n  const suggestions: {token: RunFilterTokenType; values: () => string[]}[] = [\n    {\n      token: 'id',\n      values: () => [],\n    },\n    {\n      token: 'status',\n      values: () => Object.keys(RunStatus),\n    },\n    {\n      token: 'pipeline',\n      values: () => Array.from(pipelineNames),\n    },\n    {\n      token: 'job',\n      values: () => Array.from(jobNames),\n    },\n    {\n      token: 'tag',\n      values: () => {\n        const all: string[] = [];\n        [...(pipelineRunTags || [])]\n          .sort((a, b) => a.key.localeCompare(b.key))\n          .forEach((t) => t.values.forEach((v) => all.push(`${t.key}=${v}`)));\n        return all;\n      },\n    },\n    {\n      token: 'snapshotId',\n      values: () => [],\n    },\n  ];\n\n  if (enabledFilters) {\n    return suggestions.filter((x) => enabledFilters.includes(x.token));\n  }\n\n  return suggestions;\n}\n\ninterface RunsFilterInputProps {\n  loading?: boolean;\n  tokens: RunFilterToken[];\n  onChange: (tokens: RunFilterToken[]) => void;\n  enabledFilters?: RunFilterTokenType[];\n}\n\nexport const RunsFilterInput: React.FC<RunsFilterInputProps> = ({\n  loading,\n  tokens,\n  onChange,\n  enabledFilters,\n}) => {\n  const {options} = useRepositoryOptions();\n  const [performQuery, {data}] = useLazyQuery<RunsSearchSpaceQuery>(RUNS_SEARCH_SPACE_QUERY, {\n    fetchPolicy: 'cache-and-network',\n  });\n\n  const suggestions = searchSuggestionsForRuns(options, data?.pipelineRunTags, enabledFilters);\n\n  const search = tokenizedValuesFromStringArray(tokensAsStringArray(tokens), suggestions);\n\n  const suggestionProvidersFilter = (\n    suggestionProviders: SuggestionProvider[],\n    values: TokenizingFieldValue[],\n  ) => {\n    const tokens: string[] = [];\n    for (const {token} of values) {\n      if (token) {\n        tokens.push(token);\n      }\n    }\n\n    // If id is set, then no other filters can be set\n    if (tokens.includes('id')) {\n      return [];\n    }\n\n    // Can only have one filter value for pipeline or id\n    const limitedTokens = new Set<string>(['id', 'job', 'pipeline', 'snapshotId']);\n    const presentLimitedTokens = tokens.filter((token) => limitedTokens.has(token));\n\n    return suggestionProviders.filter(\n      (provider) => !provider.token || !presentLimitedTokens.includes(provider.token),\n    );\n  };\n\n  const onFocus = React.useCallback(() => performQuery(), [performQuery]);\n\n  return (\n    <TokenizingField\n      values={search}\n      onChange={(values) => onChange(values as RunFilterToken[])}\n      onFocus={onFocus}\n      suggestionProviders={suggestions}\n      suggestionProvidersFilter={suggestionProvidersFilter}\n      loading={loading}\n    />\n  );\n};\n\nconst RUNS_SEARCH_SPACE_QUERY = gql`\n  query RunsSearchSpaceQuery {\n    pipelineRunTags {\n      key\n      values\n    }\n  }\n`;\n","import {useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {ProgressBar} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  Mono,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TerminateRunPolicy} from '../types/globalTypes';\n\nimport {NavigationBlock} from './NavitationBlock';\nimport {TERMINATE_MUTATION} from './RunUtils';\nimport {\n  Terminate,\n  Terminate_terminatePipelineExecution_RunNotFoundError,\n  Terminate_terminatePipelineExecution_PythonError,\n  Terminate_terminatePipelineExecution_UnauthorizedError,\n  Terminate_terminatePipelineExecution_TerminateRunFailure,\n  TerminateVariables,\n} from './types/Terminate';\n\nexport interface Props {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: (terminationState: TerminationState) => void;\n  // A map from the run ID to its `canTerminate` value\n  selectedRuns: {[id: string]: boolean};\n}\n\ntype Error =\n  | Terminate_terminatePipelineExecution_TerminateRunFailure\n  | Terminate_terminatePipelineExecution_RunNotFoundError\n  | Terminate_terminatePipelineExecution_UnauthorizedError\n  | Terminate_terminatePipelineExecution_PythonError\n  | undefined;\n\nexport type TerminationState = {completed: number; errors: {[id: string]: Error}};\n\ntype TerminationDialogState = {\n  mustForce: boolean;\n  frozenRuns: SelectedRuns;\n  step: 'initial' | 'terminating' | 'completed';\n  termination: TerminationState;\n};\n\ntype SelectedRuns = {[id: string]: boolean};\n\nconst initializeState = (selectedRuns: SelectedRuns): TerminationDialogState => {\n  return {\n    // If any selected runs have `canTerminate`, we don't necessarily have to force.\n    mustForce: !Object.keys(selectedRuns).some((id) => selectedRuns[id]),\n    frozenRuns: selectedRuns,\n    step: 'initial',\n    termination: {completed: 0, errors: {}},\n  };\n};\n\ntype TerminationDialogAction =\n  | {type: 'reset'; frozenRuns: SelectedRuns}\n  | {type: 'toggle-force-terminate'; checked: boolean}\n  | {type: 'start'}\n  | {type: 'termination-success'}\n  | {type: 'termination-error'; id: string; error: Error}\n  | {type: 'complete'};\n\nconst terminationDialogReducer = (\n  prevState: TerminationDialogState,\n  action: TerminationDialogAction,\n): TerminationDialogState => {\n  switch (action.type) {\n    case 'reset':\n      return initializeState(action.frozenRuns);\n    case 'toggle-force-terminate':\n      return {...prevState, mustForce: action.checked};\n    case 'start':\n      return {...prevState, step: 'terminating'};\n    case 'termination-success': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {...termination, completed: termination.completed + 1},\n      };\n    }\n    case 'termination-error': {\n      const {termination} = prevState;\n      return {\n        ...prevState,\n        step: 'terminating',\n        termination: {\n          ...termination,\n          completed: termination.completed + 1,\n          errors: {...termination.errors, [action.id]: action.error},\n        },\n      };\n    }\n    case 'complete':\n      return {...prevState, step: 'completed'};\n  }\n};\n\nexport const TerminationDialog = (props: Props) => {\n  const {isOpen, onClose, onComplete, selectedRuns} = props;\n\n  // Freeze the selected IDs, since the list may change as runs continue processing and\n  // terminating. We want to preserve the list we're given.\n  const frozenRuns = React.useRef<SelectedRuns>(selectedRuns);\n\n  const [state, dispatch] = React.useReducer(\n    terminationDialogReducer,\n    frozenRuns.current,\n    initializeState,\n  );\n\n  const count = Object.keys(state.frozenRuns).length;\n\n  // If the dialog is newly open, update state to match the frozen list.\n  React.useEffect(() => {\n    if (isOpen) {\n      dispatch({type: 'reset', frozenRuns: frozenRuns.current});\n    }\n  }, [isOpen]);\n\n  // If the dialog is not open, update the ref so that the frozen list will be entered\n  // into state the next time the dialog opens.\n  React.useEffect(() => {\n    if (!isOpen) {\n      frozenRuns.current = selectedRuns;\n    }\n  }, [isOpen, selectedRuns]);\n\n  const [terminate] = useMutation<Terminate, TerminateVariables>(TERMINATE_MUTATION);\n  const policy = state.mustForce\n    ? TerminateRunPolicy.MARK_AS_CANCELED_IMMEDIATELY\n    : TerminateRunPolicy.SAFE_TERMINATE;\n\n  const mutate = async () => {\n    dispatch({type: 'start'});\n\n    const runList = Object.keys(state.frozenRuns);\n    for (let ii = 0; ii < runList.length; ii++) {\n      const runId = runList[ii];\n      const {data} = await terminate({variables: {runId, terminatePolicy: policy}});\n\n      if (data?.terminatePipelineExecution.__typename === 'TerminateRunSuccess') {\n        dispatch({type: 'termination-success'});\n      } else {\n        dispatch({type: 'termination-error', id: runId, error: data?.terminatePipelineExecution});\n      }\n    }\n\n    dispatch({type: 'complete'});\n    onComplete(state.termination);\n  };\n\n  const onToggleForce = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({type: 'toggle-force-terminate', checked: event.target.checked});\n  };\n\n  const showCheckbox = Object.keys(state.frozenRuns).some((id) => state.frozenRuns[id]);\n\n  const progressContent = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Group direction=\"column\" spacing={16}>\n              <div>No runs selected for termination.</div>\n              <div>The runs you selected may already have finished executing.</div>\n            </Group>\n          );\n        }\n\n        return (\n          <Group direction=\"column\" spacing={16}>\n            <div>\n              {`${count} ${\n                count === 1 ? 'run' : 'runs'\n              } will be terminated. Do you wish to continue?`}\n            </div>\n            <div>\n              {showCheckbox ? (\n                <>\n                  <Checkbox\n                    checked={state.mustForce}\n                    size=\"small\"\n                    label=\"Force termination immediately\"\n                    onChange={onToggleForce}\n                  />\n                  {state.mustForce ? (\n                    <Box flex={{display: 'flex', direction: 'row', gap: 8}} margin={{top: 8}}>\n                      <Icon name=\"warning\" color={Colors.Yellow500} />\n                      <div>\n                        <strong>Warning:</strong> computational resources created by runs may not be\n                        cleaned up.\n                      </div>\n                    </Box>\n                  ) : null}\n                </>\n              ) : (\n                <Group direction=\"row\" spacing={8}>\n                  <Icon name=\"warning\" color={Colors.Yellow500} />\n                  <div>\n                    <strong>Warning:</strong> computational resources created by runs may not be\n                    cleaned up.\n                  </div>\n                </Group>\n              )}\n            </div>\n          </Group>\n        );\n      case 'terminating':\n      case 'completed':\n        const value = count > 0 ? state.termination.completed / count : 1;\n        return (\n          <Group direction=\"column\" spacing={8}>\n            <div>{state.mustForce ? 'Forcing termination…' : 'Terminating…'}</div>\n            <ProgressBar intent=\"primary\" value={Math.max(0.1, value)} animate={value < 1} />\n            {state.step === 'terminating' ? (\n              <NavigationBlock message=\"Termination in progress, please do not navigate away yet.\" />\n            ) : null}\n          </Group>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const buttons = () => {\n    switch (state.step) {\n      case 'initial':\n        if (!count) {\n          return (\n            <Button intent=\"none\" onClick={onClose}>\n              OK\n            </Button>\n          );\n        }\n\n        return (\n          <>\n            <Button intent=\"none\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button intent=\"danger\" onClick={mutate}>\n              {`${state.mustForce ? 'Force termination for' : 'Terminate'} ${`${count} ${\n                count === 1 ? 'run' : 'runs'\n              }`}`}\n            </Button>\n          </>\n        );\n      case 'terminating':\n        return (\n          <Button intent=\"danger\" disabled>\n            {state.mustForce\n              ? `Forcing termination for ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`\n              : `Terminating ${`${count} ${count === 1 ? 'run' : 'runs'}...`}`}\n          </Button>\n        );\n      case 'completed':\n        return (\n          <Button intent=\"primary\" onClick={onClose}>\n            Done\n          </Button>\n        );\n    }\n  };\n\n  const completionContent = () => {\n    if (state.step === 'initial') {\n      return null;\n    }\n\n    if (state.step === 'terminating') {\n      return <div>Please do not close the window or navigate away during termination.</div>;\n    }\n\n    const errors = state.termination.errors;\n    const errorCount = Object.keys(errors).length;\n    const successCount = state.termination.completed - errorCount;\n\n    return (\n      <Group direction=\"column\" spacing={8}>\n        {successCount ? (\n          <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n            <Icon name=\"check_circle\" color={Colors.Green500} />\n            <div>\n              {state.mustForce\n                ? `Successfully forced termination for ${successCount}\n                ${successCount === 1 ? 'run' : `runs`}.`\n                : `Successfully requested termination for ${successCount}\n              ${successCount === 1 ? 'run' : `runs`}.`}\n            </div>\n          </Group>\n        ) : null}\n        {errorCount ? (\n          <Group direction=\"column\" spacing={8}>\n            <Group direction=\"row\" spacing={8} alignItems=\"flex-start\">\n              <Icon name=\"warning\" color={Colors.Yellow500} />\n              <div>\n                {state.mustForce\n                  ? `Could not force termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`\n                  : `Could not request termination for ${errorCount} ${\n                      errorCount === 1 ? 'run' : 'runs'\n                    }:`}\n              </div>\n            </Group>\n            <ul>\n              {Object.keys(errors).map((runId) => (\n                <li key={runId}>\n                  <Group direction=\"row\" spacing={8}>\n                    <Mono>{runId.slice(0, 8)}</Mono>\n                    {errors[runId] ? <div>{errors[runId]?.message}</div> : null}\n                  </Group>\n                </li>\n              ))}\n            </ul>\n          </Group>\n        ) : null}\n      </Group>\n    );\n  };\n\n  const canQuicklyClose = state.step !== 'terminating';\n\n  return (\n    <Dialog\n      isOpen={isOpen}\n      title=\"Terminate runs\"\n      canEscapeKeyClose={canQuicklyClose}\n      canOutsideClickClose={canQuicklyClose}\n      onClose={onClose}\n    >\n      <DialogBody>\n        <Group direction=\"column\" spacing={24}>\n          {progressContent()}\n          {completionContent()}\n        </Group>\n      </DialogBody>\n      <DialogFooter>{buttons()}</DialogFooter>\n    </Dialog>\n  );\n};\n","import {Colors, Group, Icon} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {formatElapsedTime} from '../app/Util';\n\nexport interface Props {\n  startUnix: number | null;\n  endUnix: number | null;\n}\n\nexport const TimeElapsed = (props: Props) => {\n  const {startUnix, endUnix} = props;\n\n  const [endTime, setEndTime] = React.useState(() => (endUnix ? endUnix * 1000 : null));\n  const interval = React.useRef<NodeJS.Timer | null>(null);\n  const timeout = React.useRef<NodeJS.Timer | null>(null);\n\n  const clearTimers = React.useCallback(() => {\n    interval.current && clearInterval(interval.current);\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  React.useEffect(() => {\n    // An end time has been supplied. Simply set a static value.\n    if (endUnix) {\n      setEndTime(endUnix * 1000);\n      return;\n    }\n\n    // Align to the next second and then update every second so the elapsed\n    // time \"ticks\" up.\n    timeout.current = setTimeout(() => {\n      interval.current = setInterval(() => {\n        setEndTime(Date.now());\n      }, 1000);\n    }, Date.now() % 1000);\n\n    return () => clearTimers();\n  }, [clearTimers, endUnix]);\n\n  const startTime = startUnix ? startUnix * 1000 : 0;\n\n  return (\n    <Group direction=\"row\" spacing={4} alignItems=\"center\">\n      <Icon name=\"timer\" color={Colors.Gray400} />\n      <span style={{fontVariantNumeric: 'tabular-nums'}}>\n        {startTime ? formatElapsedTime((endTime || Date.now()) - startTime) : '–'}\n      </span>\n    </Group>\n  );\n};\n","import memoize from 'lodash/memoize';\nimport uniq from 'lodash/uniq';\n\nimport {DagsterEventType} from '../types/globalTypes';\nconst typeValues = memoize(() =>\n  uniq(Object.values(DagsterEventType).map(eventTypeToDisplayType)).sort(),\n);\n\nexport const eventTypeToDisplayType = (eventType: string) => {\n  switch (eventType) {\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_ENQUEUED:\n      return DagsterEventType.RUN_ENQUEUED;\n    case DagsterEventType.PIPELINE_DEQUEUED:\n      return DagsterEventType.RUN_DEQUEUED;\n    case DagsterEventType.PIPELINE_STARTING:\n      return DagsterEventType.RUN_STARTING;\n    case DagsterEventType.PIPELINE_START:\n      return DagsterEventType.RUN_START;\n    case DagsterEventType.PIPELINE_SUCCESS:\n      return DagsterEventType.RUN_SUCCESS;\n    case DagsterEventType.PIPELINE_FAILURE:\n      return DagsterEventType.RUN_FAILURE;\n    case DagsterEventType.PIPELINE_CANCELING:\n      return DagsterEventType.RUN_CANCELING;\n    case DagsterEventType.PIPELINE_CANCELED:\n      return DagsterEventType.RUN_CANCELED;\n\n    default:\n      return eventType;\n  }\n};\n\nexport const getRunFilterProviders = memoize(\n  (stepNames: string[] = []) => {\n    return [\n      {\n        token: 'step',\n        values: () => stepNames,\n      },\n      {\n        token: 'type',\n        values: typeValues,\n      },\n      {\n        token: 'query',\n        values: () => [],\n      },\n    ];\n  },\n  (stepNames: string[] = []) => JSON.stringify(stepNames),\n);\n","import {LogLevel} from './LogLevel';\nimport {LogNode} from './types';\n\nexport const logNodeLevel = (node: LogNode): LogLevel =>\n  node.__typename === 'LogMessageEvent' ? node.level : LogLevel.EVENT;\n","import {useQuery} from '@apollo/client';\nimport {CursorPaginationProps} from '@dagster-io/ui';\nimport {DocumentNode} from 'graphql';\nimport * as React from 'react';\n\nimport {useQueryPersistedState} from '../hooks/useQueryPersistedState';\n\ninterface CursorPaginationQueryVariables {\n  cursor?: string | null;\n  limit?: number | null;\n}\n\n/**\n * This is a React hook that makes it easier to build paginated list views based on a GraphQL\n * query. It is intended to be used in place of Apollo's `useQuery` and assumes that the query\n * takes at least `cursor` and `limit` variables. It manages those two variables internally,\n * and you can pass additional variables via the options.\n *\n * The current pagination \"cursor\" is saved to the URL query string, which allows the user to\n * navigate \"back\" in their browser history to move to previous pages.\n *\n * The returned paginationProps expose methods for moving to the next / previous page and are\n * used by <CursorPaginationControls /> to render the pagination buttons.\n */\nexport function useCursorPaginatedQuery<T, TVars extends CursorPaginationQueryVariables>(options: {\n  query: DocumentNode;\n  nextCursorForResult: (result: T) => string | undefined;\n  variables: Omit<Omit<TVars, 'cusor'>, 'limit'>;\n  pageSize: number;\n  getResultArray: (result: T | undefined) => any[];\n}) {\n  const [cursorStack, setCursorStack] = React.useState<string[]>(() => []);\n  const [cursor, setCursor] = useQueryPersistedState<string | undefined>({queryKey: 'cursor'});\n\n  const queryVars: any = {\n    ...options.variables,\n    cursor,\n    limit: options.pageSize + 1,\n  };\n\n  const queryResult = useQuery<T, TVars>(options.query, {\n    fetchPolicy: 'cache-and-network',\n    partialRefetch: true,\n    variables: queryVars,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const resultArray = options.getResultArray(queryResult.data);\n  const paginationProps: CursorPaginationProps = {\n    hasPrevCursor: !!cursor,\n    hasNextCursor: resultArray.length === options.pageSize + 1,\n    popCursor: () => {\n      const nextStack = [...cursorStack];\n      setCursor(nextStack.pop());\n      setCursorStack(nextStack);\n    },\n    advanceCursor: () => {\n      if (cursor) {\n        setCursorStack((current) => [...current, cursor]);\n      }\n      const nextCursor = queryResult.data && options.nextCursorForResult(queryResult.data);\n      if (!nextCursor) {\n        return;\n      }\n      setCursor(nextCursor);\n    },\n    reset: () => {\n      setCursorStack([]);\n      setCursor(undefined);\n    },\n  };\n\n  return {queryResult, paginationProps};\n}\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {ButtonLink, Colors, Group, Caption} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {assertUnreachable} from '../app/Util';\nimport {StatusTable} from '../instigation/InstigationUtils';\nimport {RunStatus} from '../types/globalTypes';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {ScheduleFragment} from './types/ScheduleFragment';\nimport {\n  SchedulePartitionStatusFragment,\n  SchedulePartitionStatusFragment_partitionSet_partitionStatusesOrError_PartitionStatuses_results as Partition,\n} from './types/SchedulePartitionStatusFragment';\nimport {\n  SchedulePartitionStatusQuery,\n  SchedulePartitionStatusQueryVariables,\n} from './types/SchedulePartitionStatusQuery';\n\nconst RUN_STATUSES = ['Succeeded', 'Failed', 'Missing', 'Pending'];\n\nconst calculateDisplayStatus = (partition: Partition) => {\n  switch (partition.runStatus) {\n    case null:\n      return 'Missing';\n    case RunStatus.SUCCESS:\n      return 'Succeeded';\n    case RunStatus.FAILURE:\n    case RunStatus.CANCELED:\n    case RunStatus.CANCELING:\n      return 'Failed';\n    case RunStatus.MANAGED:\n    case RunStatus.QUEUED:\n    case RunStatus.NOT_STARTED:\n    case RunStatus.STARTED:\n    case RunStatus.STARTING:\n      return 'Pending';\n    default:\n      return assertUnreachable(partition.runStatus);\n  }\n};\n\nexport const SchedulePartitionStatus: React.FC<{\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n}> = React.memo(({repoAddress, schedule}) => {\n  const repo = useRepository(repoAddress);\n  const {name: scheduleName, partitionSet, pipelineName} = schedule;\n\n  const partitionSetName = partitionSet?.name;\n  const isJob = isThisThingAJob(repo, pipelineName);\n\n  const partitionPath = React.useMemo(() => {\n    const query = partitionSetName\n      ? qs.stringify(\n          {\n            partitionSet: partitionSetName,\n          },\n          {addQueryPrefix: true},\n        )\n      : '';\n    return `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/partitions${query}`;\n  }, [partitionSetName, isJob, pipelineName]);\n\n  const partitionURL = workspacePathFromAddress(repoAddress, partitionPath);\n\n  const [retrievePartitionStatus, {data, loading}] = useLazyQuery<\n    SchedulePartitionStatusQuery,\n    SchedulePartitionStatusQueryVariables\n  >(SCHEDULE_PARTITION_STATUS_QUERY, {\n    variables: {\n      scheduleSelector: {\n        scheduleName,\n        repositoryName: repoAddress.name,\n        repositoryLocationName: repoAddress.location,\n      },\n    },\n  });\n\n  const onClick = React.useCallback(() => retrievePartitionStatus(), [retrievePartitionStatus]);\n\n  const loadable = () => {\n    if (loading) {\n      return <Caption style={{color: Colors.Gray400}}>Loading…</Caption>;\n    }\n\n    if (!data) {\n      return (\n        <ButtonLink onClick={onClick}>\n          <Caption>Show coverage</Caption>\n        </ButtonLink>\n      );\n    }\n\n    const partitionFragment = data.scheduleOrError;\n    if (partitionFragment.__typename === 'Schedule') {\n      return (\n        <RetrievedSchedulePartitionStatus\n          schedule={partitionFragment}\n          partitionURL={partitionURL}\n        />\n      );\n    }\n\n    return <Caption style={{color: Colors.Red700}}>Partition set not found!</Caption>;\n  };\n\n  return (\n    <Group direction=\"column\" spacing={4}>\n      <Link to={partitionURL}>{partitionSetName}</Link>\n      {loadable()}\n    </Group>\n  );\n});\n\nconst RetrievedSchedulePartitionStatus: React.FC<{\n  schedule: SchedulePartitionStatusFragment;\n  partitionURL: string;\n}> = ({schedule, partitionURL}) => {\n  const {partitionSet} = schedule;\n\n  if (!partitionSet || partitionSet.partitionStatusesOrError.__typename !== 'PartitionStatuses') {\n    return <span style={{color: Colors.Gray300}}>None</span>;\n  }\n\n  const partitions = partitionSet.partitionStatusesOrError.results;\n  const partitionsByType = {};\n  partitions.forEach((partition) => {\n    const displayStatus = calculateDisplayStatus(partition);\n    partitionsByType[displayStatus] = [...(partitionsByType[displayStatus] || []), partition];\n  });\n\n  return (\n    <StatusTable>\n      <tbody>\n        {RUN_STATUSES.map((status) => {\n          if (!(status in partitionsByType)) {\n            return null;\n          }\n          return (\n            <tr key={status}>\n              <td style={{width: '100px'}}>{status}</td>\n              <td>\n                {status === 'Failed' || status === 'Missing' ? (\n                  <Link\n                    to={`${partitionURL}?showFailuresAndGapsOnly=true`}\n                    style={{color: Colors.Gray900}}\n                  >\n                    {partitionsByType[status].length}\n                  </Link>\n                ) : (\n                  partitionsByType[status].length\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StatusTable>\n  );\n};\n\nconst SCHEDULE_PARTITION_STATUS_FRAGMENT = gql`\n  fragment SchedulePartitionStatusFragment on Schedule {\n    id\n    mode\n    pipelineName\n    partitionSet {\n      id\n      name\n      partitionStatusesOrError {\n        ... on PartitionStatuses {\n          results {\n            id\n            partitionName\n            runStatus\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SCHEDULE_PARTITION_STATUS_QUERY = gql`\n  query SchedulePartitionStatusQuery($scheduleSelector: ScheduleSelector!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        ...SchedulePartitionStatusFragment\n      }\n    }\n  }\n  ${SCHEDULE_PARTITION_STATUS_FRAGMENT}\n`;\n","import {gql} from '@apollo/client';\n\nimport {PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {INSTANCE_HEALTH_FRAGMENT} from '../instance/InstanceHealthFragment';\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\nimport {REPOSITORY_INFO_FRAGMENT} from '../workspace/RepositoryInformation';\n\nexport const SCHEDULE_FRAGMENT = gql`\n  fragment ScheduleFragment on Schedule {\n    id\n    name\n    cronSchedule\n    executionTimezone\n    pipelineName\n    solidSelection\n    mode\n    description\n    partitionSet {\n      id\n      name\n    }\n    scheduleState {\n      id\n      ...InstigationStateFragment\n    }\n    futureTicks(limit: 5) {\n      results {\n        timestamp\n      }\n    }\n  }\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n\nexport const REPOSITORY_SCHEDULES_FRAGMENT = gql`\n  fragment RepositorySchedulesFragment on Repository {\n    name\n    id\n    location {\n      id\n      name\n    }\n    schedules {\n      id\n      ...ScheduleFragment\n    }\n    ...RepositoryInfoFragment\n  }\n  ${REPOSITORY_INFO_FRAGMENT}\n  ${SCHEDULE_FRAGMENT}\n`;\n\nexport const SCHEDULES_ROOT_QUERY = gql`\n  query SchedulesRootQuery(\n    $repositorySelector: RepositorySelector!\n    $instigationType: InstigationType!\n  ) {\n    repositoryOrError(repositorySelector: $repositorySelector) {\n      __typename\n      ... on Repository {\n        id\n        ...RepositorySchedulesFragment\n      }\n      ...PythonErrorFragment\n    }\n    unloadableInstigationStatesOrError(instigationType: $instigationType) {\n      ... on InstigationStates {\n        results {\n          id\n          ...InstigationStateFragment\n        }\n      }\n      ...PythonErrorFragment\n    }\n    instance {\n      ...InstanceHealthFragment\n    }\n  }\n\n  ${PYTHON_ERROR_FRAGMENT}\n  ${REPOSITORY_SCHEDULES_FRAGMENT}\n  ${INSTIGATION_STATE_FRAGMENT}\n  ${INSTANCE_HEALTH_FRAGMENT}\n`;\n","import {Alert} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DaemonHealthFragment} from '../instance/types/DaemonHealthFragment';\n\nexport const SchedulerInfo: React.FC<{\n  daemonHealth: DaemonHealthFragment | undefined;\n}> = ({daemonHealth}) => {\n  let healthy = false;\n\n  if (daemonHealth) {\n    const schedulerHealths = daemonHealth.allDaemonStatuses.filter(\n      (daemon) => daemon.daemonType === 'SCHEDULER',\n    );\n    if (schedulerHealths) {\n      const schedulerHealth = schedulerHealths[0];\n      healthy = !!(schedulerHealth.required && schedulerHealth.healthy);\n    }\n  }\n\n  if (!healthy) {\n    return (\n      <Alert\n        intent=\"warning\"\n        title=\"The scheduler daemon is not running.\"\n        description={\n          <div>\n            See the{' '}\n            <a href=\"https://docs.dagster.io/deployment/dagster-daemon\">\n              dagster-daemon documentation\n            </a>{' '}\n            for more information on how to deploy the dagster-daemon process.\n          </div>\n        }\n      />\n    );\n  }\n\n  return null;\n};\n","import {gql, useLazyQuery} from '@apollo/client';\nimport {\n  Box,\n  Button,\n  ButtonLink,\n  Colors,\n  DialogBody,\n  DialogFooter,\n  Dialog,\n  Group,\n  Icon,\n  MenuItem,\n  Menu,\n  NonIdealState,\n  Popover,\n  Spinner,\n  Table,\n  Subheading,\n  StyledReadOnlyCodeMirror,\n} from '@dagster-io/ui';\nimport qs from 'qs';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {SharedToaster} from '../app/DomUtils';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {useCopyToClipboard} from '../app/browser';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {RunTags} from '../runs/RunTags';\nimport {InstigationStatus} from '../types/globalTypes';\nimport {MenuLink} from '../ui/MenuLink';\nimport {\n  findRepositoryAmongOptions,\n  isThisThingAJob,\n  useRepository,\n  useRepositoryOptions,\n} from '../workspace/WorkspaceContext';\nimport {repoAddressToSelector} from '../workspace/repoAddressToSelector';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {RepositorySchedulesFragment} from './types/RepositorySchedulesFragment';\nimport {ScheduleFragment} from './types/ScheduleFragment';\nimport {\n  ScheduleTickConfigQuery,\n  ScheduleTickConfigQueryVariables,\n  ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult,\n  ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult_runRequests,\n} from './types/ScheduleTickConfigQuery';\n\ninterface ScheduleTick {\n  schedule: ScheduleFragment;\n  timestamp: number;\n  repoAddress: RepoAddress;\n}\n\nexport const SchedulesNextTicks: React.FC<{\n  repos: RepositorySchedulesFragment[];\n}> = React.memo(({repos}) => {\n  const nextTicks: ScheduleTick[] = [];\n  let anyPipelines = false;\n\n  const {options} = useRepositoryOptions();\n\n  repos.forEach((repo) => {\n    const {schedules} = repo;\n    const repoAddress = {\n      name: repo.name,\n      location: repo.location.name,\n    };\n\n    const futureTickSchedules = schedules.filter(\n      (schedule) =>\n        schedule.futureTicks.results.length &&\n        schedule.scheduleState.status === InstigationStatus.RUNNING,\n    );\n\n    const minMaxTimestamp = Math.min(\n      ...futureTickSchedules.map(\n        (schedule) =>\n          schedule.futureTicks.results[schedule.futureTicks.results.length - 1].timestamp,\n      ),\n    );\n\n    futureTickSchedules.forEach((schedule) => {\n      schedule.futureTicks.results.forEach((tick) => {\n        if (tick.timestamp <= minMaxTimestamp) {\n          nextTicks.push({schedule, timestamp: tick.timestamp, repoAddress});\n        }\n      });\n    });\n\n    if (!anyPipelines) {\n      anyPipelines = schedules.some((schedule) => !!schedule.mode);\n    }\n  });\n\n  nextTicks.sort((a, b) => a.timestamp - b.timestamp);\n\n  if (!nextTicks.length) {\n    return (\n      <Box padding={{vertical: 32}}>\n        <NonIdealState\n          icon=\"error\"\n          title=\"No scheduled ticks\"\n          description=\"There are no running schedules. Start a schedule to see scheduled ticks.\"\n        />\n      </Box>\n    );\n  }\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '260px'}}>Timestamp</th>\n          <th style={{width: '30%'}}>Schedule</th>\n          <th>{anyPipelines ? 'Job / Pipeline' : 'Job'}</th>\n          <th>Metadata</th>\n        </tr>\n      </thead>\n      <tbody>\n        {nextTicks.map(({schedule, timestamp, repoAddress}) => {\n          const repo = findRepositoryAmongOptions(options, repoAddress);\n          return (\n            <tr key={`${schedule.id}:${timestamp}`}>\n              <td>\n                <TimestampDisplay\n                  timestamp={timestamp}\n                  timezone={schedule.executionTimezone}\n                  timeFormat={{showSeconds: false, showTimezone: true}}\n                />\n              </td>\n              <td>\n                <Link to={workspacePathFromAddress(repoAddress, `/schedules/${schedule.name}`)}>\n                  {schedule.name}\n                </Link>\n              </td>\n              <td>\n                <PipelineReference\n                  pipelineName={schedule.pipelineName}\n                  pipelineHrefContext={repoAddress}\n                  isJob={!!repo && isThisThingAJob(repo, schedule.pipelineName)}\n                />\n              </td>\n              <td>\n                <NextTickMenu\n                  repoAddress={repoAddress}\n                  schedule={schedule}\n                  tickTimestamp={timestamp}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n});\n\nconst NextTickMenu: React.FC<{\n  repoAddress: RepoAddress;\n  schedule: ScheduleFragment;\n  tickTimestamp: number;\n}> = React.memo(({repoAddress, schedule, tickTimestamp}) => {\n  const scheduleSelector = {\n    ...repoAddressToSelector(repoAddress),\n    scheduleName: schedule.name,\n  };\n  const [isOpen, setOpen] = React.useState<boolean>(false);\n  const [loadTickConfig, {called, loading, data}] = useLazyQuery<\n    ScheduleTickConfigQuery,\n    ScheduleTickConfigQueryVariables\n  >(SCHEDULE_TICK_CONFIG_QUERY, {\n    variables: {\n      scheduleSelector,\n      tickTimestamp,\n    },\n  });\n\n  const infoReady = called ? !loading : false;\n  const evaluationResult =\n    data?.scheduleOrError?.__typename === 'Schedule'\n      ? data.scheduleOrError.futureTick.evaluationResult\n      : null;\n\n  const menuItems = infoReady ? (\n    <NextTickMenuItems\n      repoAddress={repoAddress}\n      schedule={schedule}\n      loading={loading}\n      onItemOpen={setOpen}\n      evaluationResult={evaluationResult}\n    />\n  ) : (\n    <Spinner purpose=\"body-text\" />\n  );\n  return (\n    <>\n      <Popover\n        content={<Menu>{menuItems}</Menu>}\n        position=\"bottom-right\"\n        onOpening={() => {\n          if (!called) {\n            loadTickConfig();\n          }\n        }}\n      >\n        <Button icon={<Icon name=\"expand_more\" />} />\n      </Popover>\n      <NextTickDialog\n        repoAddress={repoAddress}\n        isOpen={isOpen}\n        setOpen={setOpen}\n        schedule={schedule}\n        tickTimestamp={tickTimestamp}\n        evaluationResult={evaluationResult}\n      />\n    </>\n  );\n});\n\nconst NextTickMenuItems: React.FC<{\n  repoAddress: RepoAddress;\n  evaluationResult: ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult | null;\n  schedule: ScheduleFragment;\n  loading: boolean;\n  onItemOpen: (value: boolean) => void;\n}> = ({repoAddress, schedule, evaluationResult, loading, onItemOpen}) => {\n  if (!evaluationResult) {\n    return <MenuItem text=\"Could not preview tick for this schedule\" />;\n  }\n\n  if (evaluationResult.skipReason) {\n    return <MenuItem text=\"View skip reason...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (evaluationResult.error) {\n    return <MenuItem text=\"View error...\" onClick={() => onItemOpen(true)} />;\n  }\n\n  if (!evaluationResult.runRequests || !evaluationResult.runRequests.length) {\n    return <MenuItem text=\"No runs requested for this projected schedule tick\" />;\n  }\n\n  if (evaluationResult.runRequests.length === 1) {\n    const runRequest = evaluationResult.runRequests[0];\n    const runConfigYaml = runRequest ? runRequest.runConfigYaml : '';\n    return (\n      <>\n        <MenuItem\n          text={loading ? 'Loading Configuration...' : 'View Configuration...'}\n          icon=\"open_in_new\"\n          onClick={() => onItemOpen(true)}\n        />\n        <MenuLink\n          text=\"Open in Launchpad...\"\n          icon=\"edit\"\n          target=\"_blank\"\n          to={workspacePathFromAddress(\n            repoAddress,\n            `/pipeline_or_job/${schedule.pipelineName}/playground/setup?${qs.stringify({\n              mode: schedule.mode,\n              config: runConfigYaml,\n              solidSelection: schedule.solidSelection,\n            })}`,\n          )}\n        />\n      </>\n    );\n  }\n\n  return (\n    <MenuItem\n      text={`View ${evaluationResult.runRequests.length} run requests...`}\n      icon=\"edit\"\n      target=\"_blank\"\n      onClick={() => onItemOpen(true)}\n    />\n  );\n};\n\nconst NextTickDialog: React.FC<{\n  repoAddress: RepoAddress;\n  isOpen: boolean;\n  setOpen: (value: boolean) => void;\n  evaluationResult: ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult | null;\n  schedule: ScheduleFragment;\n  tickTimestamp: number;\n}> = ({repoAddress, evaluationResult, schedule, tickTimestamp, setOpen, isOpen}) => {\n  const [\n    selectedRunRequest,\n    setSelectedRunRequest,\n  ] = React.useState<ScheduleTickConfigQuery_scheduleOrError_Schedule_futureTick_evaluationResult_runRequests | null>(\n    evaluationResult && evaluationResult.runRequests && evaluationResult.runRequests.length === 1\n      ? evaluationResult.runRequests[0]\n      : null,\n  );\n\n  const copy = useCopyToClipboard();\n\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, schedule.pipelineName);\n\n  React.useEffect(() => {\n    if (\n      evaluationResult &&\n      evaluationResult.runRequests &&\n      evaluationResult.runRequests.length === 1\n    ) {\n      setSelectedRunRequest(evaluationResult.runRequests[0]);\n    }\n  }, [evaluationResult]);\n\n  const close = () => {\n    setSelectedRunRequest(null);\n    setOpen(false);\n  };\n\n  let body;\n  if (!evaluationResult) {\n    body = null;\n  } else if (selectedRunRequest) {\n    body = (\n      <Box flex={{direction: 'column', gap: 20}}>\n        <Box flex={{direction: 'column', gap: 12}} padding={{top: 16, horizontal: 24}}>\n          <Subheading>Tags</Subheading>\n          {selectedRunRequest.tags.length ? (\n            <RunTags tags={selectedRunRequest.tags} mode={isJob ? null : schedule.mode} />\n          ) : null}\n        </Box>\n        <div>\n          <Box\n            border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n            padding={{left: 24, bottom: 16}}\n          >\n            <Subheading>Config</Subheading>\n          </Box>\n          <StyledReadOnlyCodeMirror\n            value={selectedRunRequest.runConfigYaml}\n            options={{lineNumbers: true, mode: 'yaml'}}\n          />\n        </div>\n      </Box>\n    );\n  } else if (evaluationResult.error) {\n    body = (\n      <DialogBody>\n        <PythonErrorInfo error={evaluationResult.error} />\n      </DialogBody>\n    );\n  } else if (evaluationResult.skipReason) {\n    body = (\n      <DialogBody>\n        <SkipWrapper>{evaluationResult.skipReason}</SkipWrapper>\n      </DialogBody>\n    );\n  } else if (evaluationResult.runRequests) {\n    body = (\n      <DialogBody>\n        <RunRequestBody>\n          <Table>\n            <thead>\n              <tr>\n                <th>Run key</th>\n                <th>Config</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {evaluationResult.runRequests.map((runRequest, idx) => {\n                if (!runRequest) {\n                  return null;\n                }\n                return (\n                  <tr key={idx}>\n                    <td>{runRequest.runKey || <span>&mdash;</span>}</td>\n                    <td>\n                      <ButtonLink\n                        onClick={() => setSelectedRunRequest(runRequest)}\n                        underline={false}\n                      >\n                        <Group direction=\"row\" spacing={8} alignItems=\"center\">\n                          <Icon name=\"open_in_new\" color={Colors.Gray400} />\n                          <span>View config</span>\n                        </Group>\n                      </ButtonLink>\n                    </td>\n                    <td>\n                      <Popover\n                        content={\n                          <Menu>\n                            <MenuLink\n                              text=\"Open in Launchpad...\"\n                              icon=\"edit\"\n                              target=\"_blank\"\n                              to={workspacePathFromAddress(\n                                repoAddress,\n                                `/${isJob ? 'jobs' : 'pipelines'}/${\n                                  schedule.pipelineName\n                                }/playground/setup?${qs.stringify({\n                                  mode: schedule.mode,\n                                  config: runRequest.runConfigYaml,\n                                  solidSelection: schedule.solidSelection,\n                                })}`,\n                              )}\n                            />\n                          </Menu>\n                        }\n                        position=\"bottom\"\n                      >\n                        <Button icon={<Icon name=\"expand_more\" />} />\n                      </Popover>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </Table>\n        </RunRequestBody>\n      </DialogBody>\n    );\n  }\n\n  return (\n    <Dialog\n      onClose={() => close()}\n      style={{width: '50vw'}}\n      title={\n        <Box flex={{direction: 'row', gap: 4}}>\n          <TimestampDisplay timestamp={tickTimestamp} timezone={schedule.executionTimezone} />\n          {selectedRunRequest?.runKey ? <div>: {selectedRunRequest?.runKey}</div> : null}\n        </Box>\n      }\n      isOpen={isOpen}\n    >\n      {body}\n      <DialogFooter topBorder>\n        {selectedRunRequest ? (\n          <Button\n            autoFocus={false}\n            onClick={() => {\n              copy(selectedRunRequest.runConfigYaml);\n              SharedToaster.show({\n                intent: 'success',\n                icon: 'copy_to_clipboard_done',\n                message: 'Copied!',\n              });\n            }}\n          >\n            Copy config\n          </Button>\n        ) : null}\n        <Button intent=\"primary\" autoFocus={true} onClick={() => close()}>\n          OK\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst SCHEDULE_TICK_CONFIG_QUERY = gql`\n  query ScheduleTickConfigQuery($scheduleSelector: ScheduleSelector!, $tickTimestamp: Int!) {\n    scheduleOrError(scheduleSelector: $scheduleSelector) {\n      ... on Schedule {\n        id\n        futureTick(tickTimestamp: $tickTimestamp) {\n          evaluationResult {\n            runRequests {\n              runKey\n              runConfigYaml\n              tags {\n                key\n                value\n              }\n            }\n            skipReason\n            error {\n              ...PythonErrorFragment\n            }\n          }\n        }\n      }\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n\nconst RunRequestBody = styled.div`\n  font-size: 13px;\n`;\n\nconst SkipWrapper = styled.div`\n  background-color: #fdfcf2;\n  border: 1px solid ${Colors.Yellow500};\n  border-radius: 3px;\n`;\n","import {Box, Button, Colors, Icon, Menu, Popover, Table, Tag, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {TickTag} from '../instigation/InstigationTick';\nimport {InstigatedRunStatus} from '../instigation/InstigationUtils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {InstigationStatus, InstigationType} from '../types/globalTypes';\nimport {MenuLink} from '../ui/MenuLink';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {SchedulePartitionStatus} from './SchedulePartitionStatus';\nimport {ScheduleSwitch} from './ScheduleSwitch';\nimport {TimestampDisplay} from './TimestampDisplay';\nimport {humanCronString} from './humanCronString';\nimport {ScheduleFragment} from './types/ScheduleFragment';\n\nexport const SchedulesTable: React.FC<{\n  schedules: ScheduleFragment[];\n  repoAddress: RepoAddress;\n}> = ({repoAddress, schedules}) => {\n  const lastTick = 'Status of the last tick: One of `Started`, `Skipped`, `Requested`, `Failed`';\n  const lastRun = 'The status of the last run requested by this schedule';\n  const partitionStatus = (\n    <div style={{width: 300}}>\n      <p>The status of each partition in the partition set associated with this schedule.</p>\n      <p>\n        Partitions have a `Success` status if the last run for that partition completed\n        successfully.\n      </p>\n      <p>Partititons have a `Missing` status if no run has been executed for that partition.</p>\n    </div>\n  );\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '60px'}}></th>\n          <th>Schedule name</th>\n          <th style={{width: '15%'}}>Schedule</th>\n          <th style={{width: '10%'}}>Next tick</th>\n          <th style={{width: '10%'}}>\n            <Box flex={{gap: 8, alignItems: 'end'}}>\n              Last tick\n              <Tooltip position=\"top\" content={lastTick}>\n                <Icon name=\"info\" color={Colors.Gray400} />\n              </Tooltip>\n            </Box>\n          </th>\n          <th style={{width: 130}}>\n            <Box flex={{gap: 8, alignItems: 'end'}}>\n              Last run\n              <Tooltip position=\"top\" content={lastRun}>\n                <Icon name=\"info\" color={Colors.Gray400} />\n              </Tooltip>\n            </Box>\n          </th>\n          <th style={{width: '30%'}}>\n            <Box flex={{gap: 8, alignItems: 'end'}}>\n              Partition Set\n              <Tooltip position=\"top\" content={partitionStatus}>\n                <Icon name=\"info\" color={Colors.Gray400} />\n              </Tooltip>\n            </Box>\n          </th>\n          <th style={{width: 80}} />\n        </tr>\n      </thead>\n      <tbody>\n        {schedules.map((schedule) => (\n          <ScheduleRow repoAddress={repoAddress} schedule={schedule} key={schedule.name} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst errorDisplay = (status: InstigationStatus, runningScheduleCount: number) => {\n  if (status === InstigationStatus.STOPPED && runningScheduleCount === 0) {\n    return null;\n  } else if (status === InstigationStatus.RUNNING && runningScheduleCount === 1) {\n    return null;\n  }\n\n  const errors = [];\n  if (status === InstigationStatus.RUNNING && runningScheduleCount === 0) {\n    errors.push(\n      'Schedule is set to be running, but either the scheduler is not configured or the scheduler is not running the schedule',\n    );\n  } else if (status === InstigationStatus.STOPPED && runningScheduleCount > 0) {\n    errors.push('Schedule is set to be stopped, but the scheduler is still running the schedule');\n  }\n\n  if (runningScheduleCount > 0) {\n    errors.push('Duplicate cron job for schedule found.');\n  }\n\n  return (\n    <Popover\n      interactionKind=\"hover\"\n      popoverClassName=\"bp3-popover-content-sizing\"\n      position=\"right\"\n      content={\n        <Box flex={{direction: 'column', gap: 8}} padding={12}>\n          <strong>There are errors with this schedule.</strong>\n          <div>Errors:</div>\n          <ul>\n            {errors.map((error, index) => (\n              <li key={index}>{error}</li>\n            ))}\n          </ul>\n        </Box>\n      }\n    >\n      <Tag fill interactive intent=\"danger\">\n        Error\n      </Tag>\n    </Popover>\n  );\n};\n\nconst ScheduleRow: React.FC<{\n  schedule: ScheduleFragment;\n  repoAddress: RepoAddress;\n}> = (props) => {\n  const {repoAddress, schedule} = props;\n  const repo = useRepository(repoAddress);\n  const isJob = isThisThingAJob(repo, schedule.pipelineName);\n\n  const {\n    name,\n    cronSchedule,\n    executionTimezone,\n    futureTicks,\n    pipelineName,\n    scheduleState,\n  } = schedule;\n  const {status, ticks, runningCount: runningScheduleCount} = scheduleState;\n\n  const latestTick = ticks.length > 0 ? ticks[0] : null;\n\n  return (\n    <tr key={name}>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <ScheduleSwitch repoAddress={repoAddress} schedule={schedule} />\n          {errorDisplay(status, runningScheduleCount)}\n        </Box>\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <span style={{fontWeight: 500}}>\n            <Link to={workspacePathFromAddress(repoAddress, `/schedules/${name}`)}>{name}</Link>\n          </span>\n          <PipelineReference\n            showIcon\n            size=\"small\"\n            pipelineName={pipelineName}\n            pipelineHrefContext={repoAddress}\n            isJob={isJob}\n          />\n        </Box>\n      </td>\n      <td>\n        {cronSchedule ? (\n          <Tooltip position=\"bottom\" content={cronSchedule}>\n            <span>{humanCronString(cronSchedule, executionTimezone || 'UTC')}</span>\n          </Tooltip>\n        ) : (\n          <span style={{color: Colors.Gray300}}>None</span>\n        )}\n      </td>\n      <td>\n        {futureTicks.results.length && status === InstigationStatus.RUNNING ? (\n          <TimestampDisplay\n            timestamp={futureTicks.results[0].timestamp}\n            timezone={executionTimezone}\n            timeFormat={{showSeconds: false, showTimezone: true}}\n          />\n        ) : (\n          <span style={{color: Colors.Gray300}}>None</span>\n        )}\n      </td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SCHEDULE} />\n        ) : (\n          <span style={{color: Colors.Gray300}}>None</span>\n        )}\n      </td>\n      <td>\n        <InstigatedRunStatus instigationState={scheduleState} />\n      </td>\n      <td>\n        {schedule.partitionSet ? (\n          <SchedulePartitionStatus schedule={schedule} repoAddress={repoAddress} />\n        ) : (\n          <div style={{color: Colors.Gray300}}>None</div>\n        )}\n      </td>\n      <td>\n        {schedule.partitionSet ? (\n          <Popover\n            content={\n              <Menu>\n                <MenuLink\n                  text=\"View Partition History...\"\n                  icon=\"dynamic_feed\"\n                  target=\"_blank\"\n                  to={workspacePathFromAddress(\n                    repoAddress,\n                    `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/partitions`,\n                  )}\n                />\n                <MenuLink\n                  text=\"Launch Partition Backfill...\"\n                  icon=\"add_circle\"\n                  target=\"_blank\"\n                  to={workspacePathFromAddress(\n                    repoAddress,\n                    `/${isJob ? 'jobs' : 'pipelines'}/${pipelineName}/partitions`,\n                  )}\n                />\n              </Menu>\n            }\n            position=\"bottom-left\"\n          >\n            <Button icon={<Icon name=\"expand_more\" />} />\n          </Popover>\n        ) : null}\n      </td>\n    </tr>\n  );\n};\n","import {Box, Colors, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {DEFAULT_TIME_FORMAT, TimeFormat} from '../app/time/TimestampFormat';\nimport {TimezoneContext} from '../app/time/TimezoneContext';\nimport {timestampToString} from '../app/time/timestampToString';\n\ninterface Props {\n  timestamp: number;\n  timezone?: string | null;\n  timeFormat?: TimeFormat;\n  tooltipTimeFormat?: TimeFormat;\n}\n\nexport const TimestampDisplay = (props: Props) => {\n  const {timestamp, timezone, timeFormat, tooltipTimeFormat} = props;\n  const [userTimezone] = React.useContext(TimezoneContext);\n  const locale = navigator.language;\n\n  return (\n    <Box\n      flex={{display: 'inline-flex', direction: 'row', alignItems: 'center', wrap: 'wrap', gap: 8}}\n    >\n      <TabularNums>\n        {timestampToString({\n          timestamp: {unix: timestamp},\n          locale,\n          timezone: timezone || userTimezone,\n          timeFormat,\n        })}\n      </TabularNums>\n      {timezone && timezone !== userTimezone ? (\n        <TimestampTooltip\n          placement=\"top\"\n          content={\n            <TabularNums>\n              {timestampToString({\n                timestamp: {unix: timestamp},\n                locale,\n                timezone: userTimezone,\n                timeFormat: tooltipTimeFormat,\n              })}\n            </TabularNums>\n          }\n        >\n          <Icon name=\"schedule\" color={Colors.Gray400} />\n        </TimestampTooltip>\n      ) : null}\n    </Box>\n  );\n};\n\nTimestampDisplay.defaultProps = {\n  timeFormat: DEFAULT_TIME_FORMAT,\n  tooltipTimeFormat: {showSeconds: false, showTimezone: true},\n};\n\nconst TabularNums = styled.div`\n  font-variant-numeric: tabular-nums;\n`;\n\nconst TimestampTooltip = styled(Tooltip)`\n  cursor: pointer;\n\n  &.bp3-popover2-target {\n    display: block;\n  }\n`;\n","import {gql, useMutation} from '@apollo/client';\n// eslint-disable-next-line no-restricted-imports\nimport {TextArea} from '@blueprintjs/core';\nimport {ButtonLink, Button, Colors, DialogBody, DialogFooter, Dialog, Group} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport 'chartjs-adapter-date-fns';\n\nimport {showCustomAlert} from '../app/CustomAlertProvider';\nimport {SharedToaster} from '../app/DomUtils';\nimport {PythonErrorInfo, PYTHON_ERROR_FRAGMENT} from '../app/PythonErrorInfo';\nimport {SensorSelector} from '../types/globalTypes';\n\nimport {\n  SetSensorCursorMutation,\n  SetSensorCursorMutationVariables,\n} from './types/SetSensorCursorMutation';\n\nexport const EditCursorDialog: React.FC<{\n  cursor: string;\n  sensorSelector: SensorSelector;\n  onClose: () => void;\n}> = ({sensorSelector, cursor, onClose}) => {\n  const [cursorValue, setCursorValue] = React.useState(cursor);\n  const [isSaving, setIsSaving] = React.useState(false);\n  const [requestSet] = useMutation<SetSensorCursorMutation, SetSensorCursorMutationVariables>(\n    SET_CURSOR_MUTATION,\n  );\n\n  const onSave = async () => {\n    setIsSaving(true);\n    const {data} = await requestSet({\n      variables: {sensorSelector, cursor: cursorValue},\n    });\n    if (data?.setSensorCursor.__typename === 'Sensor') {\n      SharedToaster.show({message: 'Cursor value updated', intent: 'success'});\n    } else if (data?.setSensorCursor) {\n      const error = data.setSensorCursor;\n      SharedToaster.show({\n        intent: 'danger',\n        message: (\n          <Group direction=\"row\" spacing={8}>\n            <div>Could not set cursor value.</div>\n            <ButtonLink\n              color={Colors.White}\n              underline=\"always\"\n              onClick={() => {\n                showCustomAlert({\n                  title: 'Python Error',\n                  body:\n                    error.__typename === 'PythonError' ? (\n                      <PythonErrorInfo error={error} />\n                    ) : (\n                      'Sensor not found'\n                    ),\n                });\n              }}\n            >\n              View error\n            </ButtonLink>\n          </Group>\n        ),\n      });\n    }\n    onClose();\n  };\n\n  return (\n    <Dialog\n      isOpen={true}\n      onClose={onClose}\n      style={{\n        width: '50vw',\n      }}\n      title={`Edit ${sensorSelector.sensorName} cursor`}\n    >\n      <DialogBody>\n        <TextArea\n          value={cursorValue}\n          onChange={(e) => setCursorValue(e.target.value)}\n          style={{width: '100%'}}\n        />\n      </DialogBody>\n      <DialogFooter>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button intent=\"primary\" onClick={onSave} disabled={isSaving}>\n          Set cursor value\n        </Button>\n      </DialogFooter>\n    </Dialog>\n  );\n};\n\nconst SET_CURSOR_MUTATION = gql`\n  mutation SetSensorCursorMutation($sensorSelector: SensorSelector!, $cursor: String) {\n    setSensorCursor(sensorSelector: $sensorSelector, cursor: $cursor) {\n      ... on Sensor {\n        id\n        sensorState {\n          id\n          status\n          typeSpecificData {\n            ... on SensorData {\n              lastCursor\n            }\n          }\n        }\n      }\n      ...PythonErrorFragment\n    }\n  }\n  ${PYTHON_ERROR_FRAGMENT}\n`;\n","import {\n  Box,\n  Button,\n  Group,\n  MetadataTableWIP,\n  PageHeader,\n  Tag,\n  Heading,\n  FontFamily,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {QueryRefreshCountdown, QueryRefreshState} from '../app/QueryRefresh';\nimport {AssetLink} from '../assets/AssetLink';\nimport {TickTag} from '../instigation/InstigationTick';\nimport {RepositoryLink} from '../nav/RepositoryLink';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {TimestampDisplay} from '../schedules/TimestampDisplay';\nimport {InstigationStatus, InstigationType} from '../types/globalTypes';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\n\nimport {EditCursorDialog} from './EditCursorDialog';\nimport {SensorSwitch} from './SensorSwitch';\nimport {SensorFragment} from './types/SensorFragment';\n\nexport const humanizeSensorInterval = (minIntervalSeconds?: number) => {\n  if (!minIntervalSeconds) {\n    minIntervalSeconds = 30; // should query sensor interval config when available\n  }\n  minIntervalSeconds = Math.max(30, minIntervalSeconds);\n  if (minIntervalSeconds < 60 || minIntervalSeconds % 60) {\n    return `~ ${minIntervalSeconds} sec`;\n  }\n  if (minIntervalSeconds === 3600) {\n    return `~ 1 hour`;\n  }\n  if (minIntervalSeconds < 3600 || minIntervalSeconds % 3600) {\n    return `~ ${minIntervalSeconds / 60} min`;\n  }\n  if (minIntervalSeconds === 86400) {\n    return `~ 1 day`;\n  }\n  if (minIntervalSeconds < 86400 || minIntervalSeconds % 86400) {\n    return `~ ${minIntervalSeconds / 3600} hours`;\n  }\n  return `~ ${minIntervalSeconds / 86400} days`;\n};\n\nexport const SensorDetails: React.FC<{\n  sensor: SensorFragment;\n  repoAddress: RepoAddress;\n  daemonHealth: boolean | null;\n  refreshState: QueryRefreshState;\n}> = ({sensor, repoAddress, daemonHealth, refreshState}) => {\n  const {\n    name,\n    sensorState: {status, ticks},\n    targets,\n    metadata,\n  } = sensor;\n\n  const [isCursorEditing, setCursorEditing] = React.useState(false);\n  const sensorSelector = {\n    sensorName: sensor.name,\n    repositoryName: repoAddress.name,\n    repositoryLocationName: repoAddress.location,\n  };\n  const repo = useRepository(repoAddress);\n  const pipelinesAndJobs = repo?.repository.pipelines;\n\n  const latestTick = ticks.length ? ticks[0] : null;\n  const targetCount = targets?.length || 0;\n\n  const targetNames = React.useMemo(\n    () => new Set((targets || []).map((target) => target.pipelineName)),\n    [targets],\n  );\n\n  const anyPipelines = React.useMemo(() => {\n    return (pipelinesAndJobs || []).some(\n      (pipelineOrJob) => !pipelineOrJob.isJob && targetNames.has(pipelineOrJob.name),\n    );\n  }, [pipelinesAndJobs, targetNames]);\n\n  const pipelineOrJobLabel = React.useMemo(() => {\n    if (anyPipelines) {\n      return targetCount > 1 ? 'Jobs / Pipelines' : 'Pipeline';\n    }\n    return targetCount > 1 ? 'Jobs' : 'Job';\n  }, [anyPipelines, targetCount]);\n\n  const cursor =\n    sensor.sensorState.typeSpecificData &&\n    sensor.sensorState.typeSpecificData.__typename === 'SensorData' &&\n    sensor.sensorState.typeSpecificData.lastCursor;\n\n  return (\n    <>\n      <PageHeader\n        title={\n          <Box flex={{direction: 'row', alignItems: 'center', gap: 12}}>\n            <Heading>{name}</Heading>\n            <SensorSwitch repoAddress={repoAddress} sensor={sensor} />\n          </Box>\n        }\n        icon=\"sensors\"\n        tags={\n          <>\n            <Tag icon=\"sensors\">\n              Sensor in <RepositoryLink repoAddress={repoAddress} />\n            </Tag>\n            {sensor.nextTick && daemonHealth && status === InstigationStatus.RUNNING ? (\n              <Tag icon=\"timer\">\n                Next tick: <TimestampDisplay timestamp={sensor.nextTick.timestamp} />\n              </Tag>\n            ) : null}\n          </>\n        }\n        right={\n          <Box margin={{top: 4}}>\n            <QueryRefreshCountdown refreshState={refreshState} />\n          </Box>\n        }\n      />\n      <MetadataTableWIP>\n        <tbody>\n          {sensor.description ? (\n            <tr>\n              <td>Description</td>\n              <td>{sensor.description}</td>\n            </tr>\n          ) : null}\n          <tr>\n            <td>Latest tick</td>\n            <td>\n              {latestTick ? (\n                <>\n                  <Box\n                    flex={{direction: 'row', gap: 8, alignItems: 'center'}}\n                    style={{marginTop: '-2px'}}\n                  >\n                    <TimestampDisplay timestamp={latestTick.timestamp} />\n                    <TickTag tick={latestTick} instigationType={InstigationType.SENSOR} />\n                  </Box>\n                </>\n              ) : (\n                'Sensor has never run'\n              )}\n            </td>\n          </tr>\n          {sensor.targets && sensor.targets.length ? (\n            <tr>\n              <td>{pipelineOrJobLabel}</td>\n              <td>\n                <Group direction=\"column\" spacing={2}>\n                  {sensor.targets.map((target) =>\n                    target.pipelineName ? (\n                      <PipelineReference\n                        key={target.pipelineName}\n                        pipelineName={target.pipelineName}\n                        pipelineHrefContext={repoAddress}\n                        isJob={!!(repo && isThisThingAJob(repo, target.pipelineName))}\n                      />\n                    ) : null,\n                  )}\n                </Group>\n              </td>\n            </tr>\n          ) : null}\n          <tr>\n            <td>Cursor</td>\n            <td>\n              {isCursorEditing ? (\n                <EditCursorDialog\n                  sensorSelector={sensorSelector}\n                  cursor={cursor ? cursor : ''}\n                  onClose={() => setCursorEditing(false)}\n                />\n              ) : null}\n              <Box flex={{direction: 'row', alignItems: 'center'}}>\n                <Box style={{fontFamily: FontFamily.monospace, marginRight: 10}}>\n                  {cursor ? cursor : 'None'}\n                </Box>\n                <Button onClick={() => setCursorEditing(true)}>Edit</Button>\n              </Box>\n            </td>\n          </tr>\n          <tr>\n            <td>Frequency</td>\n            <td>{humanizeSensorInterval(sensor.minIntervalSeconds)}</td>\n          </tr>\n          {metadata.assetKeys && metadata.assetKeys.length ? (\n            <tr>\n              <td>Monitored Assets</td>\n              <td>\n                <Box flex={{direction: 'column', gap: 2}}>\n                  {metadata.assetKeys.map((key) => (\n                    <AssetLink key={key.path.join('/')} path={key.path} icon=\"asset\" />\n                  ))}\n                </Box>\n              </td>\n            </tr>\n          ) : null}\n        </tbody>\n      </MetadataTableWIP>\n    </>\n  );\n};\n","import {gql} from '@apollo/client';\n\nimport {INSTIGATION_STATE_FRAGMENT} from '../instigation/InstigationUtils';\n\nexport const SENSOR_FRAGMENT = gql`\n  fragment SensorFragment on Sensor {\n    id\n    jobOriginId\n    name\n    description\n    minIntervalSeconds\n    nextTick {\n      timestamp\n    }\n    sensorState {\n      id\n      ...InstigationStateFragment\n    }\n    targets {\n      pipelineName\n      solidSelection\n      mode\n    }\n    metadata {\n      assetKeys {\n        path\n      }\n    }\n  }\n  ${INSTIGATION_STATE_FRAGMENT}\n`;\n","import {Alert} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DaemonHealthFragment} from '../instance/types/DaemonHealthFragment';\n\nexport const SensorInfo: React.FC<{\n  daemonHealth: DaemonHealthFragment | undefined;\n}> = ({daemonHealth}) => {\n  let healthy = false;\n\n  if (daemonHealth) {\n    const sensorHealths = daemonHealth.allDaemonStatuses.filter(\n      (daemon) => daemon.daemonType === 'SENSOR',\n    );\n    if (sensorHealths) {\n      const sensorHealth = sensorHealths[0];\n      healthy = !!(sensorHealth.required && sensorHealth.healthy);\n    }\n  }\n\n  if (healthy) {\n    return null;\n  }\n\n  return (\n    <Alert\n      intent=\"warning\"\n      title=\"The sensor daemon is not running.\"\n      description={\n        <div>\n          See the{' '}\n          <a\n            href=\"https://docs.dagster.io/deployment/dagster-daemon\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            dagster-daemon documentation\n          </a>{' '}\n          for more information on how to deploy the dagster-daemon process.\n        </div>\n      }\n    />\n  );\n};\n","import {Box, Colors, Icon, Table, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {AssetLink} from '../assets/AssetLink';\nimport {TickTag} from '../instigation/InstigationTick';\nimport {InstigatedRunStatus} from '../instigation/InstigationUtils';\nimport {PipelineReference} from '../pipelines/PipelineReference';\nimport {InstigationType} from '../types/globalTypes';\nimport {isThisThingAJob, useRepository} from '../workspace/WorkspaceContext';\nimport {RepoAddress} from '../workspace/types';\nimport {workspacePathFromAddress} from '../workspace/workspacePath';\n\nimport {humanizeSensorInterval} from './SensorDetails';\nimport {SensorSwitch} from './SensorSwitch';\nimport {SensorFragment} from './types/SensorFragment';\n\nexport const SensorsTable: React.FC<{\n  repoAddress: RepoAddress;\n  sensors: SensorFragment[];\n}> = ({repoAddress, sensors}) => {\n  const lastTick = 'Status of the last tick: One of `Started`, `Skipped`, `Requested`, `Failed`';\n  const lastRun = 'The status of the last run requested by this sensor';\n\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th style={{width: '60px'}}></th>\n          <th>Sensor Name</th>\n          <th style={{width: '15%'}}>Frequency</th>\n          <th style={{width: '10%'}}>\n            <Box flex={{gap: 8, alignItems: 'end'}}>\n              Last tick\n              <Tooltip position=\"top\" content={lastTick}>\n                <Icon name=\"info\" color={Colors.Gray500} />\n              </Tooltip>\n            </Box>\n          </th>\n          <th style={{width: '25%'}}>\n            <Box flex={{gap: 8, alignItems: 'end'}}>\n              Last Run\n              <Tooltip position=\"top\" content={lastRun}>\n                <Icon name=\"info\" color={Colors.Gray500} />\n              </Tooltip>\n            </Box>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {sensors.map((sensor) => (\n          <SensorRow key={sensor.name} repoAddress={repoAddress} sensor={sensor} />\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nconst SensorRow: React.FC<{\n  repoAddress: RepoAddress;\n  sensor: SensorFragment;\n}> = ({repoAddress, sensor}) => {\n  const repo = useRepository(repoAddress);\n  const {name, sensorState} = sensor;\n  const {ticks} = sensorState;\n  const latestTick = ticks.length ? ticks[0] : null;\n\n  return (\n    <tr key={name}>\n      <td>\n        <SensorSwitch repoAddress={repoAddress} sensor={sensor} />\n      </td>\n      <td>\n        <Box flex={{direction: 'column', gap: 4}}>\n          <span style={{fontWeight: 500}}>\n            <Link to={workspacePathFromAddress(repoAddress, `/sensors/${name}`)}>{name}</Link>\n          </span>\n          {sensor.targets && sensor.targets.length ? (\n            <Box flex={{direction: 'column', gap: 2}}>\n              {sensor.targets.map((target) => (\n                <PipelineReference\n                  key={target.pipelineName}\n                  showIcon\n                  size=\"small\"\n                  pipelineName={target.pipelineName}\n                  pipelineHrefContext={repoAddress}\n                  isJob={!!(repo && isThisThingAJob(repo, target.pipelineName))}\n                />\n              ))}\n            </Box>\n          ) : null}\n          {sensor.metadata.assetKeys && sensor.metadata.assetKeys.length ? (\n            <Box flex={{direction: 'column', gap: 2}}>\n              {sensor.metadata.assetKeys.map((key) => (\n                <AssetLink key={key.path.join('/')} path={key.path} icon=\"asset\" />\n              ))}\n            </Box>\n          ) : null}\n        </Box>\n      </td>\n      <td>{humanizeSensorInterval(sensor.minIntervalSeconds)}</td>\n      <td>\n        {latestTick ? (\n          <TickTag tick={latestTick} instigationType={InstigationType.SENSOR} />\n        ) : (\n          <span style={{color: Colors.Gray300}}>None</span>\n        )}\n      </td>\n      <td>\n        <div style={{display: 'flex'}}>\n          <InstigatedRunStatus instigationState={sensorState} />\n        </div>\n      </td>\n    </tr>\n  );\n};\n","import {gql} from '@apollo/client';\nimport {ConfigSchema} from '@dagster-io/ui';\n\nexport type {ConfigSchema as ConfigTypeSchema};\n\nexport const CONFIG_TYPE_SCHEMA_FRAGMENT = gql`\n  fragment ConfigTypeSchemaFragment on ConfigType {\n    __typename\n    ... on EnumConfigType {\n      givenName\n      values {\n        value\n        description\n      }\n    }\n    ... on RegularConfigType {\n      givenName\n    }\n    key\n    description\n    isSelector\n    typeParamKeys\n    ... on CompositeConfigType {\n      fields {\n        name\n        description\n        isRequired\n        configTypeKey\n        defaultValueAsJson\n      }\n    }\n    ... on ScalarUnionConfigType {\n      scalarTypeKey\n      nonScalarTypeKey\n    }\n    ... on MapConfigType {\n      keyLabelName\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\nimport {Colors} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface ITypeWithTooltipProps {\n  type: {\n    name: string | null;\n    displayName: string;\n    description: string | null;\n  };\n}\n\nexport const TypeWithTooltip = (props: ITypeWithTooltipProps) => {\n  const {name, displayName} = props.type;\n\n  // TODO: link to most inner type\n  if (name) {\n    return (\n      <TypeLink to={{search: `?tab=types&typeName=${displayName}`}}>\n        <TypeName>{displayName}</TypeName>\n      </TypeLink>\n    );\n  }\n\n  return <TypeName>{displayName}</TypeName>;\n};\n\nexport const DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT = gql`\n  fragment DagsterTypeWithTooltipFragment on DagsterType {\n    name\n    displayName\n    description\n  }\n`;\n\nconst TypeLink = styled(Link)`\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst TypeName = styled.code`\n  background: ${Colors.Blue50};\n  border: none;\n  padding: 1px 4px;\n  border-bottom: 1px solid ${Colors.Blue500};\n  border-radius: 0.25em;\n  font-size: 14px;\n  font-weight: 500;\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  vertical-align: middle;\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {AnchorButton as BlueprintAnchorButton} from '@blueprintjs/core';\nimport {\n  intentToFillColor,\n  intentToStrokeColor,\n  intentToTextColor,\n  StyledButton,\n  StyledButtonText,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\n\ninterface AnchorButtonProps\n  extends Omit<React.ComponentProps<typeof BlueprintAnchorButton>, 'loading' | 'onClick' | 'type'>,\n    LinkProps {\n  label?: React.ReactNode;\n}\n\nexport const AnchorButton = React.forwardRef(\n  (props: AnchorButtonProps, ref: React.ForwardedRef<HTMLAnchorElement>) => {\n    const {children, icon, intent, outlined, rightIcon, ...rest} = props;\n    return (\n      <StyledButton\n        {...rest}\n        as={Link}\n        $fillColor={intentToFillColor(intent, outlined)}\n        $strokeColor={intentToStrokeColor(intent, outlined)}\n        $textColor={intentToTextColor(intent, outlined)}\n        ref={ref}\n      >\n        {icon || null}\n        {children ? <StyledButtonText>{children}</StyledButtonText> : null}\n        {rightIcon || null}\n      </StyledButton>\n    );\n  },\n);\n\nAnchorButton.displayName = 'AnchorButton';\n","import {Colors, IconWrapper} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\nexport const ClearButton = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  margin: 0 -2px 0 0;\n  padding: 2px;\n\n  ${IconWrapper} {\n    background-color: ${Colors.Gray400};\n    transition: background-color 100ms linear;\n  }\n\n  :hover ${IconWrapper}, :focus ${IconWrapper} {\n    background-color: ${Colors.Gray700};\n  }\n\n  :active ${IconWrapper} {\n    background-color: ${Colors.Dark};\n  }\n\n  :focus {\n    outline: none;\n  }\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {Intent, PopoverPosition} from '@blueprintjs/core';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Colors,\n  Icon,\n  MenuItem,\n  Menu,\n  Popover,\n  TextInput,\n  Tooltip,\n} from '@dagster-io/ui';\nimport isEqual from 'lodash/isEqual';\nimport uniq from 'lodash/uniq';\nimport * as React from 'react';\nimport {Link} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\nimport {filterByQuery, GraphQueryItem} from '../app/GraphQueryImpl';\nimport {dynamicKeyWithoutIndex, isDynamicStep} from '../gantt/DynamicStepSupport';\nimport {GraphExplorerSolidHandleFragment_solid} from '../pipelines/types/GraphExplorerSolidHandleFragment';\nimport {workspacePipelinePath} from '../workspace/workspacePath';\n\ninterface GraphQueryInputProps {\n  intent?: Intent;\n  items: GraphQueryItem[];\n  value: string;\n  placeholder: string;\n  autoFocus?: boolean;\n  presets?: {name: string; value: string}[];\n  width?: string | number;\n  popoverPosition?: PopoverPosition;\n  className?: string;\n  disabled?: boolean;\n\n  linkToPreview?: {\n    repoName: string;\n    repoLocation: string;\n    pipelineName: string;\n    isJob: boolean;\n  };\n\n  flattenGraphsEnabled?: boolean;\n  flattenGraphs?: boolean;\n  setFlattenGraphs?: () => void;\n  onChange: (value: string) => void;\n  onKeyDown?: (e: React.KeyboardEvent<any>) => void;\n  onFocus?: () => void;\n  onBlur?: (value: string) => void;\n  autoApplyChanges?: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\ninterface SuggestionItem {\n  name: string;\n  isGraph: boolean;\n}\n\n/** Generates placeholder text for the solid query box that includes a\n * practical example from the current DAG by finding the solid with the highest\n * number of immediate input or output connections and randomly highlighting\n * either the ++solid or solid++ or solid+* syntax.\n */\nconst placeholderTextForItems = (base: string, items: GraphQueryItem[]) => {\n  const seed = items.length % 3;\n\n  let placeholder = base;\n  if (items.length === 0) {\n    return placeholder;\n  }\n\n  const ranked = items.map<{\n    incount: number;\n    outcount: number;\n    name: string;\n  }>((s) => ({\n    incount: s.inputs.reduce((sum, o) => sum + o.dependsOn.length, 0),\n    outcount: s.outputs.reduce((sum, o) => sum + o.dependedBy.length, 0),\n    name: s.name,\n  }));\n\n  if (seed === 0) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+*)`;\n  } else if (seed === 1) {\n    const example = ranked.sort((a, b) => b.outcount - a.outcount)[0];\n    placeholder = `${placeholder} (ex: ${example!.name}+)`;\n  } else if (seed === 2) {\n    const example = ranked.sort((a, b) => b.incount - a.incount)[0];\n    placeholder = `${placeholder} (ex: ++${example!.name})`;\n  }\n  return placeholder;\n};\n\nconst intentToStrokeColor = (intent: Intent | undefined) => {\n  switch (intent) {\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    case 'primary':\n    default:\n      return Colors.Gray300;\n  }\n};\n\nconst buildSuggestions = (\n  lastElementName: string,\n  items: GraphQueryItem[] | GraphExplorerSolidHandleFragment_solid[],\n  suffix: string,\n) => {\n  const available: SuggestionItem[] = items.map((item) => {\n    const solidItem = item as GraphExplorerSolidHandleFragment_solid;\n    const isGraph =\n      solidItem.definition && solidItem.definition.__typename === 'CompositeSolidDefinition';\n\n    return {name: item.name, isGraph};\n  });\n\n  for (const item of available) {\n    if (isDynamicStep(item.name)) {\n      available.push({name: dynamicKeyWithoutIndex(item.name), isGraph: item.isGraph});\n    }\n  }\n\n  const lastElementLower = lastElementName?.toLowerCase();\n  const matching =\n    lastElementLower && !suffix\n      ? uniq(available)\n          .sort()\n          .filter((n) => n.name.toLowerCase().startsWith(lastElementLower))\n      : [];\n\n  // No need to show a match if our string exactly matches the one suggestion.\n  if (matching.length === 1 && matching[0].name.toLowerCase() === lastElementLower) {\n    return [];\n  }\n\n  return matching;\n};\n\nexport const GraphQueryInput = React.memo(\n  React.forwardRef((props: GraphQueryInputProps, ref) => {\n    const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [pendingValue, setPendingValue] = React.useState<string>(props.value);\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const flattenGraphsEnabled = props.flattenGraphsEnabled || false;\n\n    React.useEffect(() => {\n      // props.value is our source of truth, but we hold \"un-committed\" changes in\n      // pendingValue while the field is being edited. Ensure the pending value\n      // is synced whenever props.value changes.\n      setPendingValue(props.value);\n    }, [props.value]);\n\n    const lastClause = /(\\*?\\+*)([\\w\\d\\[\\]>_\\/-]+)(\\+*\\*?)$/.exec(pendingValue);\n\n    const [, prefix, lastElementName, suffix] = lastClause || [];\n    const suggestions = React.useMemo(\n      () => buildSuggestions(lastElementName, props.items, suffix),\n      [lastElementName, props.items, suffix],\n    );\n\n    const onConfirmSuggestion = (suggestion: string) => {\n      const preceding = lastClause ? pendingValue.substr(0, lastClause.index) : '';\n      setPendingValue(preceding + prefix + `\"${suggestion}\"` + suffix);\n    };\n\n    React.useEffect(() => {\n      if (!active) {\n        return;\n      }\n      // Relocate the currently active item in the latest suggestions list\n      const pos = suggestions.map((a) => a.name).findIndex((a) => a === active.text);\n\n      // The new index is the index of the active item, or whatever item\n      // is now at it's location if it's gone, bounded to the array.\n      let nextIdx = pos !== -1 ? pos : active.idx;\n      nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n      if (!suggestions[nextIdx]) {\n        return;\n      }\n      const nextText = suggestions[nextIdx].name;\n\n      if (nextIdx !== active.idx || nextText !== active.text) {\n        setActive({text: nextText, idx: nextIdx});\n      }\n    }, [active, suggestions]);\n\n    React.useImperativeHandle(ref, () => ({\n      focus() {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      },\n    }));\n\n    const onKeyDown = (e: React.KeyboardEvent<any>) => {\n      if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n        if (active && active.text) {\n          onConfirmSuggestion(active.text);\n          e.preventDefault();\n          e.stopPropagation();\n        } else {\n          e.currentTarget.blur();\n        }\n        setActive(null);\n      }\n\n      // The up/down arrow keys shift selection in the dropdown.\n      // Note: The first down arrow press activates the first item.\n      const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n      if (shift && suggestions.length > 0) {\n        e.preventDefault();\n        let idx = (active ? active.idx : -1) + shift;\n        idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n        setActive({text: suggestions[idx].name, idx});\n      }\n\n      props.onKeyDown?.(e);\n    };\n\n    const OpSelectionWrapperDivRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n      const clickListener = (event: MouseEvent) => {\n        const OpSelectionWrapperDivElement = OpSelectionWrapperDivRef.current;\n        const inputElement = inputRef.current;\n        const {target} = event;\n\n        if (!flattenGraphsEnabled) {\n          return;\n        }\n        // Make TypeScript happy\n        if (\n          OpSelectionWrapperDivElement == null ||\n          inputElement == null ||\n          !(target instanceof Node)\n        ) {\n          return;\n        }\n\n        // `true` if user clicked on either the `OpSelectionWrapperDivElement` itself, or its descendant\n        const shouldWrapperGetFocus = OpSelectionWrapperDivElement.contains(target);\n        setFocused(shouldWrapperGetFocus);\n\n        const shouldTextInputGetFocus = inputElement.contains(target);\n        if (shouldTextInputGetFocus) {\n          inputElement.focus();\n        }\n      };\n\n      document.addEventListener('click', clickListener);\n\n      return () => {\n        document.removeEventListener('click', clickListener);\n      };\n    }, [flattenGraphsEnabled]);\n\n    const uncomitted = (pendingValue || '*') !== (props.value || '*');\n    const flattenGraphsFlag = props.flattenGraphs ? '!' : '';\n\n    const opCountInfo = props.linkToPreview && (\n      <OpCountWrap $hasWrap={flattenGraphsEnabled}>\n        {`${filterByQuery(props.items, pendingValue).all.length} matching ops`}\n        <Link\n          target=\"_blank\"\n          style={{display: 'flex', alignItems: 'center', gap: 4}}\n          onMouseDown={(e) => e.currentTarget.click()}\n          to={workspacePipelinePath({\n            ...props.linkToPreview,\n            pipelineName: `${props.linkToPreview.pipelineName}~${flattenGraphsFlag}${pendingValue}`,\n          })}\n        >\n          Graph Preview <Icon color={Colors.Link} name=\"open_in_new\" />\n        </Link>\n      </OpCountWrap>\n    );\n\n    return (\n      <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n        <Popover\n          enforceFocus={!flattenGraphsEnabled} // Defer focus to be manually managed\n          isOpen={focused}\n          position={props.popoverPosition || 'top-left'}\n          content={\n            suggestions.length ? (\n              <Menu style={{width: props.width || '24vw'}}>\n                {suggestions.slice(0, 15).map((suggestion) => (\n                  <MenuItem\n                    icon={suggestion.isGraph ? 'job' : 'op'}\n                    key={suggestion.name}\n                    text={suggestion.name}\n                    active={active ? active.text === suggestion.name : false}\n                    onMouseDown={(e: React.MouseEvent<any>) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      onConfirmSuggestion(suggestion.name);\n                    }}\n                  />\n                ))}\n              </Menu>\n            ) : (\n              <div />\n            )\n          }\n        >\n          <div style={{position: 'relative'}} ref={OpSelectionWrapperDivRef}>\n            <TextInput\n              disabled={props.disabled}\n              value={pendingValue}\n              icon=\"op_selector\"\n              strokeColor={intentToStrokeColor(props.intent)}\n              autoFocus={props.autoFocus}\n              placeholder={placeholderTextForItems(props.placeholder, props.items)}\n              onChange={(e: React.ChangeEvent<any>) => {\n                setPendingValue(e.target.value);\n                props.autoApplyChanges && props.onChange(e.target.value);\n              }}\n              onFocus={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(true);\n                }\n                props.onFocus?.();\n              }}\n              onBlur={() => {\n                if (!flattenGraphsEnabled) {\n                  // Defer focus to be manually managed\n                  setFocused(false);\n                }\n                props.onChange(pendingValue);\n                props.onBlur?.(pendingValue);\n              }}\n              onKeyDown={onKeyDown}\n              style={{\n                width: props.width || '24vw',\n                paddingRight: focused && uncomitted ? 55 : '',\n              }}\n              className={props.className}\n              ref={inputRef}\n            />\n            {focused && uncomitted && <EnterHint>Enter</EnterHint>}\n            {focused &&\n              props.linkToPreview &&\n              (flattenGraphsEnabled ? (\n                <OpInfoWrap>\n                  <Box flex={{direction: 'row', alignItems: 'center', gap: 8}}>\n                    <Checkbox\n                      label=\"Flatten subgraphs\"\n                      checked={props.flattenGraphs ?? false}\n                      onChange={() => {\n                        props.setFlattenGraphs?.();\n                      }}\n                      format=\"switch\"\n                    />\n                    <Tooltip\n                      content=\"Flatten subgraphs to select ops within nested graphs\"\n                      placement=\"right\"\n                    >\n                      <Icon name=\"info\" color={Colors.Gray500} />\n                    </Tooltip>\n                  </Box>\n                  {opCountInfo}\n                </OpInfoWrap>\n              ) : (\n                opCountInfo\n              ))}\n          </div>\n        </Popover>\n        {props.presets &&\n          (props.presets.find((p) => p.value === pendingValue) ? (\n            <Button\n              icon={<Icon name=\"layers\" />}\n              rightIcon={<Icon name=\"cancel\" />}\n              onClick={() => props.onChange('*')}\n              intent=\"none\"\n            />\n          ) : (\n            <Popover\n              position=\"top\"\n              content={\n                <Menu>\n                  {props.presets.map((preset) => (\n                    <MenuItem\n                      key={preset.name}\n                      text={preset.name}\n                      onMouseDown={(e: React.MouseEvent<any>) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        props.onChange(preset.value);\n                      }}\n                    />\n                  ))}\n                </Menu>\n              }\n            >\n              <Button\n                icon={<Icon name=\"layers\" />}\n                rightIcon={<Icon name=\"expand_less\" />}\n                intent=\"none\"\n              />\n            </Popover>\n          ))}\n      </Box>\n    );\n  }),\n\n  (prevProps, nextProps) =>\n    prevProps.items === nextProps.items &&\n    prevProps.width === nextProps.width &&\n    prevProps.value === nextProps.value &&\n    isEqual(prevProps.presets, nextProps.presets),\n);\n\nconst OpInfoWrap = styled.div`\n  width: 350px;\n  padding: 10px 16px 10px 16px;\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  position: absolute;\n  top: 100%;\n  margin-top: 2px;\n  font-size: 0.85rem;\n  background: ${Colors.White};\n  color: ${Colors.Gray600};\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);\n  z-index: 2;\n  left: 0;\n`;\n\nconst OpCountWrap = styled(OpInfoWrap)<{$hasWrap: boolean}>`\n  margin-top: ${(p) => (p.$hasWrap ? 0 : 2)}px;\n`;\n\nconst EnterHint = styled.div`\n  position: absolute;\n  right: 6px;\n  top: 5px;\n  border-radius: 5px;\n  border: 1px solid ${Colors.Gray500};\n  background: ${Colors.White};\n  font-weight: 500;\n  font-size: 12px;\n  color: ${Colors.Gray500};\n  padding: 2px 6px;\n`;\n","import {ApolloError, QueryResult} from '@apollo/client';\nimport {Box, NonIdealState, Spinner} from '@dagster-io/ui';\nimport * as React from 'react';\n\ninterface ILoadingProps<TData> {\n  queryResult: QueryResult<TData, any>;\n  children: (data: TData) => React.ReactNode;\n  renderError?: (error: ApolloError) => React.ReactNode;\n  allowStaleData?: boolean;\n  purpose: 'section' | 'page';\n}\n\nconst BLANK_LOADING_DELAY_MSEC = 500;\n\nexport const Loading = <TData extends Record<string, any>>(props: ILoadingProps<TData>) => {\n  const {children, purpose, allowStaleData = false, renderError} = props;\n  const {error, data, loading} = props.queryResult;\n\n  const [blankLoading, setBlankLoading] = React.useState(true);\n  const isLoading = !data || (loading && !allowStaleData) || Object.keys(data as any).length === 0;\n\n  React.useEffect(() => {\n    let timer: ReturnType<typeof setTimeout> | undefined;\n\n    // Wait a brief moment so that we don't awkwardly flash the loading bar.\n    // This is often enough time for data to become available.\n    if (isLoading) {\n      timer = setTimeout(() => setBlankLoading(false), BLANK_LOADING_DELAY_MSEC);\n    } else {\n      setBlankLoading(true);\n    }\n\n    return () => {\n      timer && clearTimeout(timer);\n    };\n  }, [isLoading]);\n\n  // either error.networkError or error.graphQLErrors is set,\n  // so check that the error is not just a transient network error\n  if (error) {\n    if (renderError) {\n      return <>{renderError(error)}</>;\n    }\n    if (!error.networkError) {\n      return (\n        <Box padding={64} flex={{justifyContent: 'center'}}>\n          <NonIdealState icon=\"error\" title=\"GraphQL Error - see console for details\" />\n        </Box>\n      );\n    }\n  }\n\n  if (isLoading) {\n    return blankLoading ? null : <LoadingSpinner purpose={purpose} />;\n  }\n\n  return <>{children(data as TData)}</>;\n};\n\nexport const LoadingSpinner: React.FC<{purpose: 'page' | 'section'}> = ({purpose}) => {\n  const isPage = purpose === 'page';\n  return (\n    <Box\n      padding={64}\n      flex={{\n        grow: isPage ? 1 : undefined,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      style={isPage ? {height: '100%'} : undefined}\n    >\n      <Spinner purpose={purpose} />\n    </Box>\n  );\n};\n\nLoading.defaultProps = {\n  purpose: 'page',\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Box,\n  Colors,\n  CommonMenuItemProps,\n  IconWrapper,\n  iconWithColor,\n  MenuItem,\n} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface MenuLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof MenuItem>, 'icon' | 'onClick'>,\n    LinkProps {}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuLink: React.FC<MenuLinkProps> = (props) => {\n  const {icon, intent, text, disabled, ...rest} = props;\n\n  if (disabled) {\n    return <MenuItem disabled icon={icon} intent={intent} text={text} />;\n  }\n  return (\n    <StyledMenuLink {...rest}>\n      <Box flex={{direction: 'row', gap: 8, alignItems: 'center'}}>\n        {iconWithColor(icon, intent)}\n        <div>{text}</div>\n      </Box>\n    </StyledMenuLink>\n  );\n};\n\nconst StyledMenuLink = styled(Link)`\n  text-decoration: none;\n\n  border-radius: 4px;\n  display: block;\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition: background-color 50ms, box-shadow 150ms;\n  align-items: flex-start;\n  user-select: none;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &&&:link,\n  &&&:visited,\n  &&&:hover,\n  &&&:active {\n    color: ${Colors.Gray900};\n    text-decoration: none;\n  }\n\n  &&&:hover {\n    background: ${Colors.Gray100};\n  }\n`;\n","import {Colors} from '@dagster-io/ui';\nimport styled from 'styled-components/macro';\n\ninterface Props {\n  $top: number;\n}\n\n/**\n * Wrap a `Table` component with this to cause its `thead` to be sticky while scrolling.\n *\n * `$top` is the pixel value of the point in the scrolling container that the `thead`\n * should stick to. Probably `0`.\n */\nexport const StickyTableContainer = styled.div<Props>`\n  thead tr {\n    position: sticky;\n    top: ${({$top}) => $top}px;\n    background-color: ${Colors.White};\n    z-index: 1;\n  }\n\n  /**\n   * Safari won't render a box-shadow on the \\`tr\\` and we don't want an inset\n   * box-shadow on \\`th\\` elements because it will create a double-border on the\n   * bottom of the \\`thead\\` in the non-stuck state.\n   *\n   * We therefore render an absoulutely-positioned keyline on the bottom of the\n   * \\`th\\` elements. This will appear as a border in the stuck state, and will\n   * overlap the top box-shadow of the first row in the non-stuck state.\n   */\n  thead tr th {\n    position: relative;\n  }\n\n  thead tr th::after {\n    content: '';\n    display: block;\n    height: 1px;\n    background-color: ${Colors.KeylineGray};\n    position: absolute;\n    bottom: -1px;\n    left: 0;\n    right: 0;\n  }\n`;\n","import {TabStyleProps, getTabA11yProps, getTabContent, tabCSS} from '@dagster-io/ui';\nimport * as React from 'react';\nimport {Link, LinkProps} from 'react-router-dom';\nimport styled from 'styled-components/macro';\n\ninterface TabLinkProps extends TabStyleProps, Omit<LinkProps, 'title'> {\n  title?: React.ReactNode;\n}\n\nexport const TabLink = styled((props: TabLinkProps) => {\n  const {to, title, ...rest} = props;\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof title === 'string' ? title : undefined;\n\n  return (\n    <Link to={to} title={titleText} {...containerProps} {...rest}>\n      {content}\n    </Link>\n  );\n})<TabLinkProps>`\n  ${tabCSS}\n`;\n","import LRUCache from 'lru-cache';\nimport remark from 'remark';\nimport gfm from 'remark-gfm';\nimport toPlainText from 'remark-plain-text';\n\nconst Remark = remark()\n  .use(gfm)\n  .use(toPlainText as any);\nconst markdownCache = new LRUCache<string, string>({max: 500});\nexport const markdownToPlaintext = (md: string) => {\n  // Compile the Markdown file to plain text:\n  const cached = markdownCache.get(md);\n  if (cached) {\n    return cached;\n  }\n  const str = Remark.processSync(md).toString();\n  markdownCache.set(md, str);\n  return str;\n};\n","import {Button, Dialog, DialogBody, DialogFooter, Icon, Tooltip} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {DISABLED_MESSAGE, usePermissions} from '../app/Permissions';\nimport {PythonErrorInfo} from '../app/PythonErrorInfo';\nimport {\n  reloadFnForWorkspace,\n  useRepositoryLocationReload,\n} from '../nav/useRepositoryLocationReload';\n\nimport {RepositoryLocationErrorDialog} from './RepositoryLocationErrorDialog';\n\nexport const ReloadAllButton: React.FC<{label?: string}> = ({label = 'Reload all'}) => {\n  const {canReloadWorkspace} = usePermissions();\n  const {reloading, tryReload, error, errorLocationId} = useRepositoryLocationReload({\n    scope: 'workspace',\n    reloadFn: reloadFnForWorkspace,\n  });\n\n  const [isOpen, setIsOpen] = React.useState(!!error);\n  React.useEffect(() => setIsOpen(!!error), [error]);\n\n  if (!canReloadWorkspace) {\n    return (\n      <Tooltip content={DISABLED_MESSAGE}>\n        <Button icon={<Icon name=\"refresh\" />} disabled intent=\"none\">\n          {label}\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <Button onClick={tryReload} icon={<Icon name=\"refresh\" />} loading={reloading} intent=\"none\">\n        {label}\n      </Button>\n      {errorLocationId ? (\n        <RepositoryLocationErrorDialog\n          error={error}\n          location={errorLocationId}\n          reloading={reloading}\n          onTryReload={tryReload}\n          onDismiss={() => setIsOpen(false)}\n          isOpen={isOpen}\n        />\n      ) : (\n        <Dialog\n          icon=\"error\"\n          title=\"Reload error\"\n          canEscapeKeyClose={false}\n          canOutsideClickClose={false}\n          style={{width: '90%'}}\n          isOpen={isOpen}\n        >\n          <DialogBody>{error && <PythonErrorInfo error={error} />}</DialogBody>\n          <DialogFooter>\n            <Button onClick={() => setIsOpen(false)}>Dismiss</Button>\n          </DialogFooter>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import * as React from 'react';\n\nimport {RunFragmentForRepositoryMatch} from '../runs/types/RunFragmentForRepositoryMatch';\n\nimport {DagsterRepoOption, useRepositoryOptions} from './WorkspaceContext';\nimport {findRepoContainingPipeline, repoContainsPipeline} from './findRepoContainingPipeline';\n\ntype MatchType = {\n  match: DagsterRepoOption;\n  type: 'origin-and-snapshot' | 'origin-only' | 'snapshot-only' | 'pipeline-name-only';\n};\n\n/**\n * Given a Run fragment, find the repository that contains its pipeline.\n */\nexport const useRepositoryForRun = (\n  run: RunFragmentForRepositoryMatch | null | undefined,\n): MatchType | null => {\n  const {options} = useRepositoryOptions();\n\n  const repoMatch = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipelineName;\n    // Try to match the pipeline name within the specified origin, if possible.\n    const origin = run.repositoryOrigin;\n\n    if (!origin) {\n      return null;\n    }\n\n    const location = origin?.repositoryLocationName;\n    const name = origin?.repositoryName;\n\n    const match = options.find(\n      (option) => option.repository.name === name && option.repositoryLocation.name === location,\n    );\n\n    // The origin repo is loaded. Verify that a pipeline with this name exists and return the match if so.\n    return match && repoContainsPipeline(match, pipelineName) ? match : null;\n  }, [options, run]);\n\n  const snapshotMatches = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipelineName;\n    const snapshotId = run.pipelineSnapshotId;\n\n    // Find the repository that contains the specified pipeline name and snapshot ID, if any.\n    if (pipelineName && snapshotId) {\n      const snapshotMatches = findRepoContainingPipeline(options, pipelineName, snapshotId);\n      if (snapshotMatches.length) {\n        return snapshotMatches;\n      }\n    }\n\n    return null;\n  }, [options, run]);\n\n  const pipelineNameMatches = React.useMemo(() => {\n    if (!run) {\n      return null;\n    }\n\n    const pipelineName = run.pipelineName;\n\n    // There is no origin repo. Find any repos that might contain a matching pipeline name.\n    const possibleMatches = findRepoContainingPipeline(options, pipelineName);\n    return possibleMatches.length ? possibleMatches : null;\n  }, [options, run]);\n\n  if (repoMatch) {\n    if (snapshotMatches) {\n      const repoAndSnapshotMatch = snapshotMatches.find(\n        (repoOption) =>\n          repoOption.repository.name === repoMatch.repository.name &&\n          repoOption.repositoryLocation.name === repoMatch.repositoryLocation.name,\n      );\n      if (repoAndSnapshotMatch) {\n        return {match: repoAndSnapshotMatch, type: 'origin-and-snapshot'};\n      }\n    }\n\n    return {match: repoMatch, type: 'origin-only'};\n  }\n\n  if (snapshotMatches) {\n    return {match: snapshotMatches[0], type: 'snapshot-only'};\n  }\n\n  if (pipelineNameMatches) {\n    return {match: pipelineNameMatches[0], type: 'pipeline-name-only'};\n  }\n\n  return null;\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Group} from './Group';\nimport {IconName, Icon} from './Icon';\n\nexport type AlertIntent = 'info' | 'warning' | 'error' | 'success';\n\ninterface Props {\n  intent: AlertIntent;\n  title: React.ReactNode;\n  description?: React.ReactNode;\n  onClose?: () => void;\n}\n\nexport const Alert: React.FC<Props> = (props) => {\n  const {intent, title, description, onClose} = props;\n\n  const {backgroundColor, borderColor, icon, iconColor, textColor} = React.useMemo(() => {\n    switch (intent) {\n      case 'warning':\n        return {\n          backgroundColor: Colors.Yellow50,\n          borderColor: Colors.Yellow500,\n          icon: 'warning',\n          iconColor: Colors.Yellow500,\n          textColor: Colors.Yellow700,\n        };\n      case 'error':\n        return {\n          backgroundColor: Colors.Red50,\n          borderColor: Colors.Red500,\n          icon: 'error',\n          iconColor: Colors.Red500,\n          textColor: Colors.Red700,\n        };\n      case 'success':\n        return {\n          backgroundColor: Colors.Green50,\n          borderColor: Colors.Green500,\n          icon: 'done',\n          iconColor: Colors.Green500,\n          textColor: Colors.Green700,\n        };\n      case 'info':\n      default:\n        return {\n          backgroundColor: Colors.Blue50,\n          borderColor: Colors.Blue500,\n          icon: 'info',\n          iconColor: Colors.Blue500,\n          textColor: Colors.Blue700,\n        };\n    }\n  }, [intent]);\n\n  return (\n    <AlertContainer\n      background={backgroundColor}\n      $borderColor={borderColor}\n      $textColor={textColor}\n      padding={{horizontal: 16, vertical: 12}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}}>\n        <Group direction=\"row\" spacing={12} alignItems=\"flex-start\">\n          <Icon name={icon as IconName} color={iconColor} />\n          <Group direction=\"column\" spacing={8}>\n            <AlertTitle>{title}</AlertTitle>\n            {description ? <AlertDescription>{description}</AlertDescription> : null}\n          </Group>\n        </Group>\n        {!!onClose ? (\n          <ButtonWrapper onClick={onClose}>\n            <Icon name=\"close\" color={textColor} />\n          </ButtonWrapper>\n        ) : null}\n      </Box>\n    </AlertContainer>\n  );\n};\n\nAlert.defaultProps = {\n  intent: 'info',\n};\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  flex-direction: column;\n  height: fit-content;\n`;\n\nconst AlertContainer = styled(Box)<{$borderColor: string; $textColor: string}>`\n  box-shadow: inset 4px 0 ${({$borderColor}) => $borderColor};\n  color: ${({$textColor}) => $textColor};\n\n  a:link,\n  a:visited,\n  a:hover,\n  a:active {\n    color: ${({$textColor}) => $textColor};\n    text-decoration: underline;\n  }\n`;\n\nconst AlertTitle = styled.div`\n  font-weight: 600;\n`;\n\nconst AlertDescription = styled.div`\n  font-weight: 400;\n`;\n","import * as React from 'react';\n\nimport {BaseButton} from './BaseButton';\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Tooltip} from './Tooltip';\n\nexport type ButtonGroupItem<T> = {\n  id: T;\n  label?: React.ReactNode;\n  icon?: IconName;\n  tooltip?: string;\n};\n\ninterface Props<T> {\n  activeItems?: Set<T>;\n  buttons: ButtonGroupItem<T>[];\n  onClick: (id: T, e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport const ButtonGroup = <T extends string | number>(props: Props<T>) => {\n  const {activeItems, buttons, onClick} = props;\n  return (\n    <Box flex={{direction: 'row', alignItems: 'center', gap: 4}}>\n      {buttons.map((button) => {\n        const {id, icon, label, tooltip} = button;\n        const isActive = activeItems?.has(id);\n        const buttonElement = (\n          <BaseButton\n            key={id}\n            fillColor={isActive ? Colors.Gray200 : Colors.Gray50}\n            textColor={isActive ? Colors.Gray900 : Colors.Gray700}\n            strokeColor=\"transparent\"\n            icon={\n              icon ? <Icon name={icon} color={isActive ? Colors.Gray900 : Colors.Gray700} /> : null\n            }\n            label={label}\n            onClick={(e) => onClick(id, e)}\n          />\n        );\n\n        if (tooltip) {\n          return (\n            <Tooltip content={tooltip} position=\"top\" key={id}>\n              {buttonElement}\n            </Tooltip>\n          );\n        }\n\n        return buttonElement;\n      })}\n    </Box>\n  );\n};\n","import 'codemirror/lib/codemirror.css';\n\nimport './configeditor/codemirror-yaml/mode'; // eslint-disable-line import/no-duplicates\n\nimport * as React from 'react';\nimport {Controlled, UnControlled as Uncontrolled} from 'react-codemirror2';\nimport {createGlobalStyle} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {Icons} from './Icon';\nimport {FontFamily} from './styles';\n\nexport const DagitCodeMirrorStyle = createGlobalStyle`\n  .react-codemirror2 .CodeMirror {\n    font-family: ${FontFamily.monospace};\n    font-size: 16px;\n\n    /* Note: Theme overrides */\n    &.cm-s-default .cm-comment {\n      color: #999;\n    }\n  }\n\n  .CodeMirror-gutter-elt {\n    .CodeMirror-lint-marker-error {\n      background-image: none;\n      background: ${Colors.Red500};\n      mask-image: url(${Icons.error});\n      mask-size: cover;\n      margin-bottom: 2px;\n    }\n  }\n\n  .CodeMirror-hint,\n  .CodeMirror-lint-marker-error,\n  .CodeMirror-lint-marker-warning,\n  .CodeMirror-lint-message-error,\n  .CodeMirror-lint-message-warning {\n    font-family: ${FontFamily.monospace};\n    font-size: 16px;\n  }\n\n  .react-codemirror2 .CodeMirror.cm-s-dagit {\n    .cm-atom {\n      color: ${Colors.Blue700};\n    }\n\n    .cm-comment {\n      color: ${Colors.Gray400};\n    }\n\n    .cm-meta {\n      color: ${Colors.Gray700};\n    }\n\n    .cm-number {\n      color: ${Colors.Red700};\n    }\n\n    .cm-string {\n      color: ${Colors.Green700};\n    }\n\n    .cm-string-2 {\n      color: ${Colors.Olive700};\n    }\n\n    .cm-variable-2 {\n      color: ${Colors.Blue500};\n    }\n\n    .cm-keyword {\n      color: ${Colors.Yellow700};\n    }\n\n    .CodeMirror-selected {\n      background-color: ${Colors.Blue50};\n    }\n\n    .CodeMirror-gutters {\n      background-color: ${Colors.Gray50};\n    }\n\n    .cm-indent {\n      display: inline-block;\n\n      &.cm-zero {\n        box-shadow: -1px 0 0 ${Colors.Green200};\n      }\n\n      &.cm-one {\n        box-shadow: -1px 0 0 ${Colors.Blue100};\n      }\n\n      &.cm-two {\n        box-shadow: -1px 0 0 ${Colors.LightPurple};\n      }\n\n      &.cm-three {\n        box-shadow: -1px 0 0 ${Colors.Red200};\n      }\n\n      &.cm-four {\n        box-shadow: -1px 0 0 ${Colors.Yellow200};\n      }\n\n      &.cm-five {\n        box-shadow: -1px 0 0 ${Colors.Olive200};\n      }\n\n      &.cm-six {\n        box-shadow: -1px 0 0 ${Colors.Gray300};\n      }\n    }\n  }\n\n  div.CodeMirror-lint-tooltip {\n    background: rgba(255, 247, 231, 1);\n    border: 1px solid ${Colors.Gray200};\n  }\n\n  .CodeMirror-lint-message {\n    background: transparent;\n  }\n  .CodeMirror-lint-message.CodeMirror-lint-message-error {\n    background: transparent;\n  }\n\n  /* Ensure that hints aren't vertically cutoff*/\n  .CodeMirror-hint div {\n    max-height: none !important;\n  }\n`;\n\ninterface ThemeProp {\n  theme?: string[];\n}\n\nconst makeThemeString = (theme: string[] = []) => [...theme, 'dagit'].join(' ');\n\nexport const StyledReadOnlyCodeMirror = (\n  props: React.ComponentProps<typeof Uncontrolled> & ThemeProp,\n) => {\n  const {options, theme, ...rest} = props;\n  return (\n    <>\n      <DagitCodeMirrorStyle />\n      <Uncontrolled\n        {...rest}\n        options={{...options, readOnly: true, theme: makeThemeString(theme)}}\n      />\n    </>\n  );\n};\n\nexport const StyledCodeMirror = (props: React.ComponentProps<typeof Controlled> & ThemeProp) => {\n  const {options, theme, ...rest} = props;\n  return (\n    <>\n      <DagitCodeMirrorStyle />\n      <Controlled {...rest} options={{...options, theme: makeThemeString(theme)}} />\n    </>\n  );\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {Popover} from './Popover';\nimport {ConfigSchema_allConfigTypes as TypeData} from './configeditor/types/ConfigSchema';\nimport {FontFamily} from './styles';\n\ntype ConfigTypeSchemaTheme = 'dark' | 'light';\n\nexport type {TypeData};\n\ninterface ConfigTypeSchemaProps {\n  type: TypeData;\n  typesInScope: TypeData[];\n  theme?: ConfigTypeSchemaTheme;\n  maxDepth?: number;\n}\n\nfunction renderTypeRecursive(\n  type: TypeData,\n  typeLookup: {[typeName: string]: TypeData},\n  depth: number,\n  props: ConfigTypeSchemaProps,\n): React.ReactElement<HTMLElement> {\n  if (type.__typename === 'CompositeConfigType' && props.maxDepth && depth === props.maxDepth) {\n    return <span>...</span>;\n  }\n\n  if (type.__typename === 'CompositeConfigType') {\n    const innerIndent = '  '.repeat(depth + 1);\n    return (\n      <>\n        {`{`}\n        {type.isSelector && (\n          <DictBlockComment indent={innerIndent} content=\"One of the following:\" />\n        )}\n        {type.fields.map((fieldData) => {\n          // TODO: temporary hack while we figure this out\n          if (fieldData.name === 'assets') {\n            return null;\n          }\n          const keyDisplay = (\n            <DictKey\n              theme={props.theme}\n              style={\n                fieldData.defaultValueAsJson\n                  ? {borderBottom: `dashed ${Colors.Blue200} 1px`, cursor: 'pointer'}\n                  : undefined\n              }\n            >\n              {fieldData.name}\n            </DictKey>\n          );\n          return (\n            <DictEntry key={fieldData.name}>\n              <DictBlockComment indent={innerIndent} content={fieldData.description} />\n              {innerIndent}\n              {fieldData.defaultValueAsJson ? (\n                <Popover\n                  popoverClassName=\"config-tooltip\"\n                  interactionKind=\"hover\"\n                  hoverCloseDelay={100}\n                  content={<ConfigContent value={fieldData.defaultValueAsJson} />}\n                >\n                  {keyDisplay}\n                </Popover>\n              ) : (\n                keyDisplay\n              )}\n              {!fieldData.isRequired && Optional}\n              {`: `}\n              {renderTypeRecursive(\n                typeLookup[fieldData.configTypeKey]!,\n                typeLookup,\n                depth + 1,\n                props,\n              )}\n            </DictEntry>\n          );\n        })}\n        {'  '.repeat(depth) + '}'}\n      </>\n    );\n  }\n\n  if (type.__typename === 'ArrayConfigType') {\n    const ofTypeKey = type.typeParamKeys[0]!;\n    return <>[{renderTypeRecursive(typeLookup[ofTypeKey]!, typeLookup, depth, props)}]</>;\n  }\n\n  if (type.__typename === 'MapConfigType') {\n    // e.g.\n    // {\n    //   [name_hint: String]: Int\n    // }\n    const keyTypeKey = type.typeParamKeys[0]!;\n    const valueTypeKey = type.typeParamKeys[1]!;\n    const innerIndent = '  '.repeat(depth + 1);\n    return (\n      <>\n        {`{`}\n        <DictEntry>\n          {innerIndent}[{type.keyLabelName ? `${type.keyLabelName}: ` : null}\n          {renderTypeRecursive(typeLookup[keyTypeKey]!, typeLookup, depth + 1, props)}]{`: `}\n          {renderTypeRecursive(typeLookup[valueTypeKey]!, typeLookup, depth + 1, props)}\n        </DictEntry>\n        {'  '.repeat(depth) + '}'}\n      </>\n    );\n  }\n\n  if (type.__typename === 'NullableConfigType') {\n    const ofTypeKey = type.typeParamKeys[0]!;\n    return (\n      <>\n        {renderTypeRecursive(typeLookup[ofTypeKey]!, typeLookup, depth, props)}\n        {Optional}\n      </>\n    );\n  }\n\n  if (type.__typename === 'ScalarUnionConfigType') {\n    const nonScalarTypeMarkup = renderTypeRecursive(\n      typeLookup[type.nonScalarTypeKey]!,\n      typeLookup,\n      depth,\n      props,\n    );\n    const scalarTypeMarkup = renderTypeRecursive(\n      typeLookup[type.scalarTypeKey]!,\n      typeLookup,\n      depth,\n      props,\n    );\n\n    return (\n      <span>\n        {scalarTypeMarkup} | {nonScalarTypeMarkup}\n      </span>\n    );\n  }\n\n  return <span>{type.givenName}</span>;\n}\n\nconst prettyJsonString = (value: string) => {\n  try {\n    const parsed = JSON.parse(value);\n    return JSON.stringify(parsed, null, 2);\n  } catch (e) {\n    return value;\n  }\n};\n\nconst ConfigContent = React.memo(({value}: {value: string}) => (\n  <>\n    <ConfigHeader>\n      <strong>Default value</strong>\n    </ConfigHeader>\n    <ConfigJSON>{prettyJsonString(value)}</ConfigJSON>\n  </>\n));\n\nconst ConfigHeader = styled.div`\n  background-color: ${Colors.Gray800};\n  color: ${Colors.White};\n  font-size: 13px;\n  padding: 8px;\n`;\n\nconst ConfigJSON = styled.pre`\n  background-color: ${Colors.Gray900};\n  color: ${Colors.White};\n  whitespace: pre-wrap;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  padding: 8px;\n  margin: 0;\n`;\n\nexport const ConfigTypeSchema = React.memo((props: ConfigTypeSchemaProps) => {\n  const {type, typesInScope} = props;\n\n  const typeLookup: Record<string, TypeData> = {};\n  for (const typeInScope of typesInScope) {\n    typeLookup[typeInScope.key] = typeInScope;\n  }\n\n  return (\n    <TypeSchemaContainer>\n      <DictBlockComment content={type.description} indent=\"\" />\n      {renderTypeRecursive(type, typeLookup, 0, props)}\n    </TypeSchemaContainer>\n  );\n});\n\nconst TypeSchemaContainer = styled.code`\n  color: ${Colors.Gray400};\n  display: block;\n  white-space: pre-wrap;\n  font-size: 14px;\n  line-height: 18px;\n`;\n\nconst DictEntry = styled.div``;\n\nconst DictKey = styled.span<{theme: ConfigTypeSchemaTheme | undefined}>`\n  color: ${({theme}) => (theme === 'dark' ? Colors.White : Colors.Dark)};\n`;\n\nconst DictComment = styled.div`\n  /* This allows long comments to wrap as nice indented blocks, while\n     copy/pasting as a single line with space-based indentation. */\n  text-indent: -1.85em;\n  padding-left: 1.85em;\n  white-space: initial;\n`;\n\nconst DictBlockComment = ({indent = '', content}: {indent: string; content: string | null}) =>\n  content !== null && content !== '' ? (\n    <DictComment>{`${indent.replace(/ /g, '\\u00A0')}/* ${content} */`}</DictComment>\n  ) : null;\n\nconst Optional = <span style={{fontWeight: 500, color: Colors.Yellow700}}>?</span>;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {Icon} from './Icon';\n\nexport interface CursorPaginationProps {\n  hasPrevCursor: boolean;\n  hasNextCursor: boolean;\n  popCursor: () => void;\n  advanceCursor: () => void;\n  reset: () => void;\n}\n\nexport const CursorPaginationControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button disabled={!hasPrevCursor} icon={<Icon name=\"arrow_back\" />} onClick={popCursor}>\n        Previous\n      </Button>\n      <Button\n        disabled={!hasNextCursor}\n        icon={<Icon name=\"arrow_forward\" />}\n        onClick={advanceCursor}\n      >\n        Next\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorHistoryControls: React.FC<CursorPaginationProps> = ({\n  hasPrevCursor,\n  hasNextCursor,\n  popCursor,\n  advanceCursor,\n}) => {\n  return (\n    <CursorControlsContainer>\n      <Button icon={<Icon name=\"arrow_back\" />} disabled={!hasNextCursor} onClick={advanceCursor}>\n        <span className=\"hideable-button-text\">Older</span>\n      </Button>\n      <Button\n        rightIcon={<Icon name=\"arrow_forward\" />}\n        disabled={!hasPrevCursor}\n        onClick={popCursor}\n      >\n        <span className=\"hideable-button-text\">Newer</span>\n      </Button>\n    </CursorControlsContainer>\n  );\n};\n\nexport const CursorControlsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-top: 16px;\n`;\n","import styled from 'styled-components/macro';\n\nexport const MainContent = styled.div`\n  overflow-y: auto;\n  width: 100%;\n  height: 100%;\n`;\n","/* eslint-disable no-restricted-imports */\nimport {\n  Intent,\n  Menu as BlueprintMenu,\n  MenuDivider as BlueprintMenuDivider,\n  MenuItem as BlueprintMenuItem,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconName, Icon, IconWrapper} from './Icon';\n\ninterface Props extends React.ComponentProps<typeof BlueprintMenu> {}\n\nexport const Menu: React.FC<Props> = (props) => {\n  return <StyledMenu {...props} />;\n};\n\nconst intentToTextColor = (intent: React.ComponentProps<typeof BlueprintMenuItem>['intent']) => {\n  switch (intent) {\n    case 'primary':\n      return Colors.Blue500;\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    default:\n      return Colors.Gray900;\n  }\n};\n\nconst intentToIconColor = (intent: React.ComponentProps<typeof BlueprintMenuItem>['intent']) => {\n  switch (intent) {\n    case 'primary':\n      return Colors.Blue500;\n    case 'danger':\n      return Colors.Red500;\n    case 'success':\n      return Colors.Green500;\n    case 'warning':\n      return Colors.Yellow500;\n    case 'none':\n    default:\n      return Colors.Gray900;\n  }\n};\n\nexport const iconWithColor = (icon?: IconName | JSX.Element, intent?: Intent) => {\n  if (icon) {\n    if (typeof icon === 'string') {\n      return <Icon name={icon} color={intentToIconColor(intent)} />;\n    }\n    return icon;\n  }\n  return null;\n};\n\nexport interface CommonMenuItemProps {\n  icon?: IconName | JSX.Element;\n}\n\ninterface ItemProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof BlueprintMenuItem>, 'href' | 'icon'> {}\n\nexport const MenuItem: React.FC<ItemProps> = (props) => {\n  const {icon, intent, ...rest} = props;\n  return (\n    <StyledMenuItem\n      {...rest}\n      $textColor={intentToTextColor(intent)}\n      icon={iconWithColor(icon, intent)}\n    />\n  );\n};\n\ninterface MenuExternalLinkProps\n  extends CommonMenuItemProps,\n    Omit<React.ComponentProps<typeof BlueprintMenuItem>, 'href' | 'icon'> {\n  href: string;\n}\n\n/**\n * If you want to use a menu item as a link, use `MenuLink` and provide a `to` prop.\n */\nexport const MenuExternalLink: React.FC<MenuExternalLinkProps> = (props) => {\n  const {icon, intent, ...rest} = props;\n  return (\n    <StyledMenuItem\n      {...rest}\n      target=\"_blank\"\n      rel=\"noreferrer nofollow\"\n      $textColor={intentToTextColor(intent)}\n      icon={iconWithColor(icon, intent)}\n    />\n  );\n};\n\nexport const MenuDivider = styled(BlueprintMenuDivider)`\n  border-top: 1px solid ${Colors.Gray100};\n  margin: 2px 0;\n`;\n\nconst StyledMenu = styled(BlueprintMenu)`\n  border-radius: 4px;\n  padding: 8px 4px;\n`;\n\ninterface StyledMenuItemProps extends React.ComponentProps<typeof BlueprintMenuItem> {\n  $textColor: string;\n}\n\nconst StyledMenuItem = styled(BlueprintMenuItem)<StyledMenuItemProps>`\n  border-radius: 4px;\n  color: ${({$textColor}) => $textColor};\n  line-height: 20px;\n  padding: 6px 8px 6px 12px;\n  transition: background-color 50ms, box-shadow 150ms;\n  align-items: flex-start;\n\n  /**\n   * Use margin instead of align-items: center because the contents of the menu item may wrap \n   * in unusual circumstances.\n   */\n  ${IconWrapper} {\n    margin-top: 2px;\n  }\n\n  &.bp3-intent-primary.bp3-active {\n    background-color: ${Colors.Blue500};\n\n    ${IconWrapper} {\n      background-color: ${Colors.White};\n    }\n  }\n\n  &.bp3-disabled ${IconWrapper} {\n    opacity: 0.5;\n  }\n\n  &.bp3-active ${IconWrapper} {\n    color: ${Colors.White};\n  }\n\n  ${IconWrapper}:first-child {\n    margin-left: -4px;\n  }\n\n  &:hover {\n    background: ${Colors.Gray100};\n    color: ${({$textColor}) => $textColor};\n  }\n\n  &:focus {\n    color: ${({$textColor}) => $textColor};\n    box-shadow: rgba(58, 151, 212, 0.6) 0 0 0 2px;\n    outline: none;\n  }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Table, TableProps} from './Table';\n\ntype Row = {key: string; value: React.ReactNode};\n\ninterface Props {\n  rows: (Row | null | undefined)[];\n  spacing: 0 | 2 | 4;\n}\n\nexport const MetadataTable = (props: Props) => {\n  const {rows, spacing} = props;\n\n  return (\n    <StyledTable>\n      <tbody>\n        {rows.map((pair: Row | null | undefined) => {\n          if (!pair) {\n            return null;\n          }\n          const {key, value} = pair;\n          return (\n            <tr key={key}>\n              <td>\n                <Box padding={{vertical: spacing, right: 32}}>\n                  <MetadataKey>{key}</MetadataKey>\n                </Box>\n              </td>\n              <td>\n                <Box padding={{vertical: spacing}}>{value}</Box>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nMetadataTable.defaultProps = {\n  spacing: 4,\n};\n\nexport const StyledTable = styled.table`\n  border-spacing: 0;\n  td {\n    vertical-align: top;\n  }\n\n  td .bp3-control {\n    margin-bottom: 0;\n  }\n`;\n\nconst MetadataKey = styled.div`\n  color: ${Colors.Gray600};\n  font-weight: 400;\n`;\n\nexport const MetadataTableWIP = styled(Table)<TableProps>`\n  td:first-child {\n    white-space: nowrap;\n    width: 1px;\n    max-width: 400px;\n    word-break: break-word;\n    overflow: hidden;\n    padding-right: 24px;\n    text-overflow: ellipsis;\n  }\n`;\n","import * as React from 'react';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName, Icon} from './Icon';\nimport {Spinner} from './Spinner';\nimport {Subheading} from './Text';\n\nexport type NonIdealStateProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & {\n  icon: 'error' | 'no-results' | 'spinner' | IconName;\n  title: string;\n  description?: React.ReactNode;\n  action?: React.ReactNode;\n  shrinkable?: boolean;\n};\n\nexport const NonIdealState: React.FC<NonIdealStateProps> = ({\n  title,\n  description,\n  icon,\n  action,\n  shrinkable,\n}) => {\n  const singleContentElement = [title, description, action].filter(Boolean).length === 1;\n\n  return (\n    <Box\n      flex={{gap: 20, alignItems: singleContentElement ? 'center' : 'flex-start'}}\n      background={Colors.Gray50}\n      padding={24}\n      style={{\n        margin: 'auto',\n        borderRadius: 8,\n        width: shrinkable ? 'initial' : 'max-content',\n        maxWidth: 500,\n      }}\n    >\n      {icon === 'spinner' ? (\n        <Spinner purpose=\"section\" />\n      ) : icon === 'no-results' ? (\n        <Icon name=\"search\" size={48} color={Colors.Gray400} />\n      ) : (\n        <Icon name={icon} size={48} color={Colors.Gray400} />\n      )}\n      <Box\n        flex={{\n          gap: 8,\n          direction: 'column',\n          alignItems: 'flex-start',\n        }}\n      >\n        {title && <Subheading style={{color: Colors.Gray900}}>{title}</Subheading>}\n        {description && <div style={{color: Colors.Gray500}}>{description}</div>}\n        {action}\n      </Box>\n    </Box>\n  );\n};\n","import styled from 'styled-components/macro';\n\nexport const Page = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  padding-bottom: 64px;\n  width: 100%;\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp3-breadcrumbs {\n    height: auto;\n  }\n`;\n","/* eslint-disable no-restricted-imports */\nimport {IPopoverProps} from '@blueprintjs/core';\nimport {Select as BlueprintSelect, SelectProps} from '@blueprintjs/select';\n/* eslint-enable no-restricted-imports */\nimport deepmerge from 'deepmerge';\nimport * as React from 'react';\n\nexport const Select = <T,>(props: React.PropsWithChildren<SelectProps<T>>) => {\n  const popoverProps: Partial<IPopoverProps> = {\n    ...props.popoverProps,\n    minimal: true,\n    modifiers: deepmerge(\n      {offset: {enabled: true, offset: '0, 8px'}},\n      props.popoverProps?.modifiers || {},\n    ),\n    popoverClassName: `dagit-popover ${props.popoverProps?.className || ''}`,\n  };\n\n  return <BlueprintSelect {...props} popoverProps={popoverProps} />;\n};\n","// eslint-disable-next-line no-restricted-imports\nimport {\n  Slider as BlueprintSlider,\n  MultiSlider as BlueprintMultiSlider,\n  SliderProps,\n  MultiSliderProps,\n} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\n\nexport const Slider: React.FC<SliderProps & {fillColor?: string}> = ({\n  fillColor = Colors.Gray600,\n  ...rest\n}) => {\n  return <StyledSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nexport const MultiSlider: React.FC<MultiSliderProps & {fillColor?: string}> & {\n  Handle: typeof BlueprintMultiSlider.Handle;\n} = ({fillColor = Colors.Gray600, ...rest}) => {\n  return <StyledMultiSlider {...rest} intent=\"none\" $fillColor={fillColor} />;\n};\n\nMultiSlider.Handle = BlueprintMultiSlider.Handle;\n\nexport const SliderStyles = css<{$fillColor: string}>`\n  .bp3-slider-track {\n    height: 8px;\n    .bp3-slider-progress {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 0.2;\n      height: 8px;\n    }\n    .bp3-slider-progress.bp3-intent-primary {\n      background-color: ${(p) => p.$fillColor};\n      opacity: 1;\n      height: 8px;\n    }\n  }\n  &.bp3-vertical .bp3-slider-track,\n  &.bp3-vertical .bp3-slider-track .bp3-slider-progress {\n    height: initial;\n    width: 8px;\n  }\n  .bp3-slider-handle {\n    width: 18px;\n    height: 18px;\n    border-radius: 50%;\n    border: 2px solid ${Colors.Gray300};\n    background: ${Colors.White};\n    box-shadow: none;\n    &:hover {\n      border: 2px solid ${Colors.Gray400};\n      box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 12px 0px;\n    }\n\n    .bp3-slider-label {\n      background: ${Colors.Gray900};\n      box-shadow: 0 1px 4px rgba(0,0,0,0.15)\n      padding: 4px 8px;\n    }\n  }\n`;\n\nconst StyledMultiSlider = styled(BlueprintMultiSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\nconst StyledSlider = styled(BlueprintSlider)<{$fillColor: string}>`\n  ${SliderStyles}\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Button} from './Button';\nimport {ButtonGroup} from './ButtonGroup';\nimport {Colors} from './Colors';\nimport {Icon} from './Icon';\n\nconst DIVIDER_THICKNESS = 2;\n\ninterface SplitPanelContainerProps {\n  axis?: 'horizontal' | 'vertical';\n  identifier: string;\n  first: React.ReactNode;\n  firstInitialPercent: number;\n  firstMinSize?: number;\n  second: React.ReactNode | null; // Note: pass null to hide / animate away the second panel\n}\n\ninterface SplitPanelContainerState {\n  size: number;\n  key: string;\n  resizing: boolean;\n}\n\nexport class SplitPanelContainer extends React.Component<\n  SplitPanelContainerProps,\n  SplitPanelContainerState\n> {\n  constructor(props: SplitPanelContainerProps) {\n    super(props);\n\n    const key = `dagit.panel-width.${this.props.identifier}`;\n    const value = window.localStorage.getItem(key);\n    let size = Number(value);\n    if (value === null || isNaN(size)) {\n      size = this.props.firstInitialPercent;\n    }\n\n    this.state = {size, key, resizing: false};\n  }\n\n  onChangeSize = (size: number) => {\n    this.setState({size});\n    window.localStorage.setItem(this.state.key, `${size}`);\n  };\n\n  render() {\n    const {firstMinSize, first, second} = this.props;\n    const {size: _size, resizing} = this.state;\n    const axis = this.props.axis || 'horizontal';\n\n    const firstPaneStyles: React.CSSProperties = {flexShrink: 0};\n    const firstSize = second ? _size : 100;\n\n    // Note: The divider appears after the first panel, so making the first panel 100% wide\n    // hides the divider offscreen. To prevent this, we subtract the divider depth.\n    if (axis === 'horizontal') {\n      firstPaneStyles.minWidth = firstMinSize;\n      firstPaneStyles.width = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    } else {\n      firstPaneStyles.minHeight = firstMinSize;\n      firstPaneStyles.height = `calc(${firstSize}% - ${DIVIDER_THICKNESS}px)`;\n    }\n\n    return (\n      <Container axis={axis} id=\"split-panel-container\" resizing={resizing}>\n        <div className=\"split-panel\" style={firstPaneStyles}>\n          {first}\n        </div>\n        <PanelDivider\n          axis={axis}\n          resizing={resizing}\n          onSetResizing={(resizing) => this.setState({resizing})}\n          onMove={this.onChangeSize}\n        />\n        <div className=\"split-panel\" style={{flex: 1}}>\n          {second}\n        </div>\n      </Container>\n    );\n  }\n}\n\ninterface IDividerProps {\n  axis: 'horizontal' | 'vertical';\n  resizing: boolean;\n  onSetResizing: (resizing: boolean) => void;\n  onMove: (vw: number) => void;\n}\n\nclass PanelDivider extends React.Component<IDividerProps> {\n  ref = React.createRef<any>();\n\n  onMouseDown = (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    this.props.onSetResizing(true);\n\n    const onMouseMove = (event: MouseEvent) => {\n      const parent = this.ref.current?.closest('#split-panel-container');\n      if (!parent) {\n        return;\n      }\n      const parentRect = parent.getBoundingClientRect();\n\n      const firstPanelPercent =\n        this.props.axis === 'horizontal'\n          ? ((event.clientX - parentRect.left) * 100) / parentRect.width\n          : ((event.clientY - parentRect.top) * 100) / parentRect.height;\n\n      this.props.onMove(Math.min(100, Math.max(0, firstPanelPercent)));\n    };\n\n    const onMouseUp = () => {\n      this.props.onSetResizing(false);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  };\n\n  render() {\n    const Wrapper = DividerWrapper[this.props.axis];\n    const HitArea = DividerHitArea[this.props.axis];\n    return (\n      <Wrapper resizing={this.props.resizing} ref={this.ref}>\n        <HitArea onMouseDown={this.onMouseDown} />\n      </Wrapper>\n    );\n  }\n}\n\ninterface PanelToggleProps {\n  axis: 'horizontal' | 'vertical';\n  container: React.RefObject<SplitPanelContainer>;\n}\n\nexport const FirstOrSecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const onClick = (id: string) => {\n    let size = 50;\n    if (id === 'first-pane') {\n      size = 100;\n    } else if (id === 'second-pane') {\n      size = 0;\n    }\n    container.current?.onChangeSize(size);\n  };\n\n  return (\n    <ButtonGroup\n      buttons={[\n        {\n          id: 'first-pane',\n          icon: axis === 'vertical' ? 'panel_show_top' : 'panel_show_left',\n          tooltip: axis === 'vertical' ? 'Show only top pane' : 'Show only left pane',\n        },\n        {\n          id: 'split',\n          icon: 'panel_show_both',\n          tooltip: 'Show both panes',\n        },\n        {\n          id: 'second-pane',\n          icon: axis === 'vertical' ? 'panel_show_bottom' : 'panel_show_right',\n          tooltip: axis === 'vertical' ? 'Show only bottom pane' : 'Show only right pane',\n        },\n      ]}\n      onClick={onClick}\n    />\n  );\n};\n\n// Todo: This component attempts to sync itself with the container, but it can't\n// observe the container's width without a React context or adding a listener, etc.\n// If we keep making components that manipulate panel state we may want to move it\n// all to a context consumed by both.\n//\nexport const SecondPanelToggle = ({container, axis}: PanelToggleProps) => {\n  const [prevSize, setPrevSize] = React.useState<number | 'unknown'>('unknown');\n  const initialIsOpen = (container.current?.state.size || 0) < 100;\n\n  const [open, setOpen] = React.useState<boolean>(initialIsOpen);\n  React.useEffect(() => setOpen(initialIsOpen), [initialIsOpen]);\n\n  return (\n    <Button\n      active={open}\n      title=\"Toggle second pane\"\n      icon={\n        <Icon\n          name={\n            axis === 'horizontal'\n              ? open\n                ? 'panel_hide_right'\n                : 'panel_show_right'\n              : 'panel_show_bottom'\n          }\n        />\n      }\n      onClick={() => {\n        if (!container.current) {\n          return;\n        }\n        const current = container.current.state.size;\n        if (current < 90) {\n          setPrevSize(current);\n          setOpen(false);\n          container.current.onChangeSize(100);\n        } else {\n          setOpen(true);\n          container.current.onChangeSize(\n            prevSize === 'unknown' ? container.current.props.firstInitialPercent : prevSize,\n          );\n        }\n      }}\n    />\n  );\n};\n\n// Note: -1px margins here let the divider cover the last 1px of the previous box, hiding\n// any scrollbar border it might have.\n\nconst DividerWrapper = {\n  horizontal: styled.div<{resizing: boolean}>`\n    width: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-left: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n  vertical: styled.div<{resizing: boolean}>`\n    height: ${DIVIDER_THICKNESS}px;\n    z-index: 1;\n    background: ${(p) => (p.resizing ? Colors.Gray400 : Colors.KeylineGray)};\n    margin-top: -1px;\n    overflow: visible;\n    position: relative;\n  `,\n};\n\nconst DividerHitArea = {\n  horizontal: styled.div`\n    width: 17px;\n    height: 100%;\n    z-index: 1;\n    cursor: ew-resize;\n    position: relative;\n    left: -8px;\n  `,\n  vertical: styled.div`\n    height: 17px;\n    width: 100%;\n    z-index: 1;\n    cursor: ns-resize;\n    position: relative;\n    top: -8px;\n  `,\n};\n\nconst Container = styled.div<{\n  axis?: 'horizontal' | 'vertical';\n  resizing: boolean;\n}>`\n  display: flex;\n  overflow: hidden;\n  flex-direction: ${({axis}) => (axis === 'vertical' ? 'column' : 'row')};\n  flex: 1 1;\n  width: 100%;\n  min-width: 0;\n  min-height: 0;\n\n  .split-panel {\n    position: relative;\n    transition: ${({axis, resizing}) =>\n      resizing ? 'none' : axis === 'horizontal' ? 'width' : 'height'}\n      200ms ease-out;\n    flex-direction: column;\n    display: flex;\n    min-${({axis}) => (axis === 'vertical' ? 'height' : 'width')}: 0;\n    z-index: 0;\n  }\n`;\n","import * as React from 'react';\nimport styled, {css} from 'styled-components/macro';\n\nimport {Colors} from './Colors';\nimport {IconWrapper} from './Icon';\nimport {FontFamily} from './styles';\n\nexport interface TabStyleProps {\n  disabled?: boolean;\n  selected?: boolean;\n  count?: number | 'indeterminate' | null;\n  icon?: React.ReactNode;\n  title?: React.ReactNode;\n  $size?: 'small' | 'large';\n}\n\nexport const getTabA11yProps = (props: {selected?: boolean; disabled?: boolean}) => {\n  const {selected, disabled} = props;\n  return {\n    role: 'tab',\n    tabIndex: disabled ? -1 : 0,\n    'aria-disabled': disabled,\n    'aria-expanded': selected,\n    'aria-selected': selected,\n  };\n};\n\nexport const getTabContent = (props: TabStyleProps & {title?: React.ReactNode}) => {\n  const {title, count, icon} = props;\n  return (\n    <>\n      {title}\n      {icon}\n      {count !== undefined ? <Count>{count === 'indeterminate' ? '–' : count}</Count> : null}\n    </>\n  );\n};\n\nconst Count = styled.div`\n  display: inline;\n  font-family: ${FontFamily.monospace};\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.02%;\n  padding: 0 4px;\n  color: ${Colors.Gray900};\n  background: ${Colors.Gray100};\n`;\n\nexport const tabCSS = css<TabStyleProps>`\n  background: none;\n  border: none;\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  padding: ${({$size}) => ($size === 'small' ? '10px 0' : '16px 0')};\n  box-shadow: ${({selected}) => (selected ? Colors.Blue500 : 'transparent')} 0 -2px 0 inset;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  gap: 6px;\n\n  &,\n  & a {\n    cursor: pointer;\n    user-select: none;\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : Colors.Gray700};\n  }\n\n  & ${IconWrapper} {\n    color: ${({selected, disabled}) =>\n      selected ? Colors.Blue500 : disabled ? Colors.Gray300 : ''};\n  }\n\n  /* Focus outline only when using keyboard, not when focusing via mouse. */\n  &:focus {\n    outline: none !important;\n    box-shadow: ${({selected, disabled}) =>\n        selected ? Colors.Blue500 : disabled ? 'transparent' : Colors.Blue200}\n      0 -2px 0 inset;\n  }\n\n  &:hover {\n    &,\n    a {\n      text-decoration: none;\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : Colors.Blue700};\n    }\n    ${IconWrapper} {\n      color: ${({selected, disabled}) =>\n        selected ? Colors.Blue700 : disabled ? Colors.Gray300 : ''};\n    }\n  }\n`;\n\ninterface TabProps extends TabStyleProps, Omit<React.ComponentPropsWithoutRef<'button'>, 'title'> {}\n\nexport const Tab = styled((props: TabProps) => {\n  const containerProps = getTabA11yProps(props);\n  const content = getTabContent(props);\n\n  const titleText = typeof props.title === 'string' ? props.title : undefined;\n\n  return (\n    <button {...props} {...containerProps} title={titleText} type=\"button\">\n      {content}\n    </button>\n  );\n})<TabStyleProps>`\n  ${tabCSS}\n`;\n\ninterface TabsProps {\n  children: Array<React.ReactElement<TabProps>>;\n  selectedTabId?: string;\n  onChange?: (selectedTabId: string) => void;\n  size?: 'small' | 'large';\n}\n\nexport const Tabs = styled(({selectedTabId, children, onChange, size = 'large', ...rest}) => {\n  return (\n    <div {...rest} role=\"tablist\">\n      {React.Children.map(children, (child) =>\n        child\n          ? React.cloneElement(child, {\n              selected: child.props.selected || child.props.id === selectedTabId,\n              $size: size,\n              ...(onChange\n                ? {\n                    onClick: () => onChange(child.props.id),\n                  }\n                : {}),\n            })\n          : null,\n      )}\n    </div>\n  );\n})<TabsProps>`\n  display: flex;\n  gap: 16px;\n  font-size: ${({size}) => (size === 'small' ? '12px' : '14px')};\n  line-height: ${({size}) => (size === 'small' ? '16px' : '20px')};\n  font-weight: 600;\n`;\n","// eslint-disable-next-line no-restricted-imports\nimport {TagInput} from '@blueprintjs/core';\nimport * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {MenuItem, Menu} from './Menu';\nimport {Popover} from './Popover';\nimport {Spinner} from './Spinner';\n\nconst MAX_SUGGESTIONS = 100;\n\nexport interface SuggestionProvider {\n  token?: string;\n  values: () => string[];\n  suggestionFilter?: (query: string, suggestion: Suggestion) => boolean;\n}\n\nexport interface Suggestion {\n  text: string;\n  final: boolean;\n}\n\ninterface ActiveSuggestionInfo {\n  text: string;\n  idx: number;\n}\n\nexport interface TokenizingFieldValue {\n  token?: string;\n  value: string;\n}\n\ninterface TokenizingFieldProps {\n  values: TokenizingFieldValue[];\n  maxValues?: number;\n  onChange: (values: TokenizingFieldValue[]) => void;\n  onChangeBeforeCommit?: boolean;\n  addOnBlur?: boolean;\n  onFocus?: () => void;\n\n  placeholder?: string;\n  loading?: boolean;\n  className?: string;\n  small?: boolean;\n\n  fullwidth?: boolean;\n\n  suggestionProviders: SuggestionProvider[];\n  suggestionRenderer?: (suggestion: Suggestion) => React.ReactNode;\n  suggestionProvidersFilter?: (\n    suggestionProvider: SuggestionProvider[],\n    values: TokenizingFieldValue[],\n  ) => SuggestionProvider[];\n}\n\nfunction findProviderByToken(token: string, providers: SuggestionProvider[]) {\n  return providers.find((p) => p.token && p.token.toLowerCase() === token.toLowerCase());\n}\n\nexport const tokenizedValuesFromString = (str: string, providers: SuggestionProvider[]) => {\n  if (str === '') {\n    return [];\n  }\n  const tokens = str.split(',');\n  return tokenizedValuesFromStringArray(tokens, providers);\n};\n\nexport const tokenizedValuesFromStringArray = (tokens: string[], providers: SuggestionProvider[]) =>\n  tokens.map((token) => tokenizedValueFromString(token, providers));\n\nexport const tokenizeString = (str: string): [string, string] => {\n  const colonAt = str.indexOf(':');\n  if (colonAt === -1) {\n    return [str, ''];\n  }\n  return [str.slice(0, colonAt), str.slice(colonAt + 1)];\n};\n\nexport function tokenizedValueFromString(\n  str: string,\n  providers: SuggestionProvider[],\n): TokenizingFieldValue {\n  const [token, value] = tokenizeString(str);\n  if (findProviderByToken(token, providers)) {\n    if (token && value) {\n      return {token, value};\n    }\n  }\n\n  return {value: str};\n}\n\nexport const tokenToString = (v: TokenizingFieldValue) =>\n  v.token ? `${v.token}:${v.value}` : v.value;\n\nexport const tokensAsStringArray = (value: TokenizingFieldValue[]) =>\n  value.filter((v) => v.value !== '').map(tokenToString);\n\nexport const stringFromValue = (value: TokenizingFieldValue[]) =>\n  tokensAsStringArray(value).join(',');\n\nconst isEqual = (a: TokenizingFieldValue, b?: TokenizingFieldValue) =>\n  b && a.token === b.token && a.value === b.value;\n\n/** Provides a text field with typeahead autocompletion.\n *  This completion either provides a list of standalone tokens\n *  sourced from the `tokens` param, or a set of key value pairs,\n *  sourced from the `suggestionProviders` param. In the latter case, the\n *  key is one of a known set of \"suggestion provider tokens\".\n *\n *  Provide one or more SuggestionProviders or a list of tokens\n *  to build the tree of autocompletions.\n *\n *  The input also allows for freeform typing (`value` items with no token value) */\nexport const TokenizingField: React.FC<TokenizingFieldProps> = ({\n  suggestionProviders,\n  suggestionProvidersFilter,\n  values: externalValues,\n  maxValues,\n  onChange,\n  onChangeBeforeCommit,\n  onFocus,\n  placeholder,\n  addOnBlur,\n  loading,\n  className,\n  fullwidth,\n  suggestionRenderer,\n}) => {\n  const [open, setOpen] = React.useState<boolean>(false);\n  const [active, setActive] = React.useState<ActiveSuggestionInfo | null>(null);\n  const [typed, setTyped] = React.useState<string>('');\n\n  const values = React.useMemo(() => [...externalValues], [externalValues]);\n  const typedValue = tokenizedValueFromString(typed, suggestionProviders);\n  if (isEqual(typedValue, values[values.length - 1])) {\n    values.pop();\n  }\n\n  const atMaxValues = maxValues !== undefined && values.length >= maxValues;\n\n  const filteredSuggestionProviders = suggestionProvidersFilter\n    ? suggestionProvidersFilter(suggestionProviders, values)\n    : suggestionProviders;\n\n  // Build the set of suggestions that should be displayed for the current input value.\n  // Note: \"typed\" is the text that has not yet been submitted, separate from values[].\n  const parts = typed.split(':');\n  const lastPart = (parts[parts.length - 1] || '').toLowerCase();\n\n  const suggestions = React.useMemo(() => {\n    if (atMaxValues) {\n      return [];\n    }\n\n    let suggestionsArr: Suggestion[] = [];\n\n    const matchesTypedText = (query: string, s: Suggestion) =>\n      !query ||\n      s.text\n        .toLowerCase()\n        .split(':')\n        .some((c) => c.includes(query));\n\n    const availableSuggestionsForProvider = (provider: SuggestionProvider) => {\n      const suggestionNotUsed = (v: string) =>\n        !values.some((e) => e.token === provider.token && e.value === v);\n\n      const suggestionFilter = provider.suggestionFilter || matchesTypedText;\n\n      return provider\n        .values()\n        .filter(suggestionNotUsed)\n        .map((v) => ({text: provider?.token ? `${provider.token}:${v}` : v, final: true}))\n        .filter((s) => suggestionFilter(lastPart, s))\n        .slice(0, MAX_SUGGESTIONS); // never show too many suggestions for one provider\n    };\n\n    if (parts.length === 1) {\n      // Suggest providers (eg: `pipeline:`) so users can discover the search space\n\n      suggestionsArr = filteredSuggestionProviders\n        .reduce(\n          (accum: Suggestion[], s) =>\n            s.token ? [...accum, {text: `${s.token}:`, final: false}] : accum,\n          [],\n        )\n        .filter((s) => matchesTypedText(lastPart, s));\n\n      // Suggest value completions so users can type \"airline_\" without the \"pipeline\"\n      // prefix and get the correct suggestion.\n      for (const p of filteredSuggestionProviders) {\n        if (!p.token || typed.length > 0) {\n          suggestionsArr.push(...availableSuggestionsForProvider(p));\n        }\n      }\n    }\n\n    if (parts.length === 2) {\n      const firstPart = parts[0];\n      if (firstPart) {\n        // Suggest values from the chosen provider (eg: `pipeline:abc`)\n        const provider = findProviderByToken(firstPart, filteredSuggestionProviders);\n        suggestionsArr = provider ? availableSuggestionsForProvider(provider) : [];\n      }\n    }\n\n    // Truncate suggestions to the ones currently matching the typed text,\n    // and always sort them in alphabetical order.\n    suggestionsArr.sort((a, b) => a.text.localeCompare(b.text));\n\n    return suggestionsArr;\n  }, [atMaxValues, filteredSuggestionProviders, lastPart, parts, typed.length, values]);\n\n  // We need to manage selection in the dropdown by ourselves. To ensure the\n  // best behavior we store the active item's index and text (the text allows\n  // us to relocate it if it's moved and the index allows us to keep selection\n  // at the same location if the previous item is gone.)\n\n  // This hook keeps the active row state in sync with the suggestions, which\n  // are derived from the current input value.\n\n  React.useEffect(() => {\n    // If suggestions are present, autoselect the first one so the user can press\n    // enter to complete their search. (Esc + enter is how you enter your raw text.)\n    if (!active && suggestions.length) {\n      const item = suggestions[0];\n      if (item) {\n        setActive({text: item.text, idx: 0});\n      }\n      return;\n    }\n    if (!active) {\n      return;\n    }\n    if (suggestions.length === 0) {\n      setActive(null);\n      return;\n    }\n\n    // Relocate the currently active item in the latest suggestions list\n    const pos = suggestions.findIndex((a) => a.text === active.text);\n\n    // The new index is the index of the active item, or whatever item\n    // is now at it's location if it's gone, bounded to the array.\n    let nextIdx = pos !== -1 ? pos : active.idx;\n    nextIdx = Math.max(0, Math.min(suggestions.length - 1, nextIdx));\n    const nextItem = suggestions[nextIdx];\n\n    if (nextItem && (nextIdx !== active.idx || nextItem.text !== active.text)) {\n      setActive({text: nextItem.text, idx: nextIdx});\n    }\n  }, [active, suggestions]);\n\n  const onConfirmSuggestion = (suggestion: Suggestion) => {\n    if (atMaxValues) {\n      return;\n    }\n\n    if (suggestion.final) {\n      // The user has finished a key-value pair\n      onConfirmText(suggestion.text);\n      setTyped('');\n      setActive(null);\n      setOpen(false);\n    } else {\n      // The user has finished a key\n      setTyped(suggestion.text);\n    }\n  };\n\n  const onConfirmText = (str: string) => {\n    if (atMaxValues) {\n      return;\n    }\n    if (str.endsWith(':')) {\n      return;\n    }\n    if (str === '') {\n      return;\n    }\n\n    setTyped('');\n    onChange([...values, tokenizedValueFromString(str, filteredSuggestionProviders)]);\n  };\n\n  const onKeyDown = (e: React.KeyboardEvent<any>) => {\n    if (atMaxValues && e.key !== 'Delete' && e.key !== 'Backspace') {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n    // Enter and Return confirm the currently selected suggestion or\n    // confirm the freeform text you've typed if no suggestions are shown.\n    if (e.key === 'Enter' || e.key === 'Return' || e.key === 'Tab') {\n      if (active) {\n        const picked = suggestions.find((s) => s.text === active.text);\n        if (!picked) {\n          throw new Error('Selection out of sync with suggestions');\n        }\n        onConfirmSuggestion(picked);\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (typed.length) {\n        onConfirmText(typed);\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      return;\n    }\n\n    // Typing space confirms your freeform text\n    if (e.key === ' ') {\n      e.preventDefault();\n      onConfirmText(typed);\n      return;\n    }\n\n    // Escape closes the options. The options re-open if you type another char or click.\n    if (e.key === 'Escape') {\n      setActive(null);\n      setOpen(false);\n      return;\n    }\n\n    if (!open && e.key !== 'Delete' && e.key !== 'Backspace') {\n      setOpen(true);\n    }\n\n    // The up/down arrow keys shift selection in the dropdown.\n    // Note: The first down arrow press activates the first item.\n    const shift = {ArrowDown: 1, ArrowUp: -1}[e.key];\n    if (shift && suggestions.length > 0) {\n      e.preventDefault();\n      let idx = (active ? active.idx : -1) + shift;\n      idx = Math.max(0, Math.min(idx, suggestions.length - 1));\n      const item = suggestions[idx];\n      if (item) {\n        setActive({text: item.text, idx});\n      }\n    }\n  };\n\n  const menuRef = React.createRef<HTMLDivElement>();\n  React.useEffect(() => {\n    if (menuRef.current && active) {\n      const el = menuRef.current.querySelector(`[data-idx='${active.idx}']`);\n      if (el && el instanceof HTMLElement && 'scrollIntoView' in el) {\n        el.scrollIntoView({block: 'nearest'});\n      }\n    }\n  }, [menuRef, active]);\n\n  const renderSuggestion = suggestionRenderer || ((suggestion) => suggestion.text);\n\n  return (\n    <Popover\n      isOpen={open && suggestions.length > 0 && !atMaxValues}\n      position=\"bottom-left\"\n      content={\n        suggestions.length > 0 ? (\n          <div style={{maxHeight: 235, overflowY: 'scroll'}} ref={menuRef}>\n            <StyledMenu>\n              {suggestions.map((suggestion, idx) => (\n                <MenuItem\n                  data-idx={idx}\n                  key={suggestion.text}\n                  text={renderSuggestion(suggestion)}\n                  shouldDismissPopover={false}\n                  active={active?.idx === idx}\n                  onMouseDown={(e: React.MouseEvent<any>) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onConfirmSuggestion(suggestion);\n                    setActive(null);\n                  }}\n                />\n              ))}\n            </StyledMenu>\n          </div>\n        ) : (\n          <div />\n        )\n      }\n    >\n      <StyledTagInput\n        className={className}\n        values={values.map((v) => (v.token ? `${v.token}:${v.value}` : v.value))}\n        inputValue={typed}\n        onRemove={(_, idx) => {\n          const next = [...values];\n          next.splice(idx, 1);\n          onChange(next);\n        }}\n        onInputChange={(e) => {\n          setTyped(e.currentTarget.value);\n\n          if (onChangeBeforeCommit) {\n            const tokenized = tokenizedValueFromString(\n              e.currentTarget.value,\n              filteredSuggestionProviders,\n            );\n            onChange([...values, tokenized]);\n          }\n        }}\n        inputProps={{\n          onFocus: () => {\n            setOpen(true);\n            onFocus && onFocus();\n          },\n          onBlur: () => {\n            // Emulate behavior of addOnBlur for TagInput\n            // When a user clicks outside of the input, finish the current token\n            if (addOnBlur) {\n              onConfirmText(typed);\n            }\n            setOpen(false);\n          },\n        }}\n        $maxWidth={fullwidth ? '100%' : undefined}\n        onAdd={() => false}\n        onKeyDown={onKeyDown}\n        tagProps={{minimal: true}}\n        placeholder={placeholder || 'Filter…'}\n        rightElement={\n          loading && open ? (\n            <Box style={{alignSelf: 'center'}} margin={{right: 4}}>\n              <Spinner purpose=\"body-text\" />\n            </Box>\n          ) : undefined\n        }\n      />\n    </Popover>\n  );\n};\n\nexport const StyledTagInput = styled(TagInput)<{$maxWidth?: any}>`\n  border: none;\n  border-radius: 8px;\n  box-shadow: ${Colors.Gray300} inset 0px 0px 0px 1px, ${Colors.KeylineGray} inset 2px 2px 1.5px;\n  min-width: 400px;\n  max-width: ${(p) => (p.$maxWidth ? p.$maxWidth : '600px')};\n  transition: box-shadow 150ms;\n\n  &.bp3-active {\n    box-shadow: ${Colors.Gray300} inset 0px 0px 0px 1px, ${Colors.KeylineGray} inset 2px 2px 1.5px,\n      rgba(58, 151, 212, 0.6) 0 0 0 3px;\n  }\n\n  input {\n    font-size: 14px;\n    font-weight: 400;\n    padding-left: 4px;\n    padding-bottom: 2px;\n    padding-top: 2px;\n  }\n\n  && .bp3-tag-input-values:first-child .bp3-input-ghost:first-child {\n    padding-left: 8px;\n  }\n\n  && .bp3-tag-input-values {\n    margin-right: 4px;\n    margin-top: 4px;\n  }\n\n  && .bp3-tag-input-values > * {\n    margin-bottom: 4px;\n  }\n\n  .bp3-tag {\n    border-radius: 6px;\n    display: inline-flex;\n    flex-direction: row;\n    font-size: 12px;\n    line-height: 16px;\n    align-items: center;\n    max-width: 400px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    padding: 4px 8px;\n    user-select: none;\n  }\n\n  .bp3-tag.bp3-minimal:not([class*='bp3-intent-']) {\n    background-color: ${Colors.Gray100};\n    color: ${Colors.Gray900};\n  }\n\n  .bp3-tag.bp3-minimal.bp3-intent-success {\n    background-color: ${Colors.Green50};\n    color: ${Colors.Green700};\n  }\n\n  .bp3-tag.bp3-minimal.bp3-intent-warning {\n    background-color: ${Colors.Yellow50};\n    color: ${Colors.Yellow700};\n  }\n\n  .bp3-tag.bp3-minimal.bp3-intent-danger {\n    background-color: ${Colors.Red50};\n    color: ${Colors.Red700};\n  }\n`;\n\nconst StyledMenu = styled(Menu)`\n  width: 400px;\n`;\n"],"names":["GraphTraverser","items","itemNameMap","forEach","item","name","this","step","depth","results","next","traverse","Object","values","callback","inputs","input","dependsOn","d","itemNamed","solid","outputs","output","dependedBy","expansionDepthForClause","clause","includes","Number","MAX_SAFE_INTEGER","length","filterByQuery","query","all","applyingEmptyDefault","focus","traverser","Set","clauses","split","parts","exec","trim","parentsClause","itemName","descendentsClause","itemsMatching","filter","s","isPlannedDynamicStep","replace","startsWith","dynamicKeyWithoutIndex","test","upDepth","downDepth","add","fetchUpstream","other","fetchDownstream","Array","from","useCopyToClipboard","clipboardAPI","navigator","clipboard","node","React","current","document","createElement","style","position","top","body","appendChild","removeChild","text","writeText","value","select","execCommand","DEFAULT_RESULT_NAME","titleOfIO","i","definition","AssetConnectedEdges","edges","highlighted","AssetEdges","color","Colors","fromId","toId","id","btoa","viewBox","refX","refY","markerUnits","markerWidth","orient","fill","map","edge","idx","StyledPath","buildSVGPath","source","target","to","stroke","markerEnd","styled","SidebarAssetInfo","assetKey","liveData","partitionHealthData","usePartitionHealthData","data","useQuery","SIDEBAR_ASSET_QUERY","variables","path","fetchPolicy","lastMaterialization","asset","assetNodeOrError","__typename","Header","Box","padding","vertical","Spinner","purpose","repoAddress","buildRepoAddress","repository","location","metadataForAssetNode","assetMetadata","assetType","hasAssetMetadata","assetConfigSchema","configSchemaForAssetNode","OpMetadataPlugin","op","metadata","pluginForMetadata","opName","AssetEvents","assetLastMaterializedAt","timestamp","assetHasDefinedPartitions","partitionDefinition","asSidebarSection","paramsTimeWindowOnly","params","setParams","borderBottom","description","SidebarComponent","title","horizontal","Description","ConfigTypeSchema","type","typesInScope","recursiveConfigTypes","AssetMetadata","TypeSidebarSection","flex","direction","gap","PartitionHealthSummary","DagsterType","displayName","displayNameForAssetKey","margin","left","right","marginBottom","display","justifyContent","flexWrap","opacity","alignItems","Icon","size","undefined","AssetCatalogLink","assetDetailsPathForKey","Link","SIDEBAR_ASSET_FRAGMENT","gql","ASSET_NODE_CONFIG_FRAGMENT","ASSET_NODE_OP_METADATA_FRAGMENT","METADATA_ENTRY_FRAGMENT","ASSET_FOR_NAVIGATION_QUERY","EXPERIMENTAL_MINI_SCALE","AssetGraphExplorer","props","useAssetGraphData","explorerPath","opsQuery","fetchOptions","fetchResult","assetGraphData","graphQueryItems","graphAssetKeys","allAssetKeys","useLiveDataForAssetKeys","liveResult","liveDataByNode","liveDataRefreshState","useQueryRefreshAtInterval","FIFTEEN_SECONDS","useDocumentTitle","useDidLaunchEvent","refetch","Loading","allowStaleData","queryResult","graphHasCycles","NonIdealState","icon","AssetGraphExplorerWithData","pipelineName","options","setOptions","onChangeExplorerPath","onNavigateToForeignNode","findAssetLocation","apollo","useApolloClient","key","assetOrError","def","opNames","jobName","jobNames","find","isHiddenAssetGroupJob","groupName","useFindAssetLocation","setHighlighted","selectedAssetValues","selectedGraphNodes","nodes","tokenForAssetKey","lastSelectedNode","useAssetLayout","layout","loading","async","viewportEl","onSelectNode","e","stopPropagation","token","nodeIsInDisplayedGraph","nextOpsNameSelection","shiftKey","metaKey","existing","added","opsInRange","graph","without","uniq","join","nextCenter","zoomToSVGCoords","bounds","x","y","lastRenderedLayout","setLastRenderedLayout","renderingNewLayout","zoomToSVGBox","autocenter","SplitPanelContainer","identifier","firstInitialPercent","firstMinSize","first","nodeType","isGraph","keys","SVGViewport","ref","r","interactor","graphWidth","width","graphHeight","height","onClick","onArrowKeyDown","dir","layoutWithoutExternalLinks","pickBy","nextId","closestNodeInDirection","onDoubleClick","maxZoom","maxAutocenterZoom","_scale","scale","SVGContainer","graphNode","JSON","parse","onMouseEnter","onMouseLeave","overflow","AssetNode","selected","ForeignNode","Checkbox","format","label","checked","preferAssetRendering","onChange","QueryRefresh","refreshState","dataDescription","LaunchAssetExecutionButton","context","assetKeys","a","isSourceAsset","n","preferredJobName","GraphQueryInput","placeholder","popoverPosition","second","pipelineSelector","SidebarPipelineOrJobOverview","graphDirectionOf","stack","pop","downstream","Boolean","some","push","seen","ledToTarget","result","MISSING_LIVE_DATA","unstartedRunIds","inProgressRunIds","runWhichFailedToMaterialize","computeStatus","AssetComputeStatus","stepKey","inAssetCatalog","firstOp","computeName","graphName","withMiddleTruncation","maxLength","ASSET_NODE_NAME_MAX_LENGTH","AssetNodeContainer","$selected","AssetNodeBox","Name","marginTop","textOverflow","maxWidth","ASSET_NODE_ANNOTATIONS_MAX_WIDTH","ComputeStatusNotice","markdownToPlaintext","marginLeft","minWidth","Stats","StatsRow","AssetRunLink","runId","event","timeFormat","showSeconds","showTimezone","AssetLatestRunWithNotices","computeKind","minified","paddingTop","tags","window","requestAnimationFrame","dispatchEvent","Event","isEqual","AssetNodeMinimal","MinimalAssetNodeContainer","MinimalAssetNodeBox","MinimalName","fontSize","children","linkToRunEvent","rel","titleForRun","ASSET_NODE_LIVE_FRAGMENT","ASSET_NODE_FRAGMENT","BoxColors","p","NodeHighlightColors","FontFamily","UpstreamNotice","content","stopped","backgroundColor","ForeignNodeLink","className","opts","layoutAssetGraph","graphData","g","dagre","compound","setGraph","rankdir","marginx","marginy","nodesep","edgesep","ranksep","setDefaultEdgeLabel","shouldRender","getAssetNodeDimensions","setNode","foreignNodes","upstreamId","downstreamId","setEdge","v","w","weight","getForeignNodeDimensions","dagreNodesById","maxHeight","dagreNode","Math","max","points","min","ASSET_GRAPH_QUERY","notifyOnNetworkStatusChange","groupSelector","assetNodes","buildGraphQueryItems","buildGraphData","hideEdgesToNodesOutsideQuery","removeEdgesToHiddenAssets","dependencyKeys","dependedByKeys","upstream","ASSETS_GRAPH_LIVE_QUERY","skip","buildLiveData","assetNode","configField","configSchema","configType","fields","CONFIG_TYPE_SCHEMA_FRAGMENT","AssetLineageInfoElement","lineage_info","partition_list_label","partitions","partition_list_str","partition","asOf","bottom","Tooltip","Timestamp","ms","modifiers","offset","enabled","placement","reduce","accum","curr","ii","AssetLineageElements","elements","collapsed","setCollapsed","ButtonLink","slice","info","ASSET_LINEAGE_FRAGMENT","AssetEventsTable","hasPartitions","hasLineage","groups","focused","setFocused","Table","group","HoverableRow","HTMLElement","closest","EventGroupRow","isFocused","MetadataEntriesRow","NoneSpan","latest","assetLineage","observationsAboutLatest","background","colSpan","metadataEntries","DetailsTable","entry","MetadataEntry","expandSmallValues","obs","moment","focusCss","paddingLeft","borderLeft","run","runOrError","repositoryOrigin","repositoryName","repositoryLocationName","repo","useRepository","whiteSpace","Group","spacing","DisclosureTriangle","open","AllIndividualEventsLink","events","PipelineReference","showIcon","pipelineHrefContext","snapshotId","pipelineSnapshotId","isJob","isThisThingAJob","status","setOpen","count","Dialog","isOpen","canEscapeKeyClose","canOutsideClickClose","onClose","Button","intent","DisclosureTriangleButton","$open","IconWrapper","AssetMaterializationGraphs","xHover","setXHover","reversed","reverse","graphDataByMetadataLabel","extractNumericData","xAxis","graphLabels","sort","useStateWithStorage","validateHiddenGraphsState","collapsedLabels","setCollapsedLabels","toggleCollapsed","c","flexDirection","border","side","fontWeight","AssetValueGraph","onHoverX","shrinkable","json","isArray","datapoints","series","numericMetadataLabels","flatMap","k","append","minX","maxX","minY","maxY","existingForPartition","isNaN","xNumeric","l","NaN","intValue","parseInt","intRepr","floatValue","serie","xs","ys","minXNumeric","maxXNumeric","CurrentRunsBanner","wrap","RunIDTag","BaseTag","textColor","fillColor","Warning","errorBackground","ErrorContainer","marginRight","FailedRunsSinceMaterializationBanner","LatestMaterializationMetadata","latestRun","latestEvent","latestAssetLineage","MetadataTable","NO_PARTITION_KEY","sortByEventTimestamp","b","before","xAxisDefault","time","loadUsingPartitionKeys","ASSET_EVENTS_QUERY","partitionInLast","limit","materializations","assetMaterializations","observations","assetObservations","allPartitionKeys","partitionKeys","loadedPartitionKeys","useRecentAssetEvents","grouped","definedPartitionKeys","groupBy","m","orderedPartitionKeys","sorted","groupByPartition","activeItems","overflowX","ButtonGroup","buttons","updates","AssetLink","url","isGroup","linkUrl","wordBreak","outputDefinitions","AssetMetadataTable","rows","DAGSTER_TYPE_FRAGMENT","labels","indexOf","datasets","lineTension","borderColor","pointBorderWidth","pointHoverBorderWidth","pointHoverRadius","pointHoverBorderColor","animation","duration","point","radius","dataset","dataIndex","scales","yAxisLabel","plugins","legend","onHover","_","activeElements","itemIdx","index","AssetWipeDialog","onComplete","requery","useMutation","ASSET_WIPE_MUTATION","refetchQueries","requestWipe","wipe","PYTHON_ERROR_FRAGMENT","AssetTable","view","assets","actionBarComponents","prefixPath","displayPathForAsset","maxDisplayCount","toWipe","setToWipe","canWipeAssets","usePermissions","groupedByFirstComponent","displayPathKey","stringify","useSelectionReducer","checkedPaths","checkedIds","onToggleFactory","onToggleAll","checkedAssets","checkedPathsOnscreen","pageDisplayPathKeys","pathKey","has","disabled","MoreActionsDropdown","clearSelection","paddingBottom","indeterminate","HTMLInputElement","pathStr","AssetEntryRow","isSelected","onToggleChecked","onWipe","canWipe","AssetEmptyRow","fullPath","toGraphId","paddingRight","nativeEvent","MouseEvent","getModifierState","RepositoryLink","showRefresh","workspacePathFromAddress","TimestampDisplay","AnchorButton","A","Popover","Menu","MenuLink","lineageScope","showBulkWipeDialog","setShowBulkWipeDialog","ASSET_TABLE_DEFINITION_FRAGMENT","ASSET_TABLE_FRAGMENT","AssetsEmptyState","href","validateSavedAssetView","storedValue","PAGE_SIZE","AssetsCatalogTable","setPrefixPath","setView","useQueryPersistedState","queryKey","cursor","setCursor","search","setSearch","decode","qs","encode","searchGroup","setSearchGroup","searchPath","toLowerCase","assetsQuery","ASSET_CATALOG_TABLE_QUERY","groupQuery","ASSET_CATALOG_GROUP_TABLE_QUERY","error","definitionToAssetTableFragment","assetsOrError","useAllAssets","filtered","groupMatch","buildAssetGroupSelector","pathMatch","cursorValue","cursorIndex","findIndex","ns","prevPageIndex","nextPageIndex","displayed","prevCursor","nextCursor","buildFlatProps","namespaceForAsset","namespaces","filterAssetsByNamespace","buildNamespaceProps","displayedKeys","useMergedRefresh","PythonErrorInfo","paginationProps","hasPrevCursor","hasNextCursor","popCursor","advanceCursor","reset","Wrapper","StickyTableContainer","$top","tooltip","TextInput","AssetGroupSuggest","assetGroups","uniqBy","localeCompare","repoContextNeeded","hasOwnProperty","Suggest","selectedItem","inputProps","rightElement","ClearButton","C","inputValueRenderer","itemPredicate","itemsEqual","itemRenderer","assetGroup","active","handleClick","buildRepoPath","noResults","onItemSelect","paths","every","part","messageForLaunchBackfillError","launchPartitionBackfill","errors","invalidStepKey","invalidOutputName","underline","showCustomAlert","showBackfillErrorToast","SharedToaster","message","showBackfillSuccessToast","history","backfillId","action","RunningBackfillsNotice","partitionSetName","RUNNING_BACKFILLS_NOTICE_QUERY","runningBackfillCount","partitionBackfillsOrError","LaunchAssetChoosePartitionsDialog","LaunchAssetChoosePartitionsDialogBody","assetJobName","upstreamAssetKeys","upstreamData","allKeys","mostRecentKey","setSelected","previewCount","setPreviewCount","launching","setLaunching","client","useHistory","launchWithTelemetry","useLaunchWithTelemetry","partitionSetsData","ASSET_JOB_PARTITION_SETS_QUERY","partitionSet","partitionSetsOrError","onLaunch","CONFIG_PARTITION_SELECTION_QUERY","repositorySelector","partitionName","tagAndConfigData","partitionSetOrError","tagsOrError","runConfigOrError","runConfigData","yaml","executionParams","executionParamsForAssetJob","mode","launchPipelineExecution","mutate","mutation","LAUNCH_PARTITION_BACKFILL_MUTATION","backfillParams","selector","partitionNames","reexecutionSteps","flat","fromFailure","launchBackfillData","upstreamUnavailable","statusByPartition","upstreamUnavailableSpans","assembleIntoSpans","small","overflowY","showAssetKey","span","stringForSpan","reject","canLaunchPipelineExecution","state","setState","isRematerializeForAll","LAUNCH_ASSET_LOADER_QUERY","forceLaunchpad","stateForLaunchingAssets","sessionPresets","jobsInCommon","anyAssetsHaveConfig","assetOpNames","solidSelection","solidSelectionQuery","executionMetadata","t","pick","DagsterTag","o","assetSelection","LAUNCH_ASSET_EXECUTION_ASSET_NODE_FRAGMENT","setResult","assetKeyJSONs","missingKeyJSON","loadKey","load","PARTITION_HEALTH_QUERY","materializationCountByPartition","fromPairs","materializationCount","spans","indexToPct","toFixed","assetData","minHeight","highestIndex","endIdx","prev","cur","selectedSpans","populated","startIdx","borderRadius","zIndex","outline","dagsterTypeKind","gqlTypePredicate","DagsterTypeName","typeKind","DagsterTypeSummary","horizontalPadding","tableSchemaEntry","schema","itemHorizontalPadding","GanttChartMode","MIN_SCALE","MAX_SCALE","LEFT_INSET","TOP_INSET","BOTTOM_INSET","FLAT_INSET_FROM_PARENT","BOX_HEIGHT","BOX_MARGIN_Y","BOX_SPACING_X","BOX_WIDTH","BOX_DOT_WIDTH_CUTOFF","BOX_SHOW_LABEL_WIDTH_CUTOFF","BOX_DOT_SIZE","BOX_DOT_MARGIN_Y","LINE_SIZE","CSS_DURATION","DEFAULT_OPTIONS","WATERFALL","hideWaiting","hideTimedMode","zoom","hideUnselectedSteps","isDynamicStep","endsWith","invocationsOfPlannedDynamicStep","plannedStepKey","runtimeStepKeys","replacePlannedIndex","stepKeyWithIndex","match","highlightTimer","GanttChartModeControl","msToMinuteLabel","round","msToSecondLabel","msToSubsecondLabel","TICK_CONFIG","tickIntervalMs","tickLabels","GanttChartTimescale","viewport","nowMs","startMs","highlightedMs","layoutSize","transform","ticks","lines","pxPerMs","tickConfig","pxPerTick","firstTickX","floor","TICK_LABEL_WIDTH","TimescaleContainer","TimescaleTicksContainer","formatElapsedTime","timeX","labelOffset","TimescaleLinesContainer","TICKS_ROW_HEIGHT","ZoomSlider","ZoomSliderContainer","$fillColor","onMouseDown","initialX","rect","currentTarget","getBoundingClientRect","classList","contains","pageX","onUpdate","nextValue","addEventListener","onRelease","removeEventListener","tabIndex","SliderStyles","validateSavedMode","HIGHLIGHT_TIME_EVENT","setHighlightedGanttChartTime","debounced","clearTimeout","setTimeout","CustomEvent","detail","GanttChart","onSetSelection","selection","toolbarActions","setMode","cachedLayout","cachedLayoutParams","graphFiltered","layoutParams","names","buildLayout","updateOptions","changes","onChangeMode","onUpdateQuery","onDoubleClickStep","GanttChartContainer","GanttChartInner","useViewport","containerProps","onMoveToViewport","hoveredStep","setHoveredNodeName","hoveredTime","setHoveredTime","overrideNowTime","Date","now","setNowMs","rootServerURI","AppContext","WebSocketContext","availability","lostWebsocket","WebSocket","CLOSED","minScale","startedPipelineAt","exp","log","exitedAt","renderInterval","timeout","listener","adjustLayoutWithRunMetadata","EMPTY_RUN_METADATA","boxes","boundsForBox","focusedTime","sortedSelectedSteps","steps","start","firstMeta","lastMeta","end","measurementComplete","GanttChartViewportContents","focusedSteps","onClickStep","GraphQueryInputContainer","WebsocketWarning","FilterInputsBackgroundBox","presets","interestingQueriesFor","axis","GanttStatusPanel","onHighlightStep","intersectsViewport","verticalLinesAtXCoord","box","child","childIdx","boundsForLine","childNotDrawn","childWaiting","overlapAtXCoord","GanttLine","darkened","dotted","depNotDrawn","depIdx","useDot","evt","boxStyleFor","IStepState","truncatedBoxLabel","markers","marker","aCenterY","bIsDot","bCenterY","straight","maxXAvoidingOverlap","borderTop","borderRight","totalPadding","SpinnerWrapper","GanttChartLoadingState","QueuedState","runsPathWithFilters","root","roots","addChildren","deepen","parents","boxesByY","changed","highestYParent","onTargetY","parentX","willCross","willCauseCrossing","bottomY","row","ensureSubtreeAfterParentInArray","parent","parentIdx","boxIdx","splice","out","dep","depNode","depBoxIdx","depBox","TextColorForStates","BackgroundColorForStates","positionAndSplitBoxes","positionFor","meta","assign","attempts","runBoxes","runIdx","exitState","WeakMap","nextMarkers","nextBoxes","set","get","cloneLayout","xForMs","widthForMs","_box","earliestAllowedX","unstarted","visit","minXForUnstartedChildren","shift","positionUntimedBoxes","globalMarkers","entries","stepBox","_run","Error","errorsQuery","slowStepsQuery","rightmostCompletedBox","subsetTitleForRun","stepsTag","RunGroupPanel","runStatusLastChangedAt","RUN_GROUP_PANEL_QUERY","runGroupOrError","runs","unsorted","startTime","RunGroupRun","ThinLine","RunTitle","RootTag","RUN_TIME_FRAGMENT","lineHeight","userSelect","preparing","executing","errored","succeeded","renderStepItem","stepName","StepItem","isFinished","startedProcessAt","EmptyNotice","collapsedByDefault","StepItemContainer","preventOverflow","flip","StepStatusDot","StepLabel","Elapsed","OptionsContainer","CursorControlsContainer","OptionsDivider","OptionsSpacer","toGraphQueryItems","plan","runtimeStepMetadata","keyExpansionMap","kind","StepKind","nodeTable","stepRuntimeKeys","nodeInput","upstreamKeys","upstreamKey","upstreamOutput","EXECUTION_PLAN_TO_GRAPH_FRAGMENT","setOffset","setSize","initialOffset","measureRef","resizeObserver","onApplySize","container","element","__sized","targetOffset","scrollTop","scrollLeft","clientWidth","clientHeight","observe","console","warn","disconnect","onScroll","cancel","animated","scrollWidth","scrollHeight","onDone","animate","done","setRef","el","PARENT_IN","PARENT_OUT","OpIOBox","jumpTargetOp","highlightedEdges","colorKey","onHighlightEdges","isHighlighted","OpIOContainer","$colorKey","$highlighted","metadataForCompositeParentIO","parentDefinition","others","inputMappings","mappedInput","outputMappings","mappedOutput","metadataForIO","invocation","TOOLTIP_STYLE","OpNode","preventDefault","handleDoubleClick","handleEnterComposite","onEnterComposite","handleKindClicked","prevProps","dim","composite","NodeContainer","$minified","$secondaryHighlight","$dim","isDynamicMapped","inputDefinitions","OpNodeAssociatedAssets","more","OP_NODE_INVOCATION_FRAGMENT","OP_NODE_DEFINITION_FRAGMENT","Border","Background","hueForTag","charCodeAt","OpTags","OpTagsContainer","tag","DETAIL_ZOOM","DEFAULT_ZOOM","MIN_AUTOCENTER_ZOOM","MIN_ZOOM","PanAndZoomInteractor","_animation","getOffsetXY","lastX","lastY","onMove","delta","onUp","onWheel","cursorPosition","altKey","shiftXY","deltaX","deltaY","targetScale","getMaxZoom","adjustZoomRelativeToScreenPoint","render","IconButton","adjusted","EPSILON","stepSize","labelRenderer","NoneInteractor","_viewport","panzoom","_lastWheelTime","_lastWheelDir","Node","onZoomAndCenter","offsetXY","screenToSVGCoords","abs","onKeyDown","nodeName","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","code","passive","RO","forceUpdate","ownerRect","dw","dh","desiredScale","boundedScale","smoothZoom","clientX","clientY","dx","dy","nextScale","centerSVGCoord","newScale","dotsize","SVGViewportStyles","backgroundPosition","backgroundSize","transformOrigin","getViewport","Interactors","PanAndZoom","None","defaultProps","IO_HEIGHT","PORT_INSET_X","PARENT_INVOCATION_PADDING","flattenIO","arrays","array","layoutExternalConnections","links","layoutWidth","insetWidth","inset","baseX","yShift","link","shiftDirection","layoutOp","accY","inputsLayouts","buildIOSmallLayout","centeringOffsetX","port","buildIOLayout","opLayout","OP_BASE_HEIGHT","outputLayouts","OP_WIDTH","_opLayoutCacheKey","ops","parentOp","solidKey","parentKey","getFullOpLayout","memoize","pipelineOps","graphlib","Graph","parentIOPadding","PARENT_DEFINITION_PADDING","opNamesPresent","edgeName","dagreNodes","conn","invocationBoundingBox","mappingLeftEdge","mappingLeftSpacing","boundingBottom","layoutParentGraphOp","asyncGetFullOpLayout","asyncMemoize","staticPathRoot","Promise","resolve","worker","Worker","URL","terminate","postMessage","_assetLayoutCacheKey","getFullAssetLayout","asyncGetFullAssetLayout","reducer","cacheKey","payload","initialState","useOpLayout","dispatch","runAsync","runAsyncLayout","h","isOpHighlighted","isNodeOffscreen","layoutNode","viewportRect","selectedNodeKey","center","score","computeNodeKeyPrefixBoundingBoxes","maxDepth","base","x1","x2","y1","y2","currentTitle","currentQueryString","defaults","raw","inferTypeOfQueryParam","useLocation","ignoreQueryPrefix","qsWithDefaults","qsDecoded","inferTypeOfQueryParams","valueRef","onChangeRef","updated","pathname","arrayFormat","q","copy","delete","lastCheckedId","allIds","indexOfLast","indexOfChecked","BackfillPartitionsRequestedDialog","backfill","fontFamily","BackfillStepStatusDialog","BackfillStepStatusDialogContent","pageSize","setPageSize","runsFilter","usePartitionStepQuery","PartitionStepStatus","BackfillTerminationDialog","CANCEL_BACKFILL_MUTATION","cancelBackfill","isSubmitting","setIsSubmitting","numUnscheduled","numPartitions","numRequested","unfinishedRuns","unfinishedMap","canTerminate","BulkActionStatus","TerminationDialog","selectedRuns","BackfillTable","showPartitionSet","allPartitions","backfills","terminationBackfill","setTerminationBackfill","stepStatusBackfill","setStepStatusBackfill","partitionsRequestedBackfill","setPartitionsRequestedBackfill","RESUME_BACKFILL_MUTATION","resumeBackfill","cancelRunBackfill","setCancelRunBackfill","canCancelPartitionBackfill","candidateId","resume","resumePartitionBackfill","textAlign","BackfillRow","onTerminateBackfill","onResumeBackfill","onShowStepStatus","onShowPartitionsRequested","canLaunchPartitionBackfill","counts","getProgressCounts","runsUrl","partitionSetBackfillUrl","workspacePipelinePath","repoName","repoLocation","stringFromValue","canCancel","PartitionSetReference","BackfillRequested","onExpand","BackfillStatus","BackfillRunStatus","partitionData","RunStatus","TagButton","Tag","interactive","PartitionStatus","hideStatusTooltip","runStatuses","doneStatuses","successStatuses","partitionRun","splitPartitions","encodeURIComponent","repoAddressAsString","byPartitionRuns","runPartitionName","latestPartitionRuns","numQueued","queuedStatuses","numInProgress","inProgressStatuses","numSucceeded","numFailed","failedStatuses","numTotal","numSkipped","BACKFILL_TABLE_FRAGMENT","StepSummaryForRun","STEP_SUMMARY_FOR_RUN_QUERY","pipelineRunOrError","relevantSteps","stepStats","StepEventStatus","stepCount","endTime","addQueryPrefix","LastRunSummary","TickTag","tick","instigationType","InstigationTickStatus","runIds","RunList","runKeys","skipReason","targetTagName","showError","InstigationType","LinkButton","minimal","assertUnreachable","LAUNCHED_RUN_LIST_QUERY","pipelineRunsOrError","FailedRunList","originRunIds","TICK_TAG_FRAGMENT","RUN_TABLE_RUN_FRAGMENT","InstigatedRunStatus","instigationState","RunStatusLink","RUN_STATUS_FRAGMENT","INSTIGATION_STATE_FRAGMENT","StatusTable","UnloadableSensors","sensorStates","UnloadableSensorInfo","sensorState","SensorStateRow","UnloadableSchedules","scheduleStates","UnloadableScheduleInfo","scheduleState","ScheduleStateRow","selectorId","canStopSensor","STOP_SENSOR_MUTATION","onCompleted","displaySensorMutationErrors","stopSensor","toggleOffInFlight","confirm","useConfirmation","onChangeSwitch","InstigationStatus","jobOriginId","jobSelectorId","lacksPermission","latestTick","DISABLED_MESSAGE","checkbox","instigatorState","canStopRunningSchedule","STOP_SCHEDULE_MUTATION","displayScheduleMutationErrors","stopSchedule","typeSpecificData","cronSchedule","scheduleOriginId","scheduleSelectorId","humanCronString","ConfigEditorConfigPicker","pipeline","onSaveSession","onSelectPreset","onSelectPartition","partitionSets","configGenerators","PickerContainer","ConfigEditorConfigGeneratorPicker","presetName","partitionsSetName","onSelect","ConfigEditorPartitionPicker","basePath","repoAddressToSelector","CONFIG_PARTITIONS_QUERY","sortOrderKey","sortOrder","setSortOrder","retrieved","partitionsOrError","onClickSort","order","SortButton","Intent","str","defaultSelectedItem","button","shortcutLabel","shortcutFilter","onShortcut","click","configGenerator","itemListRenderer","itemsParentRef","renderItem","filteredItems","renderedPresetItems","renderedPartitionSetItems","bothTypesPresent","ulRef","rightIcon","CONFIG_EDITOR_GENERATOR_PIPELINE_FRAGMENT","CONFIG_EDITOR_GENERATOR_PARTITION_SETS_FRAGMENT","LaunchButtonStatus","useLaunchButtonCommonState","runCount","starting","setStarting","onConfigSelected","option","forced","Disabled","Ready","Starting","LaunchButton","config","ButtonWithConfiguration","LaunchButtonDropdown","primary","setIsOpen","allOptionsDisabled","popoverDisabled","joined","onInteraction","nextOpen","hoverOpenDelay","openOnTargetFocus","LaunchMenuItem","ButtonContainer","role","MaxwidthText","MenuItem","LAUNCH_PIPELINE_EXECUTION_MUTATION","logTelemetry","useTelemetryAction","behavior","opSelection","TelemetryAction","handleLaunchResult","showLaunchError","LaunchRootExecutionButton","getVariables","LaunchpadTransientSessionContainer","launchpadType","initialSessionComplete","createSingleSession","session","setSession","LaunchpadSession","onSave","newSession","LaunchpadStoredSessionsContainer","AssetLaunchpad","LaunchpadAllowedRoot","pipelinePath","JobLaunchpad","useParams","repoPath","explorerPathFromString","useJobTitle","useStripSnapshotFromPath","PIPELINE_EXECUTION_ROOT_QUERY","partialRefetch","pipelineOrError","LaunchpadSessionLoading","LaunchpadSessionError","fallback","EXECUTION_SESSION_CONTAINER_PIPELINE_FRAGMENT","EXECUTION_SESSION_CONTAINER_PARTITION_SETS_FRAGMENT","GUTTER_ID","rm","elt","parentNode","showTooltipFor","tt","nodeRect","cloneNode","showTooltip","hide","CodeMirror","poll","setInterval","host","clearInterval","clearMarks","cm","lint","hasGutter","clearGutter","marked","clear","makeMarker","severity","multiple","tooltips","inner","annotationTooltip","ann","tip","messageHTML","innerHTML","createTextNode","updateLinting","annotationsNotSorted","annotations","line","groupByLine","anns","maxSeverity","tipLabel","createDocumentFragment","formatAnnotation","markText","__annotation","setGutterMarker","onUpdateLinting","startLinting","passOptions","getAnnotations","getHelper","waitingFor","abort","off","on","getValue","arg2","operation","lintAsync","then","issues","delay","onMouseOver","srcElement","pos","coordsChar","findMarksAt","docs","getDocs","docsEl","textContent","popupTooltip","LintState","ContainerType","parentsAddingChildKeyAtIndent","indent","parentsPoppingItemsDeeperThan","immediateParent","childKeys","parentsAddingChildKeyToLast","RegExps","KEYWORD","RegExp","DICT_COLON","DICT_KEY","QUOTED_STRING","BLOCKSTART_PIPE_OR_ARROW","NUMBER","VARIABLE","findAutocompletionContext","currentIndent","allConfigTypes","rootConfigType","available","closestMappingType","inArray","nextTypeKey","typeParamKeys","parentTypeDef","typeKey","configTypeKey","parentConfigType","innerType","childTypeKey","childEntriesUnique","nonScalarTypeKey","nonScalarType","availableFields","expandAutocompletionContextAtCursor","editor","searchString","hintOptions","getCursor","getTokenAt","prevToken","ch","string","validationErrorToCodemirrorError","yamlDoc","codeMirrorDoc","reason","range","findRangeInDocumentFromPath","posFromIndex","doc","pathPart","contents","nodeAtPath","lineComment","flattenSpans","fold","startState","trailingSpace","escaped","inValue","inBlockLiteral","inBlockLiteralIndentation","inlineContainers","stream","peek","col","column","wasEscaped","wasTrailingSpace","indentMark","eatSpace","sol","skipToEnd","indentation","Dict","List","eol","keyIndent","parentContainer","list","formatReplacement","field","inList","replacement","postReplacementIndentation","listMarkerPresent","nextLineIndent","repeat","completionHasChildren","innerKey","isCompOrList","buildSuggestion","div","innerText","substr","isScalarUnionNewLine","searchWithoutQuotes","val","givenName","scalarType","scalarTypeKey","scalarSuggestions","nonScalarSuggestions","f","checkConfig","getDoc","lints","lintingTruncated","fromPos","toPos","lastMarkLocation","nextLineLocation","validationResult","isValid","old","lintOnChange","getWrapperElement","gutters","getOption","hasLintGutter","Function","AUTO_COMPLETE_AFTER_KEY","performLint","debounce","ConfigEditorStyle","createGlobalStyle","ConfigEditor","_editor","moveCursor","scroll","getScrollInfo","cursorCoords","scrollIntoView","moveCursorToPath","configCode","performInitialPass","readOnly","onHelpContextChange","theme","lineNumbers","indentUnit","smartIndent","showCursorWhenSelecting","completeSingle","closeOnUnfocus","keyMap","extraKeys","showHint","Tab","foldGutter","editorDidMount","onBeforeChange","onConfigChange","onCursorActivity","getSelection","onBlur","onKeyUp","isHelpContextEqual","ConfigEditorHelp","allInnerTypes","Container","ConfigScrollWrap","AutocompletionsNote","CONFIG_EDITOR_RUN_CONFIG_SCHEMA_FRAGMENT","CONFIG_EDITOR_VALIDATION_FRAGMENT","errorStackToYamlPath","fieldName","listIndex","mapKey","responseToYamlValidationResult","configYaml","response","err","parsed","topLevelKey","ConfigEditorModePicker","resolvedMode","modeName","modes","onModeChange","singleMode","valid","modeError","Select","activeItem","filterable","SOLID_SELECTOR_QUERY","GRAPH_EXPLORER_SOLID_HANDLE_FRAGMENT","OpSelector","serverProvidedSubsetError","onFlattenGraphsChange","inputRef","flattenGraphs","requestScopeHandleID","explodeCompositesInHandleGraph","solidHandles","flattenGraphsEnabled","opsFetchError","queryResultOps","errorMessage","PopoverErrorWrap","ShortcutHandler","nextQuery","onFocus","linkToPreview","setFlattenGraphs","isValidationError","stateToHint","invalid","missing","present","none","RemoveExtraConfigButton","onRemoveExtraPaths","extraNodes","knownKeyExtraPaths","otherPaths","ScaffoldConfigButton","onScaffoldMissingConfig","missingNodes","confirmationMessage","RunPreview","validation","onHighlightPath","runConfigSchema","errorsOnly","setErrorsOnly","rootCompositeChildren","allConfigVersion","errorsAndPaths","fieldNames","resources","solids","rest","hasOps","itemsIn","pathErrors","isPresent","pathExistsInObject","containsMissing","missingNode","isInvalid","isMissing","isRequired","ItemsEmptyNotice","ErrorListContainer","Section","SectionTitle","ErrorRow","onHighlight","RuntimeAndResourcesSection","ItemSet","RUN_PREVIEW_VALIDATION_FRAGMENT","ErrorRowContainer","hoverable","truncateErrorMessage","object","scaffoldType","typeLookup","isSelector","String","Int","Float","Bool","Any","scaffoldPipelineConfig","createTypeLookup","YAML_SYNTAX_INVALID","previewLoading","preview","previewedDocument","tagEditorOpen","configLoading","editorHelpContext","LaunchButtonContainer","flexGrow","currentSession","mounted","editorSplitPanelContainer","previewCounter","tagsFromSession","configResult","PIPELINE_EXECUTION_CONFIG_SCHEMA_QUERY","configSchemaOrError","runConfigSchemaOrError","launchButtonTitle","currentPreviewCount","configYamlOrEmpty","PREVIEW_CONFIG_QUERY","isLatestRequest","isPipelineConfigValid","tagsApplyingNewBaseTags","newBaseTags","preservedUserTags","bt","preset","onlyKeyAndValue","runConfigYaml","needsRefresh","sessionSolidSelection","onConfigLoading","onConfigLoaded","onRefreshConfig","matchingPreset","openTagEditor","refreshableSessionBase","LoadingOverlay","isLoading","SessionSettingsBar","SessionSettingsSpacer","TagEditor","tagsFromDefinition","tagDict","toSave","onRequestClose","onRequestEdit","deletePropertyPath","updatedRunConfigData","merge","obj","lastKey","RUN_CONFIG_SCHEMA_OR_ERROR_FRAGMENT","LoadingOverlayContainer","editState","setEditState","toError","onTagEdit","TagList","editable","onRemove","TagContainer","sessionTag","canReloadRepositoryLocation","repoAddressTruncated","RepositoryName","tryReload","reloading","ReloadTooltip","StyledButton","ScheduleOrSensorTag","schedules","sensors","showSwitch","scheduleCount","sensorCount","buttonText","MatchingSchedule","schedule","MatchingSensor","sensor","executionTimezone","running","OpTypeSignature","inputSide","breakOnUnderscores","outputSide","TypeSignature","OP_TYPE_SIGNATURE_FRAGMENT","DAGSTER_TYPE_WITH_TOOLTIP_FRAGMENT","Code","PartitionRangeInput","valueString","setValueString","partitionNameJSON","partitionNameArr","placeholderForPartitions","tryCommit","terms","term","rangeMatch","allStartIdx","allEndIdx","prefix","suffix","textToPartitions","keyTestFn","selectionWindowSize","tooltipMessage","currentSelectionRange","setCurrentSelectionRange","toPartitionName","percentage","getRangeSelection","setHoveredSelectionRange","setSelectionRange","currentSelection","newSelected","keyStatus","_partitionsToSpans","showSeparators","_onClick","_onMouseDown","_statusToColor","_statusToText","PartitionRunListForStep","PARTITION_RUN_LIST_FOR_STEP_QUERY","RunTable","additionalColumnHeaders","hovered","setHovered","ceil","BOX_SIZE","BUFFER","PARTITION_STEP_STATUS_PIPELINE_QUERY","pipelineSnapshotOrError","useMatrixData","stepQuery","stepRows","partitionColumns","sortPartitionSteps","stepsByName","stepRow","visibleCount","visibleStart","visibleEnd","visibleColumns","minUnix","maxUnix","unix","timeboundsOfPartitions","topLabelHeight","topLabelHeightForLabels","PartitionRunMatrixContainer","stepStatsByRunId","isStepKeyForNode","autoFocus","floating","flexShrink","Divider","PagerControl","$direction","$height","runsLoaded","PartitionStepSquare","opened","setOpened","StatusSquareFinalColor","interactionKind","onOpening","onClosed","STEP_STATUS_COLORS","SUCCESS","FAILURE","SKIPPED","IN_PROGRESS","flatGradient","GridColumn","multiselectFocused","TopLabelTiltedInner","LeftLabel","TopLabel","maxlength","TopLabelTilted","GridFloatingContainer","getStartTime","byStartTimeAsc","dynamicRegex","cachedMatrixData","shallowCompareKeys","solidsFiltered","partitionsByName","blankState","lastRun","lastRunStepStatus","stats","partitionsWithARun","totalFailures","finalFailures","totalFailurePercent","finalFailurePercent","showFailuresAndGapsOnly","buildMatrixData","PARTITION_MATRIX_STEP_RUN_FRAGMENT","InitialDataState","loadingCursorIdx","skipQuery","version","dataState","setDataState","_serializedRunTags","runTags","stopIdx","nextCursorIdx","sliceNames","partitionSetTag","partitionTag","runTagsFilter","fetchRunsForFilter","fetched","concat","timer","recent","statuses","pending","relevant","byName","assemblePartitions","PARTITION_STEP_LOADER_QUERY","explodeComposite","handles","handle","inmap","solidName","outmap","nested","handleID","interiorTarget","matchingInput","matchingOutput","removeLeadingSpaces","leadingSpaces","_container","hasMore","expanded","updateHandleState","sel","createRange","selectNodeContents","removeAllRanges","addRange","Mask","ShowMoreHandle","buildSVGPaths","weakmapMemoize","sourceOutput","targetInput","outputIsDynamic","outDef","isDynamic","inputIsDynamicCollect","inputDef","isDynamicCollect","OpEdges","DynamicMarker","PX_TO_UNITS","clipToLength","len","SVGMonospaceText","allowTwoLines","lineChars","line1","line2","line1Y","pointerEvents","dominantBaseline","ExternalConnectionNode","labelAttachment","onDoubleClickLabel","textProps","textSize","intrinsicSizeForProps","textOrigin","BackingRect","cx","cy","rx","ry","strokeWidth","MappingLine","leftEdgeX","strokeLinecap","ParentOpNode","parentLayout","highlightingProps","onClickOp","SVGLabeledParentRect","destination","sourcePort","trgtPort","invocationInput","iidx","invocationOutput","NoOp","OpGraphContents","focusOps","parentHandleID","onDoubleClickOp","onEnterSubgraph","highlightedOps","selectedOp","EmptyHighlightedArray","OpGraph","argToOpLayout","arg","lastName","centerOp","focusOnOp","unfocus","_e","nextOp","cancelAnimations","onClickBackground","OP_GRAPH_OP_FRAGMENT","TypeExplorer","inputSchemaType","outputSchemaType","tableSchema","TableSchema","TYPE_EXPLORER_FRAGMENT","TypeExplorerContainer","typeName","buildPipelineSelector","TYPE_EXPLORER_CONTAINER_QUERY","dagsterTypeName","dagsterTypeOrError","TypeList","types","Custom","isBuiltin","groupTypes","typesForSection","StyledUL","TypeLI","TypeWithTooltip","TYPE_LIST_FRAGMENT","TypeListContainer","useRepositoryOptions","reposWithMatch","findRepoContainingPipeline","optionToRepoAddress","TYPE_LIST_CONTAINER_QUERY","dagsterTypes","StateColors","SidebarOpExecutionGraphs","highlightedStartTime","setHighlightedStartTime","SIDEBAR_OP_GRAPHS_QUERY","solidHandle","executionTime","SidebarOpInvocation","showInputs","showOutputs","SIDEBAR_SOLID_INVOCATION_FRAGMENT","SidebarOpContainer","getInvocations","showingSubgraph","pipelineResult","SIDEBAR_PIPELINE_SOLID_QUERY","graphResult","SIDEBAR_GRAPH_SOLID_QUERY","solidContainer","graphOrError","useSidebarOpQuery","SidebarOpDefinition","onClickInvocation","SIDEBAR_SOLID_CONTAINER_FRAGMENT","SIDEBAR_SOLID_DEFINITION_FRAGMENT","SidebarOpContainerInfo","SidebarModeSection","SIDEBAR_OP_CONTAINER_INFO_FRAGMENT","SIDEBAR_MODE_INFO_FRAGMENT","SidebarTabbedContainer","tab","opHandleID","parentOpHandleID","jobContext","GraphExplorerJobContext","activeTab","TabDefinitions","sidebarTab","Tabs","selectedTabId","TabLink","RightInfoPanelContent","SIDEBAR_TABBED_CONTAINER_PIPELINE_FRAGMENT","GraphExplorer","pipelineOrGraph","parentHandle","nameMatch","setNameMatch","handleQueryChange","handleAdjustPath","fn","handleClickOp","handleEnterCompositeSolid","last","selectedName","selectedHandle","invalidSelection","invalidParent","solidsQueryEnabled","showAssetRenderingOption","explodeCompositesEnabled","explodeComposites","breadcrumbs","QueryOverlay","BreadcrumbsOverlay","currentBreadcrumbRenderer","OptionsOverlay","HighlightOverlay","selectedHandleID","onLeaveSubgraph","RightInfoPanel","GRAPH_EXPLORER_FRAGMENT","GRAPH_EXPLORER_ASSET_NODE_FRAGMENT","Color","fade","toString","LargeDAGNotice","LargeDAGContainer","LargeDAGInstructionBox","EmptyDAGNotice","CenteredContainer","capitalize","EntirelyFilteredDAGNotice","LoadingNotice","LoadingContainer","NonIdealPipelineQueryResult","PipelineExplorerSnapshotRoot","PipelineExplorerContainer","explorerPathToString","parentNames","PIPELINE_EXPLORER_ROOT_QUERY","snapshotPipelineSelector","rootHandleID","displayedHandles","assetNodesPresent","definitionName","truncationThreshold","truncatedName","workspacePipelinePathGuessRepo","ENABLED_FILTERS","PipelineRunsRoot","useQueryPersistedRunFilters","filterTokens","setFilterTokens","permanentTokens","allTokens","useCursorPaginatedQuery","PIPELINE_RUNS_ROOT_QUERY","runsFilterForSearchTokens","nextCursorForResult","getResultArray","onAddTag","tokenAsString","tokenToString","enabledFilters","tokens","SidebarSection","onToggle","CollapsingHeaderBar","SidebarTitle","SectionHeader","SectionSmallHeader","SidebarSubhead","SectionItemContainer","resource","ContextResourceContainer","ContextResourceHeader","loggers","logger","ContextLoggerContainer","ContextLoggerHeader","Plugin","isComposite","requiredResources","requirement","resourceKey","outputDef","AssetNodeListItem","InvocationList","invocations","showAll","setShowAll","visible","clipped","ShowAllButton","TypeWrapper","OpLink","Invocation","handlePath","InvocationContainer","DependencyRow","Cell","DependencyHeaderRow","DependencyHeaderCell","ResourceHeader","ResourceContainer","DependencyTable","OpColumnContainer","JOB_OVERVIEW_SIDEBAR_QUERY","metadataRows","onOpen","startCase","notebookPath","repoLocName","usePortal","src","sandbox","seamless","sql","topBorder","ipynb","snowflake","kindMetadata","generic","LogLevel","DefaultLogLevels","Row","level","bgcolorForLevel","StructuredContent","OpColumn","widths","ColumnWidthsContext","OpColumnTooltipStyle","TimestampColumn","TimezoneContext","timezone","TimestampColumnContainer","timeNumber","locale","language","main","toLocaleTimeString","hour","minute","hour12","timeZone","browserTimezone","fractionalSec","toLocaleString","minimumFractionDigits","maximumFractionDigits","timeString","EventTypeColumn","EventTypeColumnContainer","eventType","OverflowFade","OverflowButtonContainer","OverflowButton","CellTruncationProvider","isOverflowing","contentContainerRef","onView","defaultExpand","detectOverflow","firstElementChild","forceExpandability","LogsRowStructuredContent","FailureContent","failureMetadata","errorSource","StepUpForRetryContent","logCaptureSteps","DefaultContent","currentQuery","updatedQuery","logType","logs","eventColor","eventIntent","typeCheck","success","expectationResult","AssetMetadataContent","operationResult","logKey","rawLogsUrl","rawLogsLink","stepKeys","eventTypeToDisplayType","contextMessage","errorStack","errorCause","ErrorSource","cause","errorCauseStack","DagsterEventType","assetDashboardLink","styles","Structured","StructuredMemoizedContent","LOGS_ROW_STRUCTURED_FRAGMENT","Unstructured","UnstructuredMemoizedContent","LOGS_ROW_UNSTRUCTURED_FRAGMENT","LogsScrollingTable","filterKey","filterStepKeys","table","onWidthsChanged","didResize","AutoSizer","LogsScrollingTableSized","filteredNodes","allNodes","logNodeLevel","levels","sinceTime","hasTextFilter","logQuery","textMatchNodes","hideNonMatches","filterLogs","LOGS_SCROLLING_TABLE_MESSAGE_FRAGMENT","cache","CellMeasurerCache","defaultHeight","fixedWidth","keyMapper","rowIndex","clientsideKey","isAtBottomOrZero","scrollToBottomObserver","atTopAndStarting","atBottom","scrollToTime","alignment","iterations","getOffsetForRow","scrollToPosition","rowRenderer","focusedTimeMatch","textMatch","lastRowStyles","noContentRenderer","ReactDOM","attachScrollToBottomObserver","recomputeGridSize","clearAll","listEl","lastHeight","MutationObserver","rowgroupEl","querySelector","attributes","subtree","ListEmptyState","deferredMeasurementCache","rowCount","rowHeight","overscanRowCount","measure","contentRect","ColumnWidthsStorageKey","ColumnWidths","getJSONForKey","ColumnWidthsProvider","onWidthsChangedFromContext","columnWidths","localStorage","setItem","Provider","isDragging","screenX","onMouseMove","onMouseUp","onResize","handleSide","isDraggable","HeaderContainer","HeaderDragHandle","HeaderLabel","Headers","HeadersContainer","NavigationBlock","handler","returnValue","CancelRunButton","showDialog","setShowDialog","closeDialog","terminationState","stepSelectionWithState","stepStates","failed","finished","stepState","canRunAllSteps","canRunFromFailure","executionPlan","RunActionButtons","artifactsPersisted","canLaunchPipelineReexecution","pipelineError","repoMatch","useRepositoryForRun","matchType","repoForRun","repoLocationForRun","usePipelineAvailabilityErrorForRun","currentRunSelection","stepSelectionFromRunTags","currentRunIsFromFailure","full","scope","same","StepSelectionDescription","fromSelected","selectionAndDownstreamQuery","selectionKeys","fromFailureEnabled","preferredRerun","RunAssetKeyTags","clickableTags","showMore","setShowMore","assetCount","hidden","RunContext","timingStringForStatus","LoadingOrValue","TIME_FORMAT","RunDetails","startUnix","endUnix","RunConfigDialog","workspacePathFromRunDetails","RUN_DETAILS_FRAGMENT","RUN_FRAGMENT_FOR_REPOSITORY_MATCH","RunFragments","RunFragment","RunDagsterRunEventFragment","RUN_METADATA_PROVIDER_MESSAGE_FRAGMENT","BOX_EXIT_STATES","RETRY_REQUESTED","SUCCEEDED","FAILED","UNKNOWN","firstLogAt","mostRecentLogAt","extractLogCaptureStepsFromLegacySteps","fromTimestamp","ts","stepStatusToStepState","RunMetadataProvider","runMetadata","stepStat","transitions","attempt","extractMetadataFromRun","upsertMarker","unshift","upsertState","RUNNING","markerStart","pid","PREPARING","extractMetadataFromLogs","RunStats","RUN_STATS_QUERY","RunStatsDetailsContainer","runPath","stepsSucceeded","stepsFailed","expectations","RUN_STATUS_COLORS","QUEUED","NOT_STARTED","STARTING","MANAGED","STARTED","CANCELING","CANCELED","SCHEDULED","RunStatusWithStats","RunStatusIndicator","RunStatusDot","pulse","pulseAnimation","keyframes","css","statusToIntent","statusToString","RunStatusTag","RunStatusTagWithStats","initializeState","frozenRuns","deletion","completed","deletionDialogReducer","prevState","DeletionDialog","onTerminateInstead","runIDs","terminatableCount","DELETE_MUTATION","destroy","runList","deletePipelineRun","canQuicklyClose","progressContent","errorCount","successCount","completionContent","errorText","reexecution","reexecutionDialogReducer","ReexecutionDialog","reexecutionStrategy","LAUNCH_PIPELINE_REEXECUTION_MUTATION","reexecute","reexecutionParams","parentRunId","strategy","launchPipelineReexecution","ReexecutionStrategy","RunActionsMenu","RunsQueryRefetchContext","visibleDialog","setVisibleDialog","canTerminatePipelineExecution","canDeletePipelineRun","copyConfig","useLazyQuery","PIPELINE_ENVIRONMENT_YAML_QUERY","loadEnv","called","closeDialogs","pipelineRun","infoReady","OPEN_LAUNCHPAD_UNKNOWN","repositoryLocation","getReexecutionVariables","download","RunBulkActionsMenu","unfinishedIDs","selectedIDs","deletionMap","failedRuns","failedMap","reexecutableRuns","reexecutableMap","nonIdealState","highlightedIds","canTerminateOrDelete","anyFilter","anyPipelines","findRepositoryAmongOptions","selectedFragments","RunRow","additionalColumns","additionalColumnsForRow","pipelines","pipelineOrJob","assetKeysForRun","RunTags","RunTag","actions","isDagsterTag","Namespace","displayedKey","Backfill","ScheduleName","SensorName","tagElement","TagActions","hoverCloseDelay","ActionContainer","priorityTagSet","displayedTags","priority","__ASSET_JOB_PREFIX","stepKeysToExecute","cb","preserveQuerystring","createHref","getBaseExecutionMetadata","hiddenTagKeys","rootRunId","asset_key","TERMINATE_MUTATION","RunTime","updateTime","RunStateSummary","RUN_PROVIDERS_EMPTY","tokensAsStringArray","tokenizedValuesFromStringArray","RunsFilterInput","RUNS_SEARCH_SPACE_QUERY","performQuery","suggestions","repositoryOptions","pipelineRunTags","pipelineNames","searchSuggestionsForRuns","suggestionProviders","suggestionProvidersFilter","limitedTokens","presentLimitedTokens","provider","mustForce","termination","terminationDialogReducer","policy","TerminateRunPolicy","terminatePolicy","terminatePipelineExecution","onToggleForce","showCheckbox","TimeElapsed","setEndTime","interval","clearTimers","fontVariantNumeric","typeValues","getRunFilterProviders","stepNames","cursorStack","setCursorStack","queryVars","resultArray","nextStack","RUN_STATUSES","SchedulePartitionStatus","scheduleName","partitionPath","partitionURL","SCHEDULE_PARTITION_STATUS_QUERY","scheduleSelector","retrievePartitionStatus","partitionFragment","scheduleOrError","RetrievedSchedulePartitionStatus","loadable","partitionStatusesOrError","partitionsByType","displayStatus","runStatus","calculateDisplayStatus","SCHEDULE_PARTITION_STATUS_FRAGMENT","SCHEDULE_FRAGMENT","REPOSITORY_SCHEDULES_FRAGMENT","REPOSITORY_INFO_FRAGMENT","SCHEDULES_ROOT_QUERY","INSTANCE_HEALTH_FRAGMENT","SchedulerInfo","daemonHealth","healthy","schedulerHealths","allDaemonStatuses","daemon","daemonType","schedulerHealth","required","SchedulesNextTicks","repos","nextTicks","futureTickSchedules","futureTicks","minMaxTimestamp","NextTickMenu","tickTimestamp","SCHEDULE_TICK_CONFIG_QUERY","loadTickConfig","evaluationResult","futureTick","menuItems","NextTickMenuItems","onItemOpen","NextTickDialog","runRequests","runRequest","selectedRunRequest","setSelectedRunRequest","close","SkipWrapper","RunRequestBody","runKey","SchedulesTable","partitionStatus","ScheduleRow","errorDisplay","runningScheduleCount","popoverClassName","runningCount","tooltipTimeFormat","userTimezone","TabularNums","timestampToString","TimestampTooltip","DEFAULT_TIME_FORMAT","EditCursorDialog","sensorSelector","setCursorValue","isSaving","setIsSaving","SET_CURSOR_MUTATION","requestSet","setSensorCursor","sensorName","humanizeSensorInterval","minIntervalSeconds","SensorDetails","targets","isCursorEditing","setCursorEditing","pipelinesAndJobs","targetCount","targetNames","pipelineOrJobLabel","lastCursor","PageHeader","SensorSwitch","nextTick","SENSOR_FRAGMENT","SensorInfo","sensorHealths","sensorHealth","SensorsTable","SensorRow","TypeLink","TypeName","outlined","S","as","intentToFillColor","$strokeColor","intentToStrokeColor","$textColor","intentToTextColor","placeholderTextForItems","seed","ranked","incount","sum","outcount","example","setActive","pendingValue","setPendingValue","lastClause","lastElementName","solidItem","lastElementLower","matching","buildSuggestions","onConfirmSuggestion","suggestion","preceding","nextIdx","nextText","OpSelectionWrapperDivRef","clickListener","OpSelectionWrapperDivElement","inputElement","shouldWrapperGetFocus","uncomitted","flattenGraphsFlag","opCountInfo","OpCountWrap","$hasWrap","enforceFocus","strokeColor","autoApplyChanges","blur","EnterHint","OpInfoWrap","nextProps","renderError","blankLoading","setBlankLoading","networkError","LoadingSpinner","isPage","grow","StyledMenuLink","iconWithColor","getTabA11yProps","getTabContent","titleText","tabCSS","Remark","remark","use","gfm","toPlainText","markdownCache","LRUCache","md","cached","processSync","ReloadAllButton","canReloadWorkspace","useRepositoryLocationReload","reloadFn","reloadFnForWorkspace","errorLocationId","onTryReload","onDismiss","origin","repoContainsPipeline","snapshotMatches","pipelineNameMatches","possibleMatches","repoAndSnapshotMatch","repoOption","Alert","iconColor","AlertContainer","$borderColor","AlertTitle","AlertDescription","ButtonWrapper","isActive","buttonElement","DagitCodeMirrorStyle","Icons","makeThemeString","StyledReadOnlyCodeMirror","StyledCodeMirror","renderTypeRecursive","innerIndent","DictBlockComment","fieldData","keyDisplay","DictKey","defaultValueAsJson","DictEntry","ConfigContent","Optional","ofTypeKey","keyTypeKey","valueTypeKey","keyLabelName","nonScalarTypeMarkup","scalarTypeMarkup","prettyJsonString","ConfigHeader","ConfigJSON","typeInScope","TypeSchemaContainer","DictComment","CursorPaginationControls","CursorHistoryControls","MainContent","StyledMenu","intentToIconColor","StyledMenuItem","MenuExternalLink","MenuDivider","BlueprintMenuDivider","BlueprintMenu","BlueprintMenuItem","StyledTable","pair","MetadataKey","MetadataTableWIP","singleContentElement","Page","tabs","PageHeaderContainer","popoverProps","deepmerge","Slider","StyledSlider","BlueprintMultiSlider","BlueprintSlider","onChangeSize","getItem","resizing","_size","firstPaneStyles","firstSize","PanelDivider","onSetResizing","parentRect","firstPanelPercent","DividerWrapper","HitArea","DividerHitArea","FirstOrSecondPanelToggle","SecondPanelToggle","prevSize","setPrevSize","initialIsOpen","Count","$size","findProviderByToken","providers","tokenizedValuesFromString","tokenizedValueFromString","colonAt","tokenizeString","TokenizingField","externalValues","maxValues","onChangeBeforeCommit","addOnBlur","fullwidth","suggestionRenderer","typed","setTyped","typedValue","atMaxValues","filteredSuggestionProviders","lastPart","suggestionsArr","matchesTypedText","availableSuggestionsForProvider","suggestionFilter","final","firstPart","nextItem","onConfirmText","menuRef","block","renderSuggestion","shouldDismissPopover","StyledTagInput","inputValue","onInputChange","tokenized","$maxWidth","onAdd","picked","tagProps","alignSelf","TagInput"],"sourceRoot":""}